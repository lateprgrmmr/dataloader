%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: nomis_sample.pdf
%%Creator: (Adobe Acrobat 20.13.0)
%%For: kevinbratt
%%CreationDate: 11/29/20, 6:40 PM
%%BoundingBox: 0 0 612 792
%%HiResBoundingBox: 0 0 612 792
%%CropBox: 0 0 612 792
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1076 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c017 91.164464, 2020/06/15-10:20:05        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:ModifyDate="2020-11-29T10:13:39-07:00"
   xmp:CreateDate="2020-11-29T10:13:13-07:00"
   xmp:MetadataDate="2020-11-29T10:13:39-07:00"
   xmp:CreatorTool="PScript5.dll Version 5.2.2"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:6d6223e1-a64b-aa4c-a8e3-79bb11df8279"
   xmpMM:InstanceID="uuid:edd56aa6-c935-484f-8a05-60ef6086b31c"
   pdf:Producer="Adobe Acrobat 10.1.16 Paper Capture Plug-in">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">al.fm</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>kim</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -792 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 792 li
612 792 li
612 0 li
cp
clp
312 247.14 mo
313.02 247.14 li
313.02 211.68 li
312 211.68 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
312 247.68 mo
563.52 247.68 li
563.52 246.66 li
312 246.66 li
cp
f
563.04 247.68 mo
564.06 247.68 li
564.06 212.16 li
563.04 212.16 li
cp
f
312.48 212.7 mo
564.06 212.7 li
564.06 211.68 li
312.48 211.68 li
cp
f
48 421.02 mo
49.98 421.02 li
49.98 278.04 li
48 278.04 li
cp
f
48 422.04 mo
298.98 422.04 li
298.98 420.06 li
48 420.06 li
cp
f
298.02 422.04 mo
300 422.04 li
300 279 li
298.02 279 li
cp
f
48.96 280.02 mo
300 280.02 li
300 278.04 li
48.96 278.04 li
cp
f
48 53.22 mo
564 53.22 li
564 51.24 li
48 51.24 li
cp
f
%ADOBeginSubsetFont: QCAAAA+Arial-BoldMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (QCAAAA+Arial-BoldMT)%%Title: (QCAAAA+Arial-BoldMT Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /QCAAAA+Arial-BoldMT def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-628 -376 2000 1010} def/FontInfo 4 dict dup begin/FSType 8 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 3381 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 50 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A936AA182F5809A9> |23 <001C60D8A8C9B7EF322420EF37EFA369A3E85A331727D2F56920FCF46D3327836C76686B8F0BA24C80FBB8E8161AC7300D3EA839C9098E33542E> |3 <001C60D8A8C9B854D00D> |38 <001C60D8A8C9B6079F6DE2AEDD76F722AB1905C7EE1983D1040F12090A2B6BB93FD7976832C00E38F0C4C79BDBC9D981E45F6BB26E1DD13A0FA297509E8F73D8E4A29558A673AA886D0B1CE2BDB03B1E58D12F23798709409D59C03EBEE5D9CA02E1DEC19C7936D25A234D617C91BF02C16AA27F9D6F9EC37F9EB080F7BD6AF1EE128160DD9B3DB18FE4> |36 <001C60D8A8C9B6079F6DCA0663EB737730AA5B536F6C6DD813B60E66ABDF76C173FB0AA7AA75663A2785C98A4A4A611F61872CB7CA29BB> |47 <001C60D8A8C9B7D8BE1956BCE10252E2B5E44265236D2FAF854B3B3BF8> |40 <001C60D8A8C9B64EDFFB871F4BC81FBDF202F74A2A9990666F4653F156EEAFD5D786BB69DEDB8B2E0A95C5AFB0A097> |53 <001C60D8A8C9B6079F62C490F8C1A9447E753B366F00BE2E6D6A1AEC57FEFC5F04FB7246489EDF70068115D0A2805C8D6EC79F6064E7969601096F448222EBB1DD7F1F6323EF89F566062038A8AC4D6CAD80E8B896F19CFFFE99D83DBA0C0E40A706B7FE43A7E0AA62F51DDB688D792B5246324FF62981CEA7E6D7B38DF1C5C95D599B2DC4BC9304A423DA3839EE77DFF504E2ADB006C72F6FEA3F44E88D7A> |16 <001C60D8A8C9B81F2C3A6131F04EDA09D4A0094DA9D5AC81D0> |39 <001C60D8A8C9B6079F41181AF4EB36AA0D0A9CB43D77E9AB20A6E8CC956A65DB49EB6635E16A93399048C7FF414644050887228FE6A7D0206D976F49A17D261AA33D3EBB94BE961959DEF2B6629671CF61014D6F7BD7E457F47E2A8118C52D305371EF3BCBDE1CFFB87BA758D818C2C45B8180F337D5F9BDA254CBE936AECDBA1BA66E23577AFD9B2756741C424503> |55 <001C60D8A8C9B7D8BE19809EC35BBBBC4A9DCDD5AC6ABFFD5901D001A83F8CD3372E99> |56 <001C60D8A8C9B6079F41F9B95643AF5FE903607C9DACFA3D3EA8C772ADAD2BCF4F6C9F19145BD925A2E09FA3F05182DCB7E2A8D036B1883E3E84C4FC05168672CF3B3570296CAFE67AB568F4A4000AF4E9956CF6B41F4848D12A0B39BA3788A5178EB70302C775647AAA251C8AD614222C0E2945CC3654CF588C9F3A47F16FC9> |79 <001C60D8A8C9B854D0F4565C5D96D196F316A2594284F4> |68 <001C60D8A8C9B7EF322B767253CD3BE18E6883E9BFEE680E471A3E543E6B629FFE599C78BF6E9BC360B4FD3F4193BE88F8A133134BAA650EBC31A9DBCA73D443463241F1A95A036612031AED6950283B0D14D29C497685C55C7946BF118B40E370FC30C35C6DDC0B89863AEC8E7000DED8B394346462262BD43999923C02BB76E45D38F5FACA7247DBA2EBA6371EEFDE7DB20E4C849532AD601D5FE565E2F9524F3166F0EDA1C9CBD6F2D9FAE6CBD991E5FC9CACD3E5ACCC612FA46CAB683778C9E93119C2E309BBBA2FB6B108D4ACC24630A4E27912F2F48E37DD6F256C920ECC30772CD6DD1CCCB84D330E3FAA> |69 <001C60D8A8C9B7D8BE1671B6042109CDB81BD17EE7497C90F9ACDA9D163ADAFA6361E188897A4B68FD4101C0DFF9827C3E0810E4C104ADB26FCFB7392E3E66FDF7A9C86FBB82D51B276A3D658E1330F7C5C615410686D27E44BA9CDCA4212076F89ABD511F1956BE19FF29EE6CBCC95AE9285DCCADBA7BCF7A3124FE7D2BC7C3485D1834390BEE8C> |80 <001C60D8A8C9B59F85D96BFFA227AFC88923A0D1805E73B422C61096C748C37D1E540D36A22F2B6BC6A899BC0DDFB70F833AC344264273BAAFC893B1FC9ED217D777A23EE663B8B086E0514F75141042C5D3D73DD911F2D1CAF8A5CBE36BAF59E972B9B495DB672C658FCC56CEAEBD4AEC19A01E1468C48C0E75D0E664717269A1A74C27B1C65DA4B01A0679EBF4AA6549A7814A2C66FB097D4B1C6FCCF629A056E668289EBF7379F0E89EA139501E> |21 <001C60D8A8C9B7EF322B68B7BD8B564E65606B3ECFDA3CF1C113B12ACD32BC208D21D65A9D5F1A36C627279F72BBD1E489FE934B8EA91C0B22CC04AF790ABB762A12D20E14A89D5E2D346829E8E44E89FC9C01BC229BB02B65FE36172AA8EFAE28201356B4ABF89BDF14F3CBAA6E2EA7868D0C0671836D5438B987E57A816B316849EE062174D581D7765E3841B5A6190F> |19 <001C60D8A8C9B7EF322B11E05FFE0ABE458B5B9D35BBFC9E2424C903BE59618B38E770A10C557A7DAE4AF9B8974394BA7F6EE79F19BF1E52D3E917E0A6652967CACD0A43E8D50F6DFAA8B81A509D916F7A1FFF849E9EEF6A6C7C97617E80EAD144F5EB715CA405BB88C384856785F5DC7E249F1CE4206AB9FF2DC6A477BA5E9A3CC216B8CE053099E2B49A7D6F9098F44038145BD1695A4452EF4FDA86F7658A5BE1DEBEAF> |20 <001C60D8A8C9B7EF32246DE93FF74C5C54EDFF42340E4AC32DE2C1D44EB6EC091E31C85F92A02DF27893D65CF643F317F2> |41 <001C60D8A8C9B7D8BE164A384446DA6B7BAA798AC9D25A30491D373B778ABEDC450E08B3A2A56A100F> |88 <001C60D8A8C9B7D8BE193D97D4CEC9E264886B4FEB6039471A932F20C88E939BABF490859EEC52AD38B7ED294F8DF2A47649EF77BF43349A736D065D0A253D952638D54F7BA1B47314F68FC1495C51454777F8F9475426838BE461BAFE9BF3E443E03AAD9292AF57449A5275904AD9> |81 <001C60D8A8C9B7D8BE193B13518E6892DBA9B266D0A17D5C8CBB8FCA3DEC31FFDE21FB19188C5C709BB859EE16635D8123C09E9F6380448F624FEDEAFC78CB8E4436A865BB0CB81152FE1F90E6EB1DE7D9B62F15D5F2855507D6B695B1CC6AFD11F003818163793142F6A0F46BD84EFADF> |72 <001C60D8A8C9B7EF322BF270AB151730C1576B3DBF6DAC6B05EF7C7C2AC3550E4D7D76EEB5EC00E2AE0B63EA674701E41362C9EF4C943E6044930A81C0288C730E9CD4222EC82D37FE43450E9A846C17FEBAA9742B3180B655FFA4E0E014EF214E09E7DE6E45A7476C6DEA21B47E198DDC2AD648DA39E6CBF2981071855AA94524E4E0809AB2B25573430347DD> |85 <001C60D8A8C9B7361F02EEC91E54B85D1C77E667FE2BCF3D09A421FBF63CB630EA2A0B7B19FFD8078B4DB5A7731C633809BCAB3FF296D65B89F29DE6B6DB35AA635F12FEC0F1664A8FB613C79352FA72> |43 <001C60D8A8C9B6079F62C490F8B363FF19A3781C29D5570EF5D5A716BB35758C02EF9D91F0CEA78D1860E5A66A118D> |82 <001C60D8A8C9B7D8BE34A30C11766266259B98A0BA89715D82F7092153A6228252D7594BDD75B2A7C57DC89088F8B1FFC43993725AE434A67B356F5F6B64D528A1696640F00DD016EBC232B8C863EA85B4B724E805002B9447A61792050E5F2AB51B8800BF6303526C74FB360B7027D54FFCEDAF13BF8EA7CB1A81691C0A4FB25E1EA64C0904433C6A5F35BBF9DD5C4CBFC1A5> |9 <001C60D8A8C9B6079F6C9B890233EFDAFCB92C2801DD0DFF088DAEA7479B746FF4D63C3EEC3B75490E4BD46EFEC1CC48C3E086CFCAECFA51D4DFBD4586C7D18A2D50387F7CC0A8CBB56CD924C6683698B06F3275C4D2FAFC7F0150BEEB9A7EAC38A1D044BEFF70C1976450B69F82CA632BE5E63CFE9C0125583E43E53E539FF7D66219C2D51D270690AED6F91DE3008B084F6941C3760C48D27F777CE9F4CCB247431EB119DBF9B696498069E691F03B5C8090408D1AA51DF0D043F99CC32D392CCCAFAED5C337F0B0049B9FD2FFF7E1287AA35E7B3F06710BD7CCD498DB4474A718B95E024069DEAF2ED6D9CF1BC3EBE08C508DC691264C8A491FEE46D753822B366D6E262CC508FF> |87 <001C60D8A8C9B81F2C3AD0BF8CA40D7105A9B3D27345F202DEBDE44606EFD0E90137AE13DC9D19FB7B4ABCA40FDADEB59FF02A690A47D6F26E8BDAADCFC0513C14FCD80BF39C6AFCEFE1132622D45FBB576E32F86682C5BCCAD00B4E7E375350009EFCA5AC835906F56B697B29> |92 <001C60D8A8C9B7EF322B7536945647B4BA07C8DC342FF58A782AE941212DA936B500226D637B658433D28B8CA55D32CD6B9B1269E0231AED7EEAE92EA48D1AB958BAD61D13401B6A794D4ED73191B8ADB547A985247846F2CB1E080C4F3C74337DE0> |76 <001C60D8A8C9B854D0F456B21D2F64F910BA7B8B592C84A4B1CA21D58F6678BEC800D8864E53D53A> |70 <001C60D8A8C9B7EF32242001ABD2AFBBD336641D8D7284783472C96CFCC434DFC100FC24422711A9090DEA4D32109037578992AFF27835B7F260887A799CBA44C497ED942D76A3A4BD63536DE6F757481EB22D2DEF055F331ED9622202739AC583596554B76ADC212E19C7FBCE810B4022B5DAB3AF3C114AF2730DCBE9D35CB6B42E872730D77BAB> |177 <001C60D8A8C9B7EF3224CEB0829DDD7E2067687B309206> |54 <001C60D8A8C9B64EDFF4DB3154EF1496D6E24F0CAC281A26842F998257597280DD1E6498DF18A9DA7D721D169321D8C5E0431AC7382FA4310DC48BBF78710C6BC5247040A24ACAC01421F5FBDE686580BE547F54A1AA74DC005E8E5CD476A95687DB199C1234EC19B3DCC9809D20AF7E582B47F9C3146B190D9EA96357C8C75B37ED0E8A0609D6AA98D6ECE5CCE67035EEBD2539BAF0BB0A05B823E40DDAE9B8EE162F6E47FABB31D9FF0B75F8D71F52C148E77FE80FB24454F3884141B009620C0B57EC496B1B9A1D8EA8A41DD33836FFD894AD961F351294F76A> |75 <001C60D8A8C9B7D8BE30E20DCA6EE6AB6CC3B52F6392A45738EC6E57C5FD4B5006DD4CC13130165A71E6C8AD32848FD70F464465300BAF67B8EDC5E52749AF8D970E7EFFDCC8EF63F6AB31364E59004A6FCF5A143C0BB48A0AC6C4FDED1312DDD5BAEDEFE14256E656A094680FE5979938> |18 <001C60D8A8C9B854D0ECBF3425DC18C032896F6CB4D567DE120B> |24 <001C60D8A8C9B7EF322B1E263547A2C3DC5E265FD0C85254FBB08F67572BAEA774E2C9B849E3F8B2719F02F5CA7D065CDC71B7C1F75853FD8A11429A64961BA5619910F273C4D45A9F37C36DF26958450F67529F6031CF00FE3CEBD48D28D54223A5CF07B3FA23834AB6F627A08381EC1EF5CE1A40B1CBA99CFFD876F0F4DD808DC1915F5186CA2ABF34> |62 <001C60D8A8C9B81F2C3A74E3FF443ACC64A9D428AA7940D93F8C2DE3B95699B36EC5FD77F6> |64 <001C60D8A8C9B81F2C50806A91475FC8317879855DF2D95042B38F2132250C9CEA937E> |48 <001C60D8A8C9B6B41CBB10CBFB014CB2DAA60D1E6213C9A6221D8277F76E5B198F877B8BD7F16B9ED33B8CC69F5CB1810DCABD4C90C49E0AA0E1EE> |49 <001C60D8A8C9B6079F62C9987F84E4134982EC7DC1D10493D0EA10EC91B7066F22B9AE4CCA87C378409CD65C60> |58 <001C60D8A8C9B5D6EF426B7217FEEEE61F478CB0D93BCB9F5136FC9DE881530058B00EED488C98C725E7D087D1A690AB16A11F6F46409BFE58D76932B9B20729CB> |91 <001C60D8A8C9B7EF322B2F5C1A3006093EF821CFB8EEC448BAC2558676A15C34F8B668902BE5E0FC2E5DDA8A5B7BD49832847B77EDB26628EA3C9B> |22 <001C60D8A8C9B7EF322B11AFD403834AA517B3BBED643191F55B27328FEB63F451B0BE1F10D9D06479DDD68A3F11CA764AA5C6CBF0B5C7F1C301A6A5915C8FAEA13725EF990CAE8647E21075E73CDED65FE63CABC49E17A0A9B1472FC5FEA356BED7487BBD0F11BE9FC7F02BAC4CE5305FC3A8F1C2CD653A5CD19861BE7E9E1ACF93076B65DD47275F1EE66A142E3CAEAC4BF0ACC3175BC0B6E6C74B14074CF18266AE35F9C580DC1CFAF9059882B070FDC40AC7466F256163FC8A2FCD990A19F67EEB3B7512CC0EEACA> |26 <001C60D8A8C9B7EF322BE25872D07BF0FBC6DC5BD47F6A1EF38EE0B754F92734BDD12F62CB36B20571CD7DB3C771C60A46C62278672D3C8EC18A7B3DA2FB> |15 <001C60D8A8C9B854D0CCE467ABC5F9CA3149CC86D1F30B00AC0AF268E9270F77E8941D13EC1C92D9CA566824164CFF8E0F28AE18E97CBA918AF6> |51 <001C60D8A8C9B64EDFF4BBA9405C68CB1D32394A0B35B38FF15650A7F4CA980D304B0E82F2EE31DE1B207C9690A7D1CE7998A46A2671A721A2721266CDB3CB7162FB8735F8901B59D497FC48B1C8BA82BBC82DEF38A7FA67F275089B99C047F77478B3299CF33148E1E790C5C7235CAB593CF69659FDEE7364A65AC06E6296> |44 <001C60D8A8C9B854D0F45A9260868E9F30993A194AB723> |83 <001C60D8A8C9B7D8BE2E8563B32C07DCC3804272870E069E443B687857C9ACB5C7CA1CF4F6A17C25172CC3E3E31B65AB87A5F695EADCB9429C1CB7981C750B5DB31D41989E5AF25C22D1AF173045FD1E2E798D136DAECB194448D3991450715E7374AE8B43D8B50AD9D750A67743A1F2A35DFF73BE71D039D15D8530023A7DA074A0D1B66504E092406A88A86DBDD558> |86 <001C60D8A8C9B7EF322FE651D521834CDC537E3DD6EDE0ABF561677B8E076DDC9728066ABB56D1B743872DFE7AE020F0764CE3958A51AA0338BC1551D98AE3FB37FA10E152AF1ED0A626D6C892D666067C463296034FB47068E23F64D99406EC5C2C17229C4A63CE0EFA8720ACDB7F7406ADA1BC78971EA6415F061291692781A355051246F6EE6DC9DD910EE9B57ECB7AA0A970570176A3D15D1E3F2012D47AFFA014792503A125E8700D4C4B9A85575792648D6CE60E59BBF3015C0285B0> |25 <001C60D8A8C9B7EF32243B47A738553BCD911E045232FF427B0D2322D005AC212684EF8939E7A4FE3F810A5B63FDDD685DED9AF210F2FDD18247854CDC08A1B17DC7EF8C064C499E45F6794994535438AE247475E85A11BDD38500DFD7F4683AE0B3748074DEA216FEEC52277944DC648ACE00FD92AE130F2DB8E52F2F23BB9FEB26CF73F92E018D6720DA192F54748264981989AF27C49789BE1A8E18B2EEBC6DB6B73A0F45658D69D6DD4A617F6EEA1F462428AFED358086F88EF0EB> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /QCAAAA+Arial-BoldMT-Identity-H /Identity-H 0 [/QCAAAA+Arial-BoldMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/LTQVUW+Arial-BoldMT /QCAAAA+Arial-BoldMT-Identity-H findfont ct_VMDictPutLTQVUW+Arial-BoldMT [9.96 0 0 -9.96 0 0 ]msf48 45.454 mo(\000\027\000\003\000&\000$\000/\000\(\0005\000$\000\020\000'\000\(\000&\000$\0007\0008)[5.56572 8.27184 7.21909 7.21909 6.11345 6.67136 7.21909 7.21909 3.34457 7.21908 6.67136 7.21909 7.21908 6.11346 0 ]xsh148.503 45.454 mo(\0005)shLTQVUW+Arial-BoldMT [12 0 0 -12 0 0 ]msf280.98 45.535 mo(\000$\000O\000D\000E\000D\000P)[8.66034 3.33234 6.66833 7.32825 6.66833 0 ]xsh324.302 45.535 mo(\000D)shLTQVUW+Arial-BoldMT [9.96 0 0 -9.96 0 0 ]msf389.7 45.454 mo(\000\025\000\023\000\025\000\024\000\003\000\)\000X\000Q\000H\000U\000D\000O\000\003\000+\000R\000P\000H\000\003\000\011\000\003\000&\000H\000P\000H\000W\000H\000U\000\\\000\003\000'\000L\000U\000H\000F\000W\000R\000U)[5.55676 5.55673 5.55676 5.55676 2.75687 6.10449 6.10449 6.10446 5.55676 3.89352 5.55673 2.78787 2.7569 7.21011 6.10446 8.87354 5.55676 2.75793 7.21008 2.75797 7.21011 5.55676 8.87347 5.55676 3.33563 5.55676 3.89349 5.55676 2.7569 7.21008 2.78784 3.89355 5.55676 5.55676 3.33557 6.10449 0 ]xsh580.653 45.454 mo(\000\\)sh48.0023 67.0572 mo(\000&\000$\000/\000\(\0005\000$\000\261\0006\000K\000H\000O\000E\000\\\000\003\000&)[7.23094 7.23094 6.1253 6.68321 7.23093 7.23094 5.57758 6.68321 6.12531 5.57758 2.8087 6.1253 5.57758 2.75687 0 ]xsh138.198 67.0572 mo(\000R)sh147.104 67.0572 mo(\000$\000&\000\022\000\025\000\023)[7.23094 7.23094 2.80869 5.57758 0 ]xsh175.53 67.0572 mo(\000\030)sh183.807 67.0572 mo(\000>\000\030)[3.35643 0 ]xsh192.741 67.0572 mo(\000@\000\003)[3.35643 0 ]xsh%ADOBeginSubsetFont: VCAAAA+ArialMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (VCAAAA+ArialMT)%%Title: (VCAAAA+ArialMT Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /VCAAAA+ArialMT def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-665 -325 2000 1006} def/FontInfo 4 dict dup begin/FSType 8 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 3381 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 54 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A936AA182F5809A9> |22 <001C60D8A8C9B7EF322B10FC2B166D2172609B896A28AF8161ACE0368AFE548E0A1C2891C9468F6CF8001203B3D0EAEFD5067EEA36A5DE0843B3FA3DD10C10DEDE7ECC4B1F205F8D09B2A1084955D8410715DAE41E60E9BEA3731CCA7698FDFAB2F6C5BD853C3D3957C1C3A42CED93CA60AD0CBA44CB0A07053B47ECAA14A0E56199A33A25603E5DB2CC6A470C6EFBC4EF226D2F67623C83F45C93E2C02C0A9A0974576F8175C7B2D4E9F1C9319763C8100AFBFF1D8FFF8EB10F2B0608AF6A0E137303863C59034E23F8CA0DCA04C3BBA93B80F099> |24 <001C60D8A8C9B7EF322B11AFD4001C6D393B64E9DE4ADCB9C7DBD29001BCD9C24204BCA349E6D6727DDD519B4607896591269B0F423E62F04083C8D4AAB63F3153F8354DAF7BF13702FC0166656CF2542F30CE9F35F189C04CCF389EF200B50CB6EEE2DB668946DD84852A4BE0E462B71D963D0D41B1A42CCC4B98AFEC49372EF96DD9EB13A793559C13CFDFE477> |19 <001C60D8A8C9B7EF322B1082CBA0BF9C14E99A3DA73C31B9142A392BD3ABC1EA97FF39C814FAC04D646DD2C4A98FCAF9A9470BD1CDA748490BF1B6225A10425162B711F636C55967253E957B919DCC3F666292C622E3ED0D587E9E568E31D888BB4F8FA5748005C40596B5B6BF48502A62C5A69962DBA8DFCFAE3F282BC60C6C207F4C9D9AD32681DD3B2E0F2C2045F707B1BB6597DD9D355BD3D00BE3A5B546505C954A88> |23 <001C60D8A8C9B7EF32245FD0373664E2B980D56E9D691EE5A95B5050BFE023151494A4A591D0216BE411323E192BCC75A7A889FA57031D> |36 <001C60D8A8C9B64EDFED26B9E21A4F64848088903AC9891CF791BDBC4AB29ACC8B3E8D13924A7DDE35F09AC5F4A8229C87124C732743268600EF8D4582208BD16D82> |3 <001C60D8A8C9B854D00D> |40 <001C60D8A8C9B64EDFFB83C6241DB110BEE5AB2FAD9D94B39ED5E81E7411B66E9361DDE78FC667AB91EF9824> |51 <001C60D8A8C9B64EDFF4950CC53012D47AE97D5586315BA2F5162B63CEC117C5379A1B3DB174CB2C739C68916A1E99A346AFF71DBF25658867D9AEF1BF3C47CE1BA73978E8D0D40E52B85A56E08A1369D85E15B0A0C517291916FF6E61D0EFBF59B4862165C7DEA15B42BE3811C2CAA25C54> |82 <001C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A987875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C846C7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD79F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC099F518C54BB58C51D6FB6D0C8> |83 <001C60D8A8C9B7EF322B3B0CFC8FED720BC90E20B208D27DC4B8F11F10B96470F8B4F5FABEC7F7010781F5077B417FE44279776F2304ACD6E0EA12F436330DC4B79C907B9D28468D10FF9256A7D2CA504E4498D719ACD86FCA89B33C61F556CF1168C3F262A781155D5EBF0C47D71C584AB93037B47B18D39FE408A49672C1E63F9E8368D19E113FC95C59A9FA4650E46F6399F2FF256844E27568BA34B9> |88 <001C60D8A8C9B7EF32240889FE90FF09F794E92023A18223CCBE3629AB7F517D090BF7D55C0A5A8EADD9BE381137FE8504E8B2DB3D16839889E327241ACA8F992A2BB9AD2BCE57ADB306CE2789439E67A64C32BE8669C197F5851EE38793990906DA8D7F8ACFF6D70790F06B02> |79 <001C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |68 <001C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883CA6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DBBA48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405FD710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5CEC10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D53463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307B2879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D177B5D88A> |87 <001C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D065152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349CFAD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB5127F5C42C88FB43C> |76 <001C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B171C8A80AB> |81 <001C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A285C0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCDADE9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A5203A8015DD09B7CE> |15 <001C60D8A8C9B854D0F42C7AF5C4668C35A6B5F5176B9FC6F495643D4000A6D27DE0DDA4D01F0D89D11ABC5445CF8C34A3A1CF> |20 <001C60D8A8C9B7EF32247817CBAD74894E625B0BAD23872C089E8D91F92FE1B529DBABA181AB8B085B7A00FC86C529813E9B576642> |27 <001C60D8A8C9B7EF320BBFC2657E9B35A6705AFBBFAA1C93BB40418E3C071A4B65F9256C97D19A81FC1920D97D74BDC10680B006C358F4A055E8EB310D17DB36B82D07BF6EC33DD32B1D55F043C26D6FDD8A81CBAE4C8F71815B896A63B1FDB98A0F7ECF9E837B10C378B26EDC5928C7E8B3799AB2CD264A8AEAC999F603BC4D805ED282A00B545281ED6B9C18B6DFE4AB08C5EA70E73FE4832D8BDE5A7EFB46CDDEE476E8817925C1CEAE85568DE92FBFB771DE6BBC3B6BB104C95219571FA1AFECF133380FB1F1E150D70FC591604EE1D20E2A6F50D40957F263D48A1A19A5D671D3A632D7FED2532ACF68D20DD9EC4B411696AEE5583B5D2BC1304A55977C35> |38 <001C60D8A8C9B6079F6D1C46AC2732DFBDC9143C94793529C1940296210AAD6EE09C39CFC4DAB7C5F3BA33C9E10838E0BC6FC9318A4E57F309EE20438B434C69AE73A499211EBA75E22A57C1581D93869428818DC700A28C027571D7047CDFA8B017AACDE96DE4B2579EFD2C826A30F6EBDDC52701A22CDD669ADC60B66F32261A1F55EDEF9802FD4511E0EF130772EDFD708A4113A1EDB1E717E0FA7D314851DE59> |75 <001C60D8A8C9B7EF322B3BE19FB964E037672C8A279BC86F7B9BF0C8203E131450D56E388301CEAE43162551FBE05CABF94DC3B5DDFBB4DA55D11470EBD41AC970CEE2D2EFA88D51157B4EF5536CB673423CDDB06FA774D27105AD2B1AC2DFA8> |85 <001C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE112857894FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619ADD420F549AB7C795751D32E8EE6> |72 <001C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B0D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8B6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EEA03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C37295284C077711C162623860AACA404F650F8D516970257> |41 <001C60D8A8C9B7D8BE1661AF70E1029B586475C590C02056C6BE2BB9C2329F7F6ED1937D1E8A10> |43 <001C60D8A8C9B6079F62EE7568E8B09CBA01F57B4ACE6DA24AC6EA79287DF31270F7DC42D147A6FAB1DABB6C> |80 <001C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB36542419CBFA3D5519AD5BA8076F32ECFD724B055F72CAC37BC47239ACC8B0FB48B8ACFF099B97085BD99C333951D0338D27FF6AB9B3F3C69320476BA0CD4F9573B79AD358A91B0176AFB9AEF169308783E9C6287F18E6E658AF5AA6C9688B500806DA169A1B21069D55C54A2FF607A6A38976171B08665C3ACCAA84DFB970D01180645CE5CBC48DFE37B> |9 <001C60D8A8C9B64EDFFBA7ABF9DDDEB29E5BA9C6F97A30109B3E9B36A4672F852F0C7D7FD857233D2E0B6E69CC846E74DDD2B3EB34BC0A33AAD75A4F1A9BB8155338DAD7EA206440EF680DE5BF23881411D9643C59CA80FA0FC57D4CED901BCF45D149F4A79ABBB4E169C56B6C88F9517FE4C2F9668A2285A822728199F386F795B64E48B13F993DAB87BF6AB802ABAB4DFA13BAB2D2D203F35C86F8099EC1F12467776DF900D24E6E0493B6347542EA1658948FCC9533F6E4A15250095B49DE7B3F56944F923C54043F77870092350E732B39E61257826BC504087D200285234E58F98B03161FCD25D11E49C92FECE7157A62DB43D883CE822FA97785051CAC05627D> |92 <001C60D8A8C9B7A73DB92EFAEC912AA9CB61EA2C87B96577B4D13A11140AAA18C6E226D96ACA3DE3B427B0A298EF106E8BC0FCA1DC8D81AF2F08A42A0F5836B6230FDF576E37CE129EFF9730F23EC10CF5ACA4D4CA70309E71B89A944CA7348AEBF55FF5ADA9F61B4BA14C9A2301A8C53EBFBE665E1DC22E> |21 <001C60D8A8C9B7EF322B3EBC745A0BBBAC411180C089B13E648172E07912D1BA378FD965B994D86994B65582FD434477626CA0A7A4AA353654D41B127367E2BE1B714FF63CE28DAC81B61A78F94AD3218D524244E3D9732CC5A4165C96E7ADC9605690D1ECC190DFB9D5017E24EDE1D6B83BBD5FCE6B540AFB666DD6E17D0C90E5976007C04DC3CD2FBFFCA768526960F8706ECECD> |74 <001C60D8A8C9B7EF322851D9960AE993FFFAEAEBBA8EF734FCE7E65DE817A065D42CB79E2F25620DE08D5E215259551032CAAB8B674940F5B4BAAF40766D559B26E9A0C2464D0F504C4718579670D62707FEBC08A2CD71BF2528BA3A24A0C247BA70F9E817A1709BB6F7008D6C121249525DEE3A93F6DA16170F68BD3667DC9FF533284D078DAE144C0DB42F376056761CFA5A80B4ED7D37E57EA658F3FBD88F779C828BF992A89F02F1397EF90BADA44FB7F676FF0295FF6F9748D66EBF575C72F67F4BEBB98F8AFA57505EC9> |90 <001C60D8A8C9B6079F623B1BE11B16961396A063624588AB070AF82F2F6FEA646F6999B73C9332DE350CB17016778F548397735D109B5E72AA9A92DCB1D7264371419D7043A117419C0FAF4C> |17 <001C60D8A8C9B854D0F4604C2A88D29523E6F8C6> |25 <001C60D8A8C9B7EF3224364F35F160A7435603F347AEE370EA008402323F12980EBCF3CB26E2D43E59A0756C6206EFA3FA7F3CF2F0DCAFEBCCFFA3BC8BFA30490E649BC066EACB91D06D39C41CF4418FDA94B94D65C0F6F28F44C8CF193628C8B12F204AFE672CF6576AC3AB52C05B059D0EB4764306E7B6C88FB8AE766FA7D7475CE80EAE625C3D4B3B8AD5F700C1E5123D83D6C3B46406191458255140B2BB2B7285E8760BEB4CAD56CDB5D69E1D01DE82A2FE0C6D1807BC278045A69D91DDA3546299406BFBCDD14522D29A47E391C26AA1D66EE72A60> |16 <001C60D8A8C9B81F2C3A78A5675B101A923F2D2A8AB56C> |28 <001C60D8A8C9B7EF322B1E3B1A79A1DA03E10E600D068C6F2A2C380B0F6DEBD4D4DD1CC12D66AEECD714986D0BB404BEEE797B931765A09DB6972620435C3E53C33E82E82293552FE3F4B4A9CF87D2D3960A335325D9064F969F569869D5BECFFFACFCA41CE671D232207B2A9F695CAD03F11715AE00BA6E4E4DDB0F807E169B9324CB5646DCC83A5DE270DE3BAEFD03D20E077B3A9C59CEC5C162A3BD3072425BBF0BAF6222E938CACE57A2C4D75634AE3A010D0148B506BD06198AAAA27D1742624D1FE8845D19FF21CDB94B022766F89FD7433D600DF30C7FA27B03E17188994F16> |91 <001C60D8A8C9B7A73DB920A1A3B81DE7234ACAA5546B4C65820CF3C50E1629C5A6423BAA34A2ECA8C7FE4B71726AC6704CC23AF1725AFB30D2892FC1BDDAFEAD7BE7BD65F1051699CCF4B0> |11 <001C60D8A8C9B81F2C3A069EC278D0AA8AE7E32C29FB8AFD2B6368260D302C905A973F0B3449ED9E18E81E16B7B273530E9BC14ED76D4376A01C0A577DC235F833AFCC30669C812FBF097879E1> |12 <001C60D8A8C9B81F2C3A30D3A3F0A8D738E712823A2480470C32A2885DCE4A77E926C520C7B7E1016BB28443D8E7B8AC0F7C4F3BD721C19F19D4714AF52ABD0227B6CDD854C568D5A6F3817645C5> |86 <001C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B5F80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214E2BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEABD96538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046E1B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB3287CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B8435558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F4172D53C8FCAF4D28F2B78D3A4BF03> |48 <001C60D8A8C9B6B41CBB4B6664BFFC865F56E6FEAFA79E7B90883C1C68AFB379AC174B0F8DCC9294E2C26BD06BBA9FD3867F8768651EF4BA798B4F538FCE8F80AF5A83421F8F> |54 <001C60D8A8C9B64EDFE3D078722A65C31955939D63AA5C8A4945719B5E558E3B73A676CC12D1E18D93A8DC67C074D6E352D426981DE76F8EC4CFE5DAE051BE47753A7C234C4B8D7D9F50292A61882B5500CC701F878FE626CDC6D4C322BB391537921D673F5AEE3EC19E36E7EFEC0F06A0EA4EAAB6BBA94DDCD11A6A564B13B510F8C915848233B82F046D854DCD4F1639F149305DC73D3C68DF8AEB47A96A30E55CF8BAD07FA2825BCE0D675F1CC2EBE61B07B772130E23119250F1EBF8FE12A2098D9F09F3F21BDC41666CA4A0BB70D5F0A750B44BB93A5FBFDD2BF8DE450B277265536F77D5BD6F44FB72FF2E708C60107653AE44BFFB26AFF8> |69 <001C60D8A8C9B7EF322B32790B4C40581173F160A628925C2B3464303D1D06742E51EAF8B24CA2240525B9E37D08039C077561F794D203DE8C21652F0F5A81A2CE84BC5F560E6CA22CB86602E80E4BBDAC611F34E85189D165B97A2D648CF626A92F4026AFF0CA38E8E165B7E956CB11B132485900857B09AC55401998CADA1EAAF79B76AA2B52CCF0307B360E6D> |42 <001C60D8A8C9B6FF86FBC793890B55178BE49EEC5102DE4765B31919F6E98C7D78C667A3BB4B4E624B689DA4C385DFD1B29DE65FB8AA7AB2EF69B5E095C4AF9914BE00567D04850B7313AA11B0D0EAADB46E151A37395ABF4FDE5690DD208A8203F33BC5AE42ABB3FA5CE6CC7C2FF1141A09489DA9290F5991FC3FADB6E8008CAB5CAA6CE68D612C9A2AD14F1DB3B2ED2760EC1A22B5BECD6F37DA404DC4340669554C25AFCF53AD025C5AA750C1F3F80E3A98BEF6E511E50C5B0BE2D927EF> |71 <001C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D9621458876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6DD52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB612941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF13CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |58 <001C60D8A8C9B5D6EF420A3AC101C9354A948DB23A64166EB3D55EEB13F0DE3A88231C2286900994060E46C1096C7ABFBA281AAEB86123AF398A1FE8A551414253B8F3844EF59084BCE1B4D5AF071FD672A0C8C15E821130EADB430FA7E525278C31C213B6FF1A25> |26 <001C60D8A8C9B7EF32245185D6A5516F33DB78352C4AC565B22360E031CB3B71A1D11654727B1436E7590FC689EA5F1279CA132C8529B81FF9BDC95FE0F55546101EE3> |44 <001C60D8A8C9B854D0F463D3892D665712D6B7D6A81E> |70 <001C60D8A8C9B7A73DB9D8FD6AA4FBAF8D65C36EA1D4AADBD389F972C0EDCE9E7F36285FA93A80D3647871D2CE5AAAA6A6A370DC54E1595FB6AAB3E389C9F7BBBB85F787D6C418B35B940450E5E243895ECFD2205F51B2D154CFFECF34148C344C1EF806F9AAF539FB961E3EFAF6353381E833DF7C0542FFF27122A28D36548FE63FC8465B1B685766E782F0> |37 <001C60D8A8C9B64EDFF43B9E1D43B76E7425A98F23F483468D5596DA760F1554BAD296AA38A849FEE692D78BAC3B162E2013F61317550246D6F77AF27886D4E04AB44C473130F6FA990DAC6640A48EC2A80691207E5DDBCA7196686E7CD5C980FB78081AA13952C8D8F3373FF54323A4853D0F014ED4C5A1024912E545AAB4BA7F36D08386B7A08B38C3035C03383BB204897FB23E6B597B4E784900841F1858E5E1740AFA815171FE44AAE751E7961222B185E93D26B02E1EB5C1FF9174E0C619907BEEF9FED49CD2B96F29B7B01884> |39 <001C60D8A8C9B6079F6249419CF69509002AC79A016C34D114AD8C7A9DD2474EBE314027FB7E1F48C795DC0A22C11652551956D26D402DBF3954D5C55EEDC4D2E02D32263ABBF714C52111C5848A3EB8C8B527B0FF3362F75E292ACAF79767633E5CF98F1E087651E36E4721AF4CBDAC7E4D68359E9108BDBBEA294A0489068CBF65F37E7CD4C7284AEAF641D010DF> |78 <001C60D8A8C9B7A73DB90BDE2D32BC36BC1297E20AB90FA9E27E830D444A320C85D226D41FA634DF03A4FEE2FD90BF314563D4BF5C68> |89 <001C60D8A8C9B7A73DB99D94C9412F55B03E92C174A4755E69F97C27D9162B37724F74F272B140D258652D102C2EAC46833C73F9> |47 <001C60D8A8C9B7EF3224EC6E192BD0FEC2445DA87B99CF0E03A72A> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /VCAAAA+ArialMT-Identity-H /Identity-H 0 [/VCAAAA+ArialMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/LTQVUX+ArialMT /VCAAAA+ArialMT-Identity-H findfont ct_VMDictPutLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf198.843 67.054 mo(\000\026\000\030\000\023\000\027)[4.44406 4.44406 4.44406 0 ]xsh216.619 67.054 mo(\000\023)sh288.434 66.9742 mo(\000$\000\003)[5.3299 0 ]xsh295.99 66.9742 mo(\000\()sh56.9985 76.9971 mo(\0003\000R\000S\000X\000O\000D\000W\000L\000R\000Q\000\003\000\026\000\017\000\024\000\030)[5.32114 4.4353 4.4353 4.4353 1.76998 4.43529 2.21686 1.76998 4.4353 4.4353 2.21685 4.4353 2.21686 4.43529 0 ]xsh112.428 76.9971 mo(\000\033)sh47.997 86.9562 mo(\000&\000K\000D\000U\000W\000H\000U\000\003\000\)\000X\000Q\000H\000U\000D\000O\000\003\000+\000R\000P)[5.76558 4.4409 4.4409 2.6613 2.22246 4.4409 2.6613 2.22246 4.87974 4.4409 4.4409 4.4409 2.6613 4.4409 1.77557 2.22246 5.76558 4.4409 0 ]xsh123.013 86.9562 mo(\000H)sh129.736 86.9562 mo(\000\011)sh137.237 86.9562 mo(\000&\000U)[5.76558 0 ]xsh145.664 86.9562 mo(\000H\000P\000D\000W\000R\000U)[4.4409 6.65129 4.4409 2.22246 4.44089 0 ]xsh170.522 86.9562 mo(\000\\)sh173.789 86.9562 mo(\000\017)sh178.231 86.9562 mo(\000\025)sh182.672 86.9562 mo(\000\030\000\025\000\024\000\003\000+\000L\000J\000K\000Z\000D\000\\\000\003\000\026)[4.4409 4.44089 4.4409 2.22246 5.76558 1.77557 4.4409 4.44089 5.76558 4.4409 3.99402 2.22246 0 ]xsh235.503 86.9562 mo(\000\024)sh242.286 86.9562 mo(\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003)[2.22246 2.22246 2.22246 2.22246 2.22246 2.22246 2.22244 2.22247 2.22244 2.22247 2.22244 0 ]xsh268.955 86.9562 mo(\000\021)sh273.296 86.9562 mo(\000\031\000\025\000\024\000\020\000\023\000\033\000\023)[4.44089 4.44092 4.44089 2.66129 4.44092 4.44089 0 ]xsh302.603 86.9562 mo(\000\023)sh109.986 96.4922 mo(\000\033\000\023\000\023\000\020\000\034\000\030\000\026\000\020\000\030\000\033\000\033\000\027\000\003\000\)\000D\000[\000\003\000\013\000\025\000\023\000\030\000\014\000\003\000\031\000\025\000\024\000\020\000\025\000\030\000\027)[4.44004 4.44005 4.44004 2.66045 4.44005 4.44005 4.44003 2.66045 4.44005 4.44005 4.44003 4.44005 11.1066 4.87889 4.44003 3.99316 2.22162 2.66043 4.44006 4.44003 4.44005 2.66045 2.2216 4.44005 4.44003 4.44005 2.66045 4.44005 4.44005 0 ]xsh236.511 96.4922 mo(\000\034)sh48.005 105.972 mo[5.32589 1.77473 1.77473 1.77473 3.99316 4.44005 4.44004 2.2216 6.65044 4.44005 6.65045 1.77472 2.2216 4.87415 2.2216 5.76472 2.2216 5.32588 2.2216 2.2216 5.32187 4.44005 4.44005 1.77472 4.44005 3.99316 2.2216 6.65045 4.44005 6.65044 4.44005 2.66045 3.99316 2.2216 6.20601 2.66045 4.44003 4.44005 3.99316 2.2216 2.216 2.2216 2.21686 2.2216 2.22162 2.2216 2.21686 2.2216 2.21684 2.22162 2.21684 2.22162 2.216 2.2216 2.21686 2.2216 2.2216 2.2216 2.21686 2.2216 2.216 2.2216 2.21686 2.2216 2.21686 2.22162 2.22159 2.22162 2.21686 2.22159 2.216 2.22162 4.44003 4.44006 4.44003 2.66043 4.44006 4.44003 0 ]xsh302.316 105.972 mo(\000\031)sh134.644 115.453 mo(\000\033\000\030\000\033\000\031\000\003\000$\000O\000D\000E\000D\000P\000D\000\003\000+\000Z\000\\\000\003\000\025)[4.44005 4.44003 4.44005 4.44005 2.2216 5.32588 1.77473 4.44003 4.44005 4.44005 6.65045 4.44003 2.2216 5.76472 5.76474 3.99316 2.2216 0 ]xsh210.543 115.453 mo(\000\030)sh48.005 124.989 mo(\000:\000H\000V\000W\000V\000L\000G\000H\000\003\000\)\000X\000Q\000H\000U\000D\000O\000\003\000+\000R\000P\000H\000\017\000\003\000\033\000\030\000\023\000\030\000\003\000+\000Z\000\\\000\003\000\026\000\024\000\003\0006\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003)[7.53714 4.4409 3.99402 2.22246 3.99402 1.77558 4.4409 4.4409 2.22246 4.87974 4.4409 4.4409 4.4409 2.6613 4.44089 1.77558 2.22246 5.76558 4.4409 6.65131 4.44089 2.22246 2.22246 4.44089 4.44092 4.44089 4.44089 2.22247 5.76556 5.76559 3.99402 2.22244 4.44089 4.44092 2.22244 5.32675 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 0 ]xsh252.289 124.989 mo(\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\031\000\031\000\033\000\020\000\024\000\024\000\033)[2.22246 2.22246 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 4.44089 4.44089 4.44092 2.66129 4.44089 4.44092 0 ]xsh303.82 124.989 mo(\000\033)sh140.461 134.469 mo(\000\)\000D\000[\000\003\000\013\000\025\000\023\000\030\000\014\000\003\000\031\000\031\000\033\000\020\000\024\000\024\000\033)[4.87889 4.44003 3.99318 2.2216 2.66045 4.44003 4.44005 4.44005 2.66045 2.2216 4.44003 4.44005 4.44005 2.66045 4.44005 4.44003 0 ]xsh206.159 134.469 mo(\000\031)shLTQVUW+Arial-BoldMT [9.96 0 0 -9.96 0 0 ]msf48 145.354 mo(\000&\000$\0000\000'\000\(\0001\000\261\000:\000L\000O\000F\000R\000[\000\003\000&)[7.19507 7.19507 8.30056 7.19507 6.64735 7.19508 5.5417 9.4062 2.77283 2.77283 5.54171 6.08944 5.5417 2.81964 0 ]xsh139.41 145.354 mo(\000R)sh148.307 145.354 mo(\000$\000&\000\022\000\026\000\026\000\027\000\003\000>\000\024\000\032\000\017)[7.19507 7.19508 2.77283 5.5417 5.54172 5.5417 2.81964 3.32056 5.5417 5.54172 0 ]xsh202.092 145.354 mo(\000\025\000\023\000@\000\003)[5.5417 5.54172 3.32056 0 ]xshLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf219.385 145.354 mo(\000\026\000\031\000\032\000\025)[4.44005 4.44003 4.44005 0 ]xsh237.145 145.354 mo(\000\031)sh295.977 145.274 mo(\000\()sh57 155.297 mo(\0003\000R\000S\000X\000O\000D\000W\000L\000R\000Q\000\003\000\025\000\017\000\025\000\030)[5.32114 4.4353 4.4353 4.4353 1.76998 4.43529 2.21686 1.76998 4.4353 4.4353 2.21685 4.4353 2.21686 4.43529 0 ]xsh112.429 155.297 mo(\000\032)sh47.9985 165.504 mo(\000&\000K\000U\000L\000V\000W\000L\000D\000Q\000\003\0000\000H\000P\000R\000U\000L\000D\000O\000\003\000\)\000X\000Q\000H\000U\000D\000O\000\003\000+\000R\000P\000H)[5.76631 4.44162 2.66203 1.77631 3.99475 2.22318 1.77631 4.44162 4.44164 2.22318 6.65203 4.44163 6.65203 4.44162 2.66203 1.77631 4.44163 1.77631 2.21929 4.88047 4.44163 4.44163 4.44162 2.66203 4.44164 1.77631 2.21844 5.7663 4.44162 6.65204 0 ]xsh167.415 165.504 mo(\000V)sh173.676 165.504 mo(\000,\000Q\000F\000\017\000\003\000\030\000\024\000\030\000\003\000&\000D\000P\000G\000H)[2.22002 4.43846 3.99159 2.22002 2.22002 4.43846 4.43846 4.43846 2.22003 5.76314 4.43846 6.64886 4.43846 0 ]xsh230.029 165.504 mo(\000Q)sh236.749 165.504 mo(\000%\000\\\000S\000D\000V)[5.3243 3.99159 4.43846 4.43846 0 ]xsh258.934 165.504 mo(\000V)sh265.278 165.504 mo(\000\021\000\003\000\021\000\003\000\021\000\003)[2.22003 2.22 2.22003 2.22003 2.22 0 ]xsh47.9905 175.71 mo(\000\031\000\033\000\025\000\020\000\034\000\033\000\027)[4.43846 4.43846 4.43846 2.65886 4.43846 4.43846 0 ]xsh77.2803 175.71 mo(\000\025)sh138.859 185.916 mo(\000\)\000D)[4.87889 0 ]xsh148.178 185.916 mo(\000[)sh154.444 185.916 mo(\000\013\000\026\000\026\000\027\000\014\000\003\000\031\000\033\000\025\000\020\000\027\000\032\000\030\000\030)[2.66045 4.44005 4.44003 4.44005 2.66045 2.2216 4.44005 4.44005 4.44003 2.66046 4.44003 4.44005 4.44005 0 ]xsh47.9905 184.344 mo[5.76631 4.44162 4.44163 3.99475 1.77631 1.77631 4.44163 2.21929 5.32747 2.21844 5.7663 4.44163 4.44163 1.77631 4.44162 1.77631 3.99474 2.2193 4.88046 4.44163 4.44163 4.44162 2.66205 4.44162 1.77631 2.21844 5.7663 4.44164 6.65202 4.44164 2.22319 2.21928 4.44164 4.44162 4.44164 2.21843 5.32747 2.66203 4.44162 4.44164 4.44162 2.2193 5.32747 2.22319 2.21843 2.22319 2.21928 2.22319 2.21844 2.22319 2.21928 2.22319 2.21844 2.22319 2.21843 2.22319 2.21928 2.22319 2.21844 2.22319 2.21928 2.22319 2.21844 2.22318 2.2193 2.22321 2.21841 2.22318 2.21844 2.22321 2.2193 4.44162 4.44162 4.44165 2.66199 4.44165 4.44162 0 ]xsh304.206 184.344 mo(\000\027)sh140.447 193.825 mo(\000\)\000D\000[\000\003\000\013\000\026\000\026\000\027\000\014\000\003\000\026\000\033\000\025\000\020\000\025\000\031\000\031)[4.87889 4.44003 3.99316 2.22162 2.66045 4.44003 4.44005 4.44005 2.66045 2.2216 4.44005 4.44003 4.44005 2.66045 4.44005 4.44005 0 ]xsh206.144 193.825 mo(\000\033)sh47.9905 203.305 mo(\000+\000X\000G\000V\000R\000Q\000\003\000\)\000X\000Q\000H\000U\000D\000O\000\003\0006\000H\000U\000Y\000L\000F\000H\000V\000\003\000/\000/\000&\000\017\000\003\000\026\000\026\000\023\000\003\000+\000Z\000\\\000\003\000\025\000\031)[5.76875 4.44406 4.44406 3.99718 4.44406 4.44406 2.22562 4.87414 4.44406 4.44406 4.44406 2.66447 4.44407 1.77874 2.22562 5.32114 4.44406 2.66447 3.99718 1.77874 3.99718 4.44406 3.99719 2.22562 4.43773 4.44406 5.76875 2.22562 2.22562 4.43774 4.44406 4.44406 2.22562 5.76242 5.76874 3.99719 2.22562 4.43846 0 ]xsh201.237 203.305 mo(\000\030)sh207.902 203.305 mo(\0006)sh216.033 203.305 mo(\000\021\000\003\000\021\000\003\000\021\000\003)[2.2216 2.2216 2.21686 2.2216 2.21686 0 ]xsh229.354 203.305 mo(\000\021)sh233.845 203.305 mo(\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003)[2.2216 2.2216 2.2216 2.2216 2.21686 2.2216 2.216 2.22162 2.21684 2.2216 2.21686 2.22162 2.22159 2.22162 2.21686 2.22159 2.216 0 ]xsh273.804 203.305 mo(\000\021)sh278.158 203.305 mo(\000\031\000\033\000\025\000\020\000\030\000\027\000\034)[4.44003 4.44006 4.44003 2.66046 4.44003 4.44003 0 ]xsh307.459 203.305 mo(\000\025)sh109.971 212.841 mo(\000\033\000\033\000\033\000\020\000\027\000\024\000\031\000\020\000\034\000\034\000\034\000\023\000\003\000\)\000D\000[\000\003\000\013\000\026\000\026\000\027\000\014\000\003\000\026\000\032\000\024\000\020\000\027\000\033\000\033)[4.44004 4.44005 4.44004 2.66045 4.44005 4.44005 4.44003 2.66045 4.44005 4.44005 4.44005 4.44003 11.1074 4.87888 4.44005 3.99318 2.22159 2.66046 4.44003 4.44005 4.44005 2.66043 2.22162 4.44003 4.44005 4.44005 2.66045 4.44005 4.44003 0 ]xsh236.498 212.841 mo(\000\025)shLTQVUW+Arial-BoldMT [9.96 0 0 -9.96 0 0 ]msf48 223.714 mo(\000&\000$\0000)[7.23094 7.23094 0 ]xsh70.7984 223.714 mo(\0003)sh80.2505 223.714 mo(\000+)sh87.4814 223.714 mo(\000,\000/\000/\000\261)[2.8087 6.1253 6.12531 0 ]xsh108.118 223.714 mo(\0007)sh113.493 223.714 mo(\000D\000O\000O\000D\000S\000R\000R\000V)[5.57758 2.8087 2.80869 5.57757 6.12531 6.12531 6.12531 0 ]xsh154.219 223.714 mo(\000D)sh162.58 223.714 mo(\000&)sh169.811 223.714 mo(\000R)sh178.705 223.714 mo(\000$\000&\000\022\000\025\000\030)[7.23094 7.23094 2.80869 5.57758 0 ]xsh207.131 223.714 mo(\000\031)sh215.467 223.714 mo(\000>)sh218.824 223.714 mo(\000\024)sh224.401 223.714 mo(\000@)shLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf230.444 223.714 mo(\000\026\000\031\000\033\000\030)[4.44005 4.44003 4.44005 0 ]xsh248.204 223.714 mo(\000\023)sh295.984 223.634 mo(\000\()sh57.0067 233.657 mo(\0003\000R\000S\000X\000O\000D\000W\000L\000R\000Q\000\003\000\024\000\017\000\025\000\032)[5.32114 4.4353 4.4353 4.4353 1.76998 4.43529 2.21686 1.76998 4.4353 4.4353 2.21685 4.4353 2.21686 4.43529 0 ]xsh112.436 233.657 mo(\000\026)sh48.0052 243.8 mo(\000$\000O\000D\000E\000D\000P\000D\000\003\000\)\000X\000Q\000H\000U\000D\000O\000\003\000+\000R\000P\000H)[5.32747 1.77631 4.44163 4.44162 4.44163 6.65203 4.44163 2.21929 4.88047 4.44162 4.44164 4.44162 2.66203 4.44163 1.77631 2.21843 5.76631 4.44163 6.65203 0 ]xsh132.353 243.8 mo(\000V)sh138.538 243.8 mo(\000\011\000\003\000&\000U\000H\000P\000D\000W\000L\000R\000Q\000\003\000&\000Q\000W\000U\000V\000\017\000\003\000\025\000\024\000\034\000\025\000\032\000\003\000+\000Z\000\\\000\003\000\025\000\033\000\023\000\021\000\003\000\021\000\003)[5.32747 2.21844 5.7663 2.66203 4.44164 6.65202 4.44162 2.22321 1.77631 4.44162 4.44162 2.2193 5.76631 4.44162 2.22319 2.66203 3.99475 2.22319 2.21928 4.44164 4.44162 4.44162 4.44164 4.44164 2.21843 5.76631 5.76631 3.99474 2.2193 4.44162 4.44162 6.00974 2.22318 2.2193 2.22321 0 ]xsh48.0052 253.942 mo(\000\033\000\034\000\031\000\020\000\027\000\030\000\023)[4.44163 4.44163 4.44163 2.66203 4.44163 4.44163 0 ]xsh77.3173 253.942 mo(\000\025)sh108.462 264.085 mo(\000\033\000\023\000\023\000\020\000\033\000\034\000\024\000\020\000\033\000\031\000\032\000\025\000\003\000\)\000D\000[\000\003\000\013\000\025\000\030\000\031)[4.44004 4.44005 4.44004 2.66045 4.44004 4.44005 4.44005 2.66045 4.44005 4.44003 4.44005 4.44005 11.1074 4.8605 4.44005 4.00436 2.2216 2.66045 4.44005 4.44005 0 ]xsh200.798 264.085 mo(\000\014)sh205.738 264.085 mo(\000\033\000\034\000\031\000\020\000\027\000\024\000\030\000\025)[4.44005 4.44003 4.44005 2.66045 4.44005 4.44005 4.44003 0 ]xsh48.0132 262.633 mo(\000/\000D\000Q\000J\000O\000H\000\\\000\003\000\)\000X\000Q\000H\000U\000D\000O\000\003\000+\000R\000P\000H\000\017\000\003\000\025\000\024\000\033\000\026\000\032\000\003\000+\000Z\000\\\000\003\000\025\000\033\000\023\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021)[4.4409 4.4409 4.4409 4.4409 1.77557 4.4409 3.99402 2.22246 4.87975 4.44089 4.4409 4.4409 2.66129 4.4409 1.77557 2.22246 5.76558 4.4409 6.6513 4.4409 2.22246 2.22246 4.4409 4.44089 4.44089 4.4409 4.4409 2.22244 5.76559 5.76556 3.99402 2.22247 4.44089 4.4409 4.44089 2.22246 2.22246 2.22246 2.22246 2.22246 2.22246 2.22246 2.22246 2.22246 2.22246 2.22246 2.22246 2.22246 2.22246 2.22246 2.22246 2.22246 2.22246 2.22246 2.22246 2.22246 2.22246 2.22244 2.22246 2.22246 2.22246 2.22246 0 ]xsh250.98 262.633 mo(\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\033\000\034\000\031\000\020\000\025\000\030\000\032)[2.22246 2.22246 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 4.44092 4.44089 4.44089 2.66132 4.44089 4.44089 0 ]xsh300.289 262.633 mo(\000\024)sh140.469 272.113 mo(\000\)\000D\000[\000\003\000\013\000\025\000\030\000\031\000\014\000\003\000\033\000\034\000\031\000\020\000\025\000\030\000\023)[4.87889 4.44003 3.99316 2.22162 2.66045 4.44003 4.44005 4.44005 2.66045 2.2216 4.44005 4.44003 4.44005 2.66045 4.44005 4.44005 0 ]xsh206.167 272.113 mo(\000\023)sh106.08 324.42 mo
241.92 324.42 li
241.92 284.1 li
106.08 284.1 li
cp
1 /0 /CSD get_res sepcs
gsave
clp
[1 0 0 -1 0 792 ]ct
[135.84 0 0 40.32 106.08 467.58 ]ct
snap_to_device
<<
/T 1
/W 566 
/H 168 
/M[566 0 0 -168 0 168 ]
/BC 8 
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
sepimg
JcLB&JcLB&JcLB&JcLB&JcNsorW0V2rW)s!LB)o+huEr^!<<*'1^^5_d/X:P(E+)+r>,DLr>#DM)Yt?O
)#kKJ)!Mh>(_d)S"8;fs!"]/K)"&1?)#b?H)#kKQ)#5$N(`!n](BPEe!Pnbf!2KSt$u,G2$02)Q!!Eq?
_nNqc]E5^U\c0&B[C=?,cHsr9cMc#fbPfNcaMu<@`r3jU_uIRO_#D(I]`,MH^8;JD"U+W)!sA^Y`;[CK
]`,YD_#;(L_u@UQ`W4*XaT0N_c2GrdcihY@cF^F^[fX+N]DfGF^qe-Cq>c*IJcP*:"Xg)Bs8V8R!8IPW
'>D`7bPoQj`l>s5_8F+)`7N_rr7Cr!s4.+urmLen!7:_jrltGcrlG5_`l@tqrkS]T],UkG"UY>>TZ4ga
_o'F2`r='Zao9K_c2Puhd*_a=rm^tus47,"rRh7o^;9fd!lW*url>2bajPgL!.k3Y!!<ERI-^_1!5-qa
U&YN6]?A:8`l,g5_nl>f"hqdb`7NT=ec+&$daHOjd/D;ncHXPUr5nu[rl,/[_nj.(^:sTZ"hVCZ]I<jT
"V(VKX1l3X]Y;%k^;.S$_u7USaT'B^bQ#idcMl2jdJqYoeG[o%f%/Hp]Y;,Z^]D9hrknrZaN2b\mf<+_
!Yc7Lo`,'r&K:bB!.t7O!=&T/'Iln<ebT%@",R!X!WE*!!Lj)Q!"/c?]?A:8`l,g5_nl>f"h_R^\]NG%
ec+&-daHOjd*U(`d*Bn\aiXG$"iS<r_83ka]E#SC\HTIO[D4^$pBCj)+L8Ja\%0'K]*Q'`^qde(_o0Rn
a9'K*bPo`mcHsq`d*U1fdaJ-E#1_8Rf?V"@!PH/G^]D9hrPSfZaO,V%!"ifAp[-PJWKr$\P+oV=mJ$U_
^&W`bi;`rleboF=rr?@'!!43q-G'8t!!EtJaiVX'_udio_>_4T]Y;%j\]r^UrmV"tdF%s?s3CVgs3(Ga
rl>>a`5KR0^:q8Z])oOP[JmN3Z37g5!!W](#7LYa\$NBGZa7'I\[f?O]EQ$b_8F42r5]2daihrRd*Bq`
d/MDmdf.`$e^i-\]=tqlrkJQN_u7LUaN2b]jo>E#rpp'h0DGO!!2ol"!<=nRoD]%X!!FsMoCa-r!/pma
'ZSG>aMu0:_nuJjrkK8]^:_(g\^&aTdaHOjd*U(bd*BnXao'3t`l,g3^qRIo]=GJ][C*<GYcb45XK/g:
!!i9'!WY6eri?7*Yd1UArj<'C]=Y_i^qdk*`;[jXaoBQac2Z)fcj8%HdaZdse@rKm]E#\F^]D9hrPSfZ
`mTe,!!(sKrrDSp!.k49!!+SKo`#.D!0-dMq;Vab!7:cR'[,+O`l>s8_o'=i_#M(H],J5ldF?Uld*^7f
cHa\ZbK.cE`lQ0<_nj.$]Df>A\$Q(>"0el.X8T""Vm(1GpBLa#9="Mo"08N+Yl:p9ZaI3O]=bkn^qmq.
rlG,]s3(Geqp5\tdaHX\\%KAc]Y=B\!Pu\P_un$$glUUt!-n,8!2Af[JcN%U!Wi@dp&>9r)$&%[pA)nr
!1*Zg'Zf"ZcMk``_8F+g^]qHa]=YV_Z4+CndEp:fd*Bq]c-+6.a:ZG1_na(#]Xt_`[Bm0EY,n_(rhg%!
VPBl[X+1Q]p]gj&@''@&+Ju$6Vl?_uY-P@>ZaI9Q]=bkn_8O@7aN;NEaj&)Ud*DX;$.72=Zam][]Y(uX
^]D9hrPSf]eD?;`!:0[c1%YDN9)o;5+#?Dh%'KY_!;$6l)ZKI1#Q,#6hYHpBX/#aN!$;osg"4g%`5KR2
_8*k#]Y(kg\[AcJ^sUNSd*BnZbK9b)+NDF>_7mRp]=52UZ`p[:X/W"pVPBo\U7e0NSt_,U"pk)2%gWCF
EMf7tSt_sSUSargV[oc-Y->4;[C<]Y]=u(s`5_bs!6bAd$I6rDd*fq>[C<]Yrk/6G!Pu\Q`!"?9e_H8J
!!*`2p&>?t*rqo&o(W("!U0T9!4`(0kP"o\p]Lugq"FQ7h>j8M',8RAf%/I$`l#^1^qROq]Xteb[JmH;
`6llUc-=GRaU-&0`l,d1]Xtedrj*?FY,nV%Vl$5aU7e*LS=?"9R@B?Y#5JN0#7c-QQ^O>5rgjgsU8+K\
Vl?_uY->7?\%0,b^;.Y)rl>SkaihrScHst\ZEgmI\\%gQ#/J$j_o'L@rmh,*ORE2C!!)Zars8H*"m#OS
p\7"K!.k4M!!&8Wrs/,q&FT>fqI>onkPt\b'Zo&-eecrgaM>X-^:q7m]=G>UZEg^;`m2iRbK9b),0%O:
^:_(e[Bm0EYcOh'VP^,]St):>R?s8+QB[PsPU6P?q?R<1'nr!=Pa7X7R4"JoS=ZCJUSk)lXK]"9ZaIEW
]YMA$`lQ6CaihrRd*8l#Za-pH\\%gQ$GaKo`miVjf%/W<j8]2?p&><a!#G)!pA!h]_uPAhh#IFIpAYBb
!#Y8#pA%@m!6,!A'Zo%Zec"&"bJ=+k"2):Y\,N]GZEC72aN_iJaiMK?_na"!\[DFB&[&16WMZGbTU_L@
R@0A*P`h.,NWYS#"UP/8rWrK0"9op*NfF%")Np>NQC4/1S"?:IUSb#kXKJe5Za[QZ^;.Y)rl>;cbK\;<
X0DT0$amOW]Y(tk^;.b>fDX8$glURs!5A.+$crAup@n:WZ2an*!.k3G!!"A>rs.Tb+nPI%pc%gFMuWtp
ak>7qrRLu#!7(SX1qUB1[Bm3FYcOn'YfXu+aMc!3^q@:gZa-g<X/W"oVP9ZOR?s8+P`h,gNfB$VMi!4P
4U(fk.0p1c#mpkaNJE@KMiE^VOH>WiQC"#/S=ZIMVPgDoYd1RB\\#Mg_8F:la9BbrVl?i)rj)p?\\#Mi
^:_S=fDa>'f%/W<j8]1Op&>8g!(QeXpA/^;!.k47!!*i5p\tKO!%@O7p\$,@!7:cL'Zo%Zec"&fe^i*_
]=GJ][Bm3FY,eV$U9_n^`507']=GDWYcb%+Vl$2]Ssu.7QB[JmNfB$VM2-k?K7ec48d,M-#Rh+I#mg_h
M1RO9K8#)9M2R@ROH>WiQC454TVA<\VlQu)ZEpsL]=u(u`lQ?8Vl?`"Yd1R@Za[QZ^;/"hecFQfj8]1-
p&>><!+l$#p\6lO!V?AD!3Q;&#Q"2p!m:Qqrq?Hb,O#2p!!F"Xg"+^Qf)=,)dD36%\$`NIYW/_cWMcVd
[Dp%s]XtYZZEUF0Vl$2]Ssu.7QB[PmNK&jQLP:A4J:E&rI"53&#mpnY-jC"c"[%G:Hn^&#JqJc4M2R@R
Nf]KkQ^aM:U8+WcX0/\5[CNo^^r+1+U8+WcXKJe5ZaI9S\\?AgebdnuglV@4lMpoop&>7o!.=\;p[f]4
!.k4A!!)ZcrrTh51&gnJn/J/'g].BiaP$OCrRFZmeC)1@\$`NGY,nV#Vl$2[[D9Gc[Bd*@XJr(lU7RmC
Q^!YpNf/gNKnFu-IscThH?a[XH=.-d#m;bK!XT/;7soQ+H?spcIt*!#Ko%47MiEaYPa7Z*S=lXSWN3,)
ZEq$P]YM7VU8FifX/rJ0ZEq$L^sU]^rmgqt!Sidt!!#gfrs:UaT)/0Ul43jqkl?;8\,ZNpp\tK+!&jWH
q!8RK!29Gp'Zeu,f)=,6eC;ppdDiMuZEUF0WMZPeTUVFY]<s;tYcOn'US=EOR?s/$OH,6ULP(2.I!^3d
G'8"NEcQ/?AJ5=V"?Kun$4.#;G&MF#FXM?WH@($hJqJc4M2dOWPa@`)S=lXSX/rD,ZaIEWU7%UJVPgJq
XKqi3"i8R6daZeGec"&"glUt)p&G(Zp&>=G!4Vguq:PlN!Mf^I!;ultjS/ZZWrP0Tp\<nZR/lFN!rs%V
g&BS%eM#G%da?IhdE&`"Y,eP"VP^#VS!98FZEC:.VPBfSS!TG(OH,6ULP(2.I!U$\G&mS%s)7mS%;Had
$3F"M!=B,C>An?WD_#gIEclPMH@(-lJq\o8NK0*bQ^O>9U8FihXK]%=TTkk7TVJB^WN38/Zc!0td*^7j
eCE+!ec+,#glURs!&XEL#Q>\C`qoE)_863$!!!&)!8IPShY7$TScDCYp\<eV\cB_M";Jr1f%0iN"OtrL
daA$?/BP6!X/VtnU7@X<OGfI.X/VtjTUV@9P`Uo`M2-_8IscTfG'.hFDf9N0BkdQZ!bi_]#RUT?S,s$'
'OLcQ/8Ap9DJsH5EclVQH@(-nK8#5CNKBHoS"-4MVl?c(TT,2&R@KqFVPgJrZGumj"OYWFeC=HI"4l&Y
OQ6BA/,&uLr=At^q=aZ^!!3'!RfEL01'-\@U&Y2Cp\tJi!)*+]q;;SO!/pm['Zo%[rm_)"eC$_4dEp:f
d*BnX\#6.$U7@X;P)YBRQE-mWSsu(4P)bNYKnFu,H[9jXEcH#8ChdZsB4GC[@pips"pk9L[0$^?)IR%R
@kM>(B5)*uDfKf<G'81ZItEB0MiEa]Q^OA:U8P&bM2RCYQ^aS@VPgE!aN`#Wd/MDodaZeGeH=CRhN6du
!@.U<rsJZ0$0:mTqLS\J!S7;O!W)j,#8epQ;eL9(J9>?n0,Xrl!!30$!9sOa!W2p$!?Gh-s5itT!!3'!
%0RS+<Ha@gQBmbb=t^H>!"T>X3F-unQ^3u$Iq;)$(BjR7k5YM(p\tJa!)!(\ptQ,@!<3)u!"B;]5\#>1
Q^3k`=uR?&li@%toDf!q$5j-MkPtYh$Ng#%!X&u7qZ$^4ak>8EeHsaTda?FhdEp1`rlZ_%VP'NMQ]dAe
LOt#BUR[a=P`Uo`M1pP2I!TsYEGoc3C2%6h@q&nTr`p"<@P%`h!05&$#R);V?!T'g?!^uL@qB:eC2Rs0
EclPOIt30*M2RCUQC456URZpiM2dO[Q^aSAVR=LgbKg(5"OYWFeC=KJ!nQ4ij8]3%rqHF!pB(liq"FPs
!!2ZkiW'/o1NC%mq>U*f"TJ/GEZsKD"UcSVYjq_lrrCL@!!F$CbP2#0rr`5ZBb:7DiW',c/qr6[rq69p
rqG-%2@ALF!6b-:#D3"[q=aU;#3l0g#QluJk54lP"TJ,>AJt"<'EJ1hqXiX\Vi-7PJ;'N&d,sutr$(;(
%kIJLle9InWM?N,c/8$fYke>3'Zo%Ze^`1!daHOidEp1`bKKn+A@\G&Q^!MiM1U>,H^:.eP`C`[KnFo'
H?OFODf0B+B4YR^?s[,E>?Y-2<a%<b#m$gV$4$k_>?4j.>$G9<?=75PASGmqDfKf@G^FplK85AEOHc*%
Rt,m=K8GSLPa@l4ZcN-f$-gcBcHsqcdaZeFeH+Qhq>fg]!>th1rsA8s&+95dq,RIrfDl$Y/ViEbm/I:h
j\Z-\!!2ipq>^a-5>>UH_!:gmrrC=A!!WH)!!"IfrU9afr/1mA!!4$tp?V_aqnP5r!!!$"!W)lf!!'A"
rs+/V@f#foc2m83![OH6mf*Ljgd_JI!<Mfm!6t*7!W*/q!:p0k$iKYs!&+0K#o(M7f%&=#eC)bDcnNbi
c-+5M`5BF#S</hlM1pJ0HZaRrP)bHUK7J>rG]e%FDJX#uARf1U?!CK7<Duco:`*+k#mpdBkn"()/5oAA
;,^Lt>$>-:?t*UkAS5aoDfKf@H@(-nKo(eNPa?lBH[p^%MiEmaS@-8Q`lZ?Gc2Q#gd/VPoeGdu!hiQn!
!>b\/rsJ/o(\.7nq*Y2`!U0UV!!<EbYkR8Z"S"_W!<Vim!W`G3oD\g8qu?g#!#3*2rrMa@p&OU_!ZJ<B
k5PMT?j?K.#lt/:(aM4OQe"=q!!'(ors")U@/9Qmc0YK3.amqgpAY0`9C`&`)ufI/!:](M!9a%T!5&%,
$5CV6f%&:"da?Ihrlu,#bK7lG`5'$u[@<)2Kn=\uG%G]3G)hQ;Jq/5pG'.eCCh[Nl@UNJG>$+g(;,C%a
9he8T4U_T$bO-#K#Vf+J9heDZ:fC:n=Bf';@Uit^C2Rs1F`r+]J;&c<OFM1hG'ealKo(eUZbF/i`5p'B
bK\>Xd*U1grmV&#e_ZDV!;6Bn(&dn,$KqI3o(VkQ1]ROWh>dU#QhTG<"2#!A!V??p!<<,>s7QBlc2I\G
!<<*dr94.]r^,iL!WdHBir9AZdaZn/jQl@1r;QWo"@N4i!<NB)!<<,$p\tJN!+>Wsq9T05!!<6%'>3E+
"4nCj!VHEmQLk+Vme["a!V$0g!!(=<rrN*>q>^g%'ZenWe^W$pdJhL4cHXPSaiMB8]XtY\Z^ZZ$J9lBZ
Df032LOt#&G]e%HDJEfo@UNMH=BJL!:JX\X8kMZF7n,`S#7B2U)[$I*8k2BC8kM`N:Jang=Bf';?t*V[
Ci465G'\XgJqn_fDK0fDH[g[%Qa!s0]YMG)aN+k5bK\DZd*U1geC<%!hN6du!>#,&rsIZa-M@--p+-1D
!T="\#"d_Ol2UGV"7R--!V-3k%f>r!!6tKC!W`:@jo5A\/aEB;&DQgV#6+GgnFlh\jo5W5!!*-%!WrE&
X7uVuK)f<Tp\Dhu!!,glir9&W5P+pV&cDS,q>U]h!!=,h3`[fu!!(RCs%'?o#8@mk+tc1^'ZenVeC)dm
d*U(bc-=APaMbp/]=G>RYcO7CH['[QDJEflFb"d]EcH#6Bk:d^?<^T6;,Bt[8kMZF7RTZD6NKFc49Z2S
p*TnL3(-,$6psL78P2WM:Jatl>$G<B@qB@jDfTuFI"H]TASQ+&Fa/:aQ`R?q[CNrc_oBd=aij\/#gguH
daZdshN$Xs!=o&%rs[<U.JEN1o-OG<!<<,]!!3aYp=]HHp([&t!W`:Xp&>$:r;ZhEn,N(\!Vd/l!!*c(
p&>F!crD%f!!!$01mIh"rri97!!*,u!!&G]rs")U@/9Qn]CQ"(!!/V\rr`5rq>Bd_!+PX%!W`:_o`#0k
!=e&`q>3eN!!)3VrtPGS!.=>+o(;e0!#3N+e^W$pdEp/pcHa\XaiMK>^:_"aZEC1)VO)[MEGfN&@U<>\
G]I_=ChI6c?<^N3;,9t^8k2??6pj:-r]`_44Vn29lhE+5%QQ[85<qJ#6UXC68P2WO:fCCu?!q,OB52=(
FaA:??t3haDfTlFPc(L]Yd:aL]YMG)aN;WMcHcF9!RfI"eC<?8j8]2jr:g3m_uMFhpB:"-!!32]!!#1N
rsAVh^lEGFDMuI+p&G$k!TF.M!!"8:rrgRH!WZ?]rr]J*!<M]j!>"borrLLhrW!31'c@Pb!!!4Wq>^!b
!W*<)!!NN>'`\5up\tGM!+>WsqRc>!!<gO;rsSeF=<e7X"UlMH\,>mu!a5R)pAb4+r:U'kr"&l3g\LU:
,OGI3!qc6e8BCiKn+ueRq"HKC'ZenUeC)akd*BnZbK7iF_n`pq[Bd$;VPBfSQ@!F_AR\tO=B9<XCh[Hi
?sQr:;bp+\8kDK>6:*q#4?EI%$91'b![7+03WKdOr]*,&3^#\m6:4438P2WM:fUV%?!q/TC2@m4?<CK@
@qTUqG`nYmVQ$Z$ZF@H[_8O@7aihrScHsqcdaZe%NoU0@%fH)$$G6?np\4IN(]XR;oDn=[!9<\N"7D.'
$i'c(!\2"WrrR3@!WE'!!VZQp"82Bf"O-oH.fSK.#64`&+oj/-rVup!p&G*Hp&>S;!!!gQ`p*!_mb4'b
!!#"Xli.=g#m5F[fCFh"!0m6X#(ln`q=j`toDemmbP2#=s8J#krW!$%#7(G2!!3X^rq??mr\='G!1EKZ
"sa2]qY0M!m/R.ur:g4,1B;Rop\+=WW;lo4aO\khdEp:fd*Bi6a9BMt]XtSX-*F;HUS+-FQBHQ,@piMF
<DQY1B4GCW>?Fg#9hS&J7RTU14Zke)3".`(1c.-4!%7F7<<*g52E`uX3&s)a5=.\(7S-3H:Jk.r>@(cM
Bl73P=Bf'=@qTtFQ^aSAVl?c%Za[Q\_oBd=aj&,Vd*U1fda['4q>fg]!=o&%rs,\,2u*.BkmlSN!&sWO
'E"^U!<<*%(c59+G&CJ8$31&bqt9snq[ENI"p"c+!!2ip!6b*9"3gfNoD8IprSNc=3%,pt3+/fZo)Ara
!(+a7!!35t!!30$G4kk>>lY%JnG<"[p]gTmqn!XE3q31IrsJ]9!T<nOqelH7QM:C`K)f<Tp\MPp!!&ni
rt4H9!!"0\\_u`<iOj:[!!"24pAY6h$NL8,!W2ou)#j4.#"JZIqY0M!qZ-3f!%@UA&aTK(j8&EBp[]X1
!#3N*daHPBcqr$4aiMQC_7[CjZ`pO/US=9HQB$r_G[al\<_uL^;e'3@>$+Wt91h]D6UF%$3]T/X2Dd6H
1,1F:+ojCmqJ$!J1+t:91G^jH2`Ni\4[;@i6q0a?92APi>$bZN>=qUe<a/d9Fc2?EQC4>>Vl?i)Zam`a
_oBd>bK\>Xd*U1fdbKlD!!*T-p\tK&!&jWHpu`%I!;QTpj8&]_r.5I[!"D/Sg@=q5rqZlqpZ?]3!$;%1
rs*!5@$1Qk!<Mrq!/L:J!mL_7qu6`^<Y+p)!WkLPo`#0f!"\V$!!*,q!!*l6pAYem!!on,q"FFUp\F[T
bFFPC!!%lLrs&&6jR;g>rr)j'1'"'Fp\@;Z!0-aQ#(ln`q=j`uo`+trpAYN9"99F@o_SF[q"XXiqu$9&
,QJ8=pAY8e!!EW/rW2uu!W`;/p&>5U!(m"\oH3H#!)rXl&8(u7q=jUVqPF5n!#3H(daA$?(<t%DaMu-5
]=YDTXJr(lSsbn+Mi!.>*d1ji:eaPP6;_#l<DZ=\8Oc*75Wq.f2`<KK1,1F7r[eL1,61++qKi2^0.edT
0/PC=1H%0N3B]Vo6:==992ADc>$tH#8P;iX<a0TsLPq1UQ^aSAVlR&-\%B;g`5p$Cc-=Q5ci_\DglCh'
p&G+'r:g3rScD7UpA*_Sh>dOKqYqA0&-)\SMrsj3q=jXWpA+R]q=sZd&-+``rs.<Z*qjm[!!2ip!)WCh
!l5iTrVmN+8H8_k*D:^J\&Q(PFZ0U,"0hIu#Q>YB`;<pB!r)`qS+cjcoE>5dqtL*`"o.oJ?5WeC!!<6%
#5.`j!VQj!!"&uJ,;`5?,QL=0pB:7M!!%E@rs")U@/9Qn]_DI/!<=);p\tH8!!#X[qY1!_$hsJmn'SA:
@gN,MqtL*qrZ2&?,le#Jqu?^Fp&>6M!$Lq.pFYk7rVuqkq#:a"&HKWCp@e7S/-#]5!#3H'da?Fed*9hY
aMc$5^:UeYYc4LpSsu(0NJW:<I!Td991h]B5X/%E:J4;M6pj4(3]T,W1GU[<0)dF1.k3#!,m[iQqORs9
r@9KO/M/S.1,CaF3&s)c5XS"48ki/`<C0#A8PMu]DgQtdLQ.=YR@KqFVl[,/\%E3d_o0X<bK\>Xd*U1g
gPt7o!=o&%rs+ql;>Kq]i!/$<!=8Q#rs89N!!"4Bo_S@^p'LKhqY&jHB0%F[";V7E!5A1,#Q,&5g\Ef/
!VcWp0D>DH_8uTT#Ls=b#Z](=q>U3sq>'pcqWL`U!6t3:"[<!QqsG<r!!*E&pAYM&!(-MUp\+=VoPk3:
!!WE(!<<-#CA.Z1N;rtf#5S<)%HdK]2ZNi-p\tGM!+>WsqRlM%!7CQ@"muTq>PIslp'gck_+b^I!!!'&
!rtsers#V+0@^d;!W)iuh#IELrs&<)#N5FR7-ssSkkP/h]Ds/Jp\+=W_#OK:!#3H'df.TPcHXPR`l,d/
]XbAOX/D_cS!T:uM1pP/G]e%E<_#PE5<M&#91h]B69mXn2`<HI0.nh..k3"tr[7dm49sX0p@n+@>pB7r
2CU++/1iM.0etRD3''2h6:OO=9i+&:6:444<GZ]!H[pa(NKBHoS>)m]XK]+F]YMJ*aihrSrm1bpdbBfC
!!*T-p\tJf!)NFbq:PoK!9*tY^Ae-Eb7+F\L\1H;p\+=TqY8fk/.)(O!%@O?"Y0SRr7MGO!!+5Ap\t9j
rr2p1_Z9`jfD>=;p@n:TqYKmOhV$0V.KC7_pAY;4!-.l3I/![A5PG*aq$6uJqY'[Wq!^<;!!*i5p\tp'
#lqHuf#FbCB2L]<_#!gb!!%NCrs")U@/9Qn]_;C+4T>BWrrrBM!'p;Rrq6HgqUme#!!(RDrs/K9!7A[c
!!2ut!(?M["Y0SMqYG$r!!*W.q#:UZ!.4S9p@nANr;[-<`mrJ`d*Bq]aYLrW`5'$t[Bcj4VP9TKP`CZW
Jq&)iEc,W)<C8u53Arie7RKL,3]K#R1,1C5.k<%t./bM`-6PGDq"FFUqe@)t-n$Gk-n-Vs/M/S01,LmL
4?l/#7nPp&3^5kr;.jcdEcue[Ko(hQQC4>>Vl?i)\%BAj`5p'Dc-F\_"45HMNT:'?%fH)$#ESp^q=j^<
"Pj%j<r`2m!!"V-qY0aXp@nFW[lFZb!!)?_s82g";#l4EqGHte!>PM(rtj\t!)rRdp\+:Rq"jNe>q$El
!WrT-!20&c#*JsXq>&tTq#CDhpAYQ1!%dm=p@e7S4TGH_pAb3Nrr;fo#=8EEqtU$crVl^"qY0g_7K<F<
p\tGM!+>WsqRlP&!9a+V"JYr4l1t>P"o%hZ$NL8&!!"bIrs!?@<r?/%!W2ou"SMKg!-JDE;>L'_mJm5H
q#:Zn!=.KVp@n@A$2jj!'ZAMKd*Bq]c,duG_7mOjZ`^:*U7Rj?OH#*LJ9uH[De`in?rK9L2`*9L6U*[o
2`*9C/hJV(.4?Sl-RL&Z*@!"5o_8+Rp@rqY+rqaa,:4`b-n-Vr/1iM01H%3R4[MP!1,LpM4]#NtB5DR1
G^P*sMiNseS"QXVXKo7E]YMG)aihrSrm1_og5Y.n!=o&%rs!iN@f#fod-q&&!"U4PUAt9;nbVtQp\+FY
]Ij*_rrMfn!06dQ"a^5RqYJ#%!!*H(o`#Bu(B@)%q=XFSp\OB3)ts=40Db_Irs#\-3V`CC.JWrDk4\f`
<<.1<p@e7VGQ7^E!Vl]s!<@oKrt:n'5l'\:7p'bkU;#7>no=^1J+rsIK)f<Tp\MQ!!!30$2#%"QrYY^&
q[)uip\+E4!!!$#p&G*[p\tEZ!#P4o(A\"2K(f3KgAi8bqU>T8!!&&Srs4\d2u!(?pA0+5!#--ceBuXg
bK\/N`l#U)\[/TCVk]o/S!T:uMhQ\/G]I_=B4G7R=AV+:1GLF;3]K&T1+t41.k)nq-70u[+ZXPFfBDc!
p@e7Sp[R=kSmF&j+!i6\-n$Mp/M8\32E3]]3A*$B1ce?7?".;VCiOTDI"I-3Nfog#U8FuoZaIEZ_8F@9
bK\>Xd*UL+q>fg]!=o&%rs!rQBDV>tbM3(4%!DdS!"S)bp%J.VkXPXR!sAW+!Wi#q!'g2W"IT6Wq=k![
)#+(3"82<d"D7][nbE+W"8DZ)*rQ'>!<W3#!rr<.qY1!ob5a<lp\@kd!!*8upAYOI!4ht"pA!MP!!!$#
q#CHs!(utb!oEu$!qZ7mqZ$g(#Sn0U!.XbC#(ln`q=j`up](<8p\tB3!$Ce,rq6NlPQ1ae!qcNnKD5BL
rY>LPr.+VD!?(n2rs&B1!7CZ4)#OC+!!)3Wrs0kMS,2jPp[f[-!&YJ/eBlLdc-+5M`501"[Bcm5VP9TM
QB$lWJ:)T^EGT9!?s?`3:J*Z$/M&>+2_m$=/Lr7ur[.jq*[G7;nc&=bq"Od]')2+np\=R[q!G@[+!;mW
-R^Am1+Y"01,CmK.kE>,3(d"I>$YTKBl7p6H[g['NfKEnSti3aYd1aN^;It3aNMlUcHt7&j8]2jr:g3q
IfO!Tp\E"o!;$7"!<@cKp@nBc'*&"5!V-3k+9)$7#-\(fq"FMJpAb3_p&>0e!W^.7rq6Qjq25@U!!2cn
!9s7X#29,*p@nEAq>^O.r:g3sr!ih`q=aRY@.F9t.JEcGoDfHiqWJI`!!%NCrs")U@/9Qn]_MO.'E.\*
"$Zd/qu69mq9B3F!!3'!pAb1HpAYCo!.=\2'EA19r;ZiEpAY:_!.=Y=4n&FP(B+(/#jMC$l1juHq7c_+
*u)ZCd*U%^aiVQ?^q@._YcF[sSsu(.NJE+8H?F4FBbY&b?!($$91_T3/1Dqn0/5%1.OZ\D-3bV7=P<NG
p[Rq^q"j]u4WPdpr[0HM.kNA/1FX_%/2p$j92JVl?".A[DfU#JJq],CP*_Z2VQ$`([CNrd`5p$Cc-FV]
fo,;!p&G+'r:g3qIfO!Tp\M_W!!P4Sq=nq2m/R.sr:g3qa8dshpA/e(!!*)`p&>G=!'L&Np@n=WM#[MV
oDem5p\tHT!%%=4qQTer!?1t3rs8B%%-[K[p[/gf!!+)=p\tHp"UjMgq+(8]r;ZhIp\tGM!+>WsqRlV(
!*]-s$i:52f(o%5p[g!:!V-3k&,l8&#,;/`q"e:srW2uu!(-DZ"fhVXp\TRA!!!&m!!*'rq#:\D!(m"\
p@nAZ!!<-"1B8--eBZ@abK7iD_7mOjZE1%&TU_@3Nf/U@HZjCIC1Uj[>#S3i8OPp11as^p,V1Jr./kP!
,p+P7p\FOVp[@e[p\OE++<i-2-6alh/1r:p-7C];6q0a@:f^e,@qTUtEd3(cLPq7YR@^1OX:DJ@\%KGn
`lZEKcHaeiMrXj=%fH)$#(HV_qY'cpfDl0X!"nVo>lXj+o)S[g!<r2krs$jN/bf#9SG*!`htI'WrYGRB
q=jUUqQ^1m!!'"mrs%Tc)tNb!anbu<)ZKL2$2"90lhL2L])Vm.!;ZZr(]O1/#5el3ht[&>p&G)Bp\tGM
!+>WsqRlV(!6t9<$JPP'o(VkOqO@Ndn,NIZp\tN\!$Ck0b5_MCr;Zg%!;H6f#PJ-(j87""!<*#l!!'Y,
rsSfF!3Z1mp@mnd!!3#u3Y]N^cHaVVaN295]XbGUXJ_hbR?iqoLOsnuF`2#+@pWA>:eOAL69dLj1+".e
+t+fc-7'rZ1tVTuq"F:P1\gdH,U"H[-71,k,p4EY0f_?]6UsaC;-7%1@qT\!FaJXmM2macS"cdZY-YIF
^;7b/bPo`fcIn-:!!*T-p\tGI!+Ym!qRQJ'g].NZc#3R`!<MTg!<M`brs%?\-2%$.]Cu:*d.[JIiW'hb
p\+=Ul5'F$p&P$k!1`f`#O;@,nb;k2!rDru)ZKL2$1e-.lM1)LEW?.3!!*u:p\tKs&-:P\q:PoF!!%NC
rs")U@/9Qn]_VU/#Pn;tr;R+c!)*.^p@n2+!!;Wi!8mPN#5J?/jn\Kkqu?d!!1EQ\#V,nCqsYI'!<Min
!=&Aqrs7Q`([q.mpA1HY!!s@Xda67`bK.]>0"eg(Z`^@,U7@R5NJiF=HZjFIB4G=R<_uF]7RB=#3&WNE
,ompJ-RL,c*]2sSl1R(1p@e7V]HeXG,UFf_*$6FY1cIEW5X\+89i5"u@Uj.kEd2t^Ko;%YR@^1NX0An=
]Y;;)aN;[/cHt1$j8]2jr:g3qIfO!TpA2>M!!=AJ!!2Bc!:9[aqu6oY!%%=4q9]6<!!(%4rr[rT9DSS\
"8Z=("7Z?kS+lpfl2V^mp\EYLqZ$X7rqHF!pB(ukq"FJP!!2Zk"!@OBs7u["r!N_fq"X4ipAb2Cp\tGM
!+>WsqRlY)!%7L?$;geTqY0^[_uKi?n,NI+p\tR!'`cVVqH<k"!rW*!-hmWHs,@"Cq>!V_!V??l1ALkW
D?*W2p\+@V3WK0]r;\bj_pZiRc,n&F^q@4aYcF[sSsbn)NJE+5G&hM;AR\qI;b]kS6U3ao2DQm:.j>oN
+seKV/):!dpA4J@qPbP],UFZS)^6db0f(aK4[MV092APk?t3baEHQMRJqo>KQ^aYFWNNP7]Y;5%aN2QM
d+=3:!!*T-p\tGI!+Ym!qR>qobQ%Y0p\tKU!%%=4q:YrG!!'M%rsCmhOS\\Epu2Y]!V$-iSGW?brs.fh
)"RFsiX,J^!>,2'rsAQ0#N5FPp+67Fo)JbFpAYBo!tFJhp[fU&!!%NCrs")U@/9Qn]_VU.?2":%.fcgN
q"P!h@K6K2n,NHkpAYCF!4hq%U&Y5rqu?`bp\tNf!"S8jTE"rno`+uXq>Ud#*rrVCp@e=A%/Kr<'Z8AE
bKJ#I_nNalZ`^@+U7@R5NZj=5J9l?XDJ*Hc>?+Hl8OPg+3&WNF/Lr4s,9%OF+s4Gniq>;)q0s>0,9%OD
-RpZ"1,LpN5=7n49i+qr@Uj+jEcue[Ko;%WR@L%MXK]%A^;.\,aNMiRf89>(lMpqqr:g3qIfO!TpA2>H
!!!&e!!)<Yrrh3Z-2%!6q;2AN!!'7trs\lG!6G!1pA0"6!<N;m!!&P`rs.fh)"RFrkn*^l!<r5lrsAZD
!6"^-nf.W1o)JbmpAY3a!#>_,q"OJ/pAb2Cp\tGM!+>WsqRlY)!2B5f$iV"DZgHr?iue=%!Up'hUA"Tm
2uoHEq:,WM!W2otHhRIF,64Y=iX5_f!;6BmnG3(mmJmjbq"=CXNW9([!W<!L'>`,AbKJ#G_7mIfZ`^:)
Ssbn+NJE+5G&hM9@piSE;+jMN69dIg1GUR5.K1Xu+r_C;HMR<qp&t-aq"$j.*?5t@,pjuh/M8e83'9Mp
7nZQT>$bZNCiOTDItNN:PaS#8VlR&-\%KGm`5^!FcI[p6!!*T-p\tGI!+Ym!qR>Pdl2V%u-:`!?]@,R4
jTO`)f$sZmrs.E]-2%$-j9kY^!4)A!$i1)7j8&HDod0Y>!V$-iSG3$fl2V[lp\<tQ&GcA,iqEBX6NDo<
p[K"!!V69kT(`0hf`3Prp\4A/pAb2Cp\tGM!+>WsqRlY)!8@2I#Q,#2$4@1K$MOPo!!&berrtpmNViJ;
(A\"3*rbp6#CHMAq=cTD!qlTo,5D0HN;u?Ap\":T1B7IW!W<!?'>`)@bK7iC^q@._YcOasS<oJ"M1^>*
F`D51@U<5<'i.Im6U3am1bgU6.46Df,UFZL/b&Mmp,2U?eJf;K,pXc`-Rp]$1,_-U5X\1::f^e.@qoq&
G'egpNKBHqSti9fYdM*U_8O@8c-Fptmf<%]!=o&%rs!rQA,>oqX4I=O!W<!$'2,7ir8dk_hZ+tqp\="c
q#CEqT_JHnn,O0kq"FO;"T\Yn!!&P`rs.fh)"RFrkn3al!1roa#b1lTq=j@q!!2Zk!:BL[#FPQfq=aRV
-i3oB!!%NCrs")U@/9Qn]_VU.o(W.bp]pZr!!;Qh!<Angrru=#K)568.JWrDj7iQYlMqO_qg8AFp&G)9
q#:aR!1E]WpA*SN!!30%rW"eU'>`,AbK.]@^:UeWXJr(iS!K4sLOsktF`1u(?sQf09hIf=4?5;T0.eY$
-7'o_,9n,5qVCiIq.plmrZiL1-7:8p0/PUK4[;J/9iG5$@V9LsFaAOiM2dafS.;9kX0Aq>]>2A+aihr\
M<"X;%fH)$#(HV_qY0iaeGo[^?/PVNs7$$nhZ+tqp\="cp](;\p\tKV!$_(0pA13E!!&P`rs.fh)"RFr
kn*[k!(?P\#kS*&h"pXf!!2orqZ$U?p&>7b!06pLp\#s.!!%NCrs")U@/9Qn]__[0$MsJrk4JcHrV$6q
<WI[Hp\7#N!!3-#BD;E1rZ2'@r7;,F!!)'Trs8<!$01gSpA0gE!&PA*dEBYQ`kf="Z`pO/URmm>OGegC
H?O=FB4>1N;bp%U69dLi1bUI3-RL,b,U4KQ7/$BGp?_K/puWqF+sS?Y-71,l/M].B4?l2)92JYn@V':m
Ecuh^LQ.C^S"QXZY-POK^;It3bK\Xqj8]2jr:g3qIfO!Tp\Lfb!8RVV)5-o`rs.E]-2%$-l4Ndk!1ET]
#KZs%p\4CX?L\$o!!&P`rs.fh)"RFrkn*[k!=eu#rs(dh<VlGH!!2]l!20&c#lP87ebSq5oHEr/!.XbC
#(ln`q=j`uqZ$X2rql`Frs2=!KDP<<;ZHjq!!*l7p\tJA!)!+]-3+)A!!*o8q>U`"!&=6Bp@e8@p](U6
_9pHJ`l,[*[k"bgX/;V]Q]dAaK7A,gEGB&m?!'or8OPg+3&E?B/L`"m,U=QZ+WIufp@mJ<0_b;:HP[kM
,U=Z_-Rp]$1H.?X5XnC@;-I:8Bl%d4H[pg.OHc0)UT(E%[CNrd`5i&(c.7a4!!*T-p\tGI!+Ym"qPW!H
!Xk1jiW&fT#N#M-p%S7H&bl>+RJ6^dYQ-i]p@n;>m/R-Vp\tK`!#Y;$pur@c!!'7srs.`f!PA81!!2fo
!s&B>rVccmrs6F@-hR0,q!Jmk!!%NCrs")U@/9Qn]__[0*raIb#XeZSqY'c#!!2or!8@;Lrr3/c!#"\r
DtX/2>PS4(491!0p@e:F&GQ5^'>`&=ai;64]="rIWMZ>XQB7)[JpVZ]DJ<Te>?+Hl7m]F$2`!*=.jlVh
,U+<N'KYm\pZM8Dp+lF%+Vl">,9nK]-nHr)1cRT_6V0pI<a/sCC2nBBItNT<P*_]5Vl[,/\%BAl`llWX
M<"X;%fH)$#(HV_qY0icn,VbS!B0]*rs.E]-2%$-l4Ndk!1ET]#G(ocq=aRS*piq-SGW?brs.fh)"RFr
kn*Xj!@.U;rrd3>'&K\\!!(I?rs1=ZJ,8m4q:l2K!!%NCrs")U@/9Qn]__[/-h%)mrs1RaT_eBYH2n!B
!!$-qrs&HD!3Z7E!VZQod/!\KqZd2Sq=aOYV>pYm!#--_d*'MM_7mOfZEC1%Ssbh'MhQ[%H?O:CAR\qI
;,'YN5Wq(b0.ne(-6siZ*\0g/gA'Fr1\^V;dYgsT*ZZOQ-Rp]#1,h3X6:XXB;d3X>Bl8':I"I'3P*_Z4
VQ$`)\%KGm`llWXM>@5<!!*T-p\tGI!+Ym!qQ&HQ!s&E&G4>M@rqc-AcG@E9`n'8Dqu6<h"Q'2*p%JO_
l4Ndk!1ET]#F#3[qY'^N'^Yl#SG3$gl2V[lp\<tap](;gpAY<q2?4M/#l"B%!<E1Np&>0H!"S2f"8;Hb
X7cMnJ+rsIK)f<Tp\MQ"!!"OorrseM\,#aoMtd8Q'E.\*#'Ku=qXbp2q#CF)r;$?pa8dOZrq?Nj8cSqg
!&52'd)jAI^q@4aYcOasS<oCuLP'u!F`2#+?s?W-91_K93B&`H/Li(n,Tg%2l1XuLg@bO@1A:D:qY0C(
FsA:Z-n?l&1cRTa6qL$K=C#BKCiOTEJ:icAQC4D@Vl[23\\>u$aii7lj8]2jr:g3qIfO!TpA1cM!;HNo
SFZ[_n;ojQ#58*!$6/[4rs.E]-2%$-l4Ndk!1ET]#D)qZqY'aE#jhTlSG3$fl2V[lp\<tQ&GcA/!<<T(
pAY<q56(]c!VZQoJG&pKrZM8Zq=aOVq-3Om!.XbC#(ln`q=j`uqZ$UGjT"NF"rREcq=aZCq#CHs!6t9<
#Nu."m/(Js!Vucr7/6ch;ZLY1p@e7K('"C2!$;lid)j;F^:Uk[Y,nLpS!T:tKn=\qEc,T$?!:*$91BL[
4ZPDU/hAFu,U=;"r:fpYp\=F_p\+"Kq"?K;p@n:Sp\W_i+s\Kb/M8k<3^?)'92JYn?tF(kFaAOiM2mge
Sti3bZEq*U_8OF<eVESnp&G+'r:g3qIfO'VpA1iG!!&&NrrL\*r;[94(a1Cg2E3H;*u"\To(W.hhZ+tq
p\="cq#CEqRJ6^dJcK9VpA*AFm/R-Vp\tK`!#Y;$pur@a!!+nTp&>&W%/0`&):8$U$#BS[meHMMp[TC%
!;ultJ+rsIK)f<Tp\MQ"!!"MArrD]Hnd+pI$3JuXpA0%.!!#jirrrBC!3Z7Cp](B%s8Vur#lPA9`;0-#
qRlP&-iaprd)j;F^:CYWY,S:kR?iqmK7J8kEGT8s>?4Qn8OPm+2`*0>.jt<A#9/j&p\+:Rp\sjkp\=R\
q=jUTn*p\Sp@nCZqY9gZqXts*eKQ1_-7CDs1,_-U6Uj[D<E`^=BlA$8I"I-5O:IVIU8P&rZam`a_oU$O
L#`47%fH)$#(HVWq=aZoh>dOUo`#9o4TGHi7$,^WnFcbS#5@ibh@0V^p\tKU!%%=4q!&Id!!&G]rs+,U
@/BTmc3!A5!1`f`#O2:+o(VqD&GQ5,!<>jdrr`+W-3a>J!=CXaZi9Us"KMM&\,-*t"8]J,!VZQoJ+rsI
K)f<Tp\MQ"!!"JArrN'2f`20dl1juKEVfb7!!*T-p\tDA!)*1\,5M9?"S_`l$f1k%nb;eOqHX(&!Vl^Z
'>D`4`kf<uZa-a5URmm<NerC=G]dq>ARJ_B:eO;G5<1VW/hJM!,pX`SP54hGp@e:XqYBgJac]</qfiqT
+9!>^*r6sA)F*uX:kQRFo_J@[q=jUWpA*5^+s\H^.P3A32`a2n8ki/b?".A_EHZ\ZKo;%YS"QOUY-YUL
^r+16eV3&a!=o&%rs"bh:\j_\\bcBg!!+#:p&>K^&HE8[jn\cKq"XUYq>L-mqs"OpqtL*qhZ+tqp\="c
p](;^p\tGJ!+,Nqq7c=ur;Zhfp\tK`!#Y;$pur@_!!,RgoD]!ik1\SVqssaiZN'uMqYg*ipc/<TpAb2C
p\tGM!+>WsqRl\*!?hC=s8;m!*rlieh%Bo(0D"r4q-*Il!6"X3#j;7$m/(]$!<N-!!&=9K$Z5rHq=aOV
nf@c4!r2g&'>Dc5`50*sZ`l6eVkT]JP)b<LIs?!OBk(IQ;bp"T69R:b0eOt(,pX`\)j^Btq"OFD`.q2>
&H`"5P5JMP!&u.rgB7KW$m\5g]A`ATp\Oa<+<i$U-7LN!1H%6X6UsdG<a/sACi=HBJ;&oAPaS,<Vl[23
]=u)``lZbbj8]2jr:g3qR/g%YpA28U!!(48rs%Ed!&*:,q>L!qq>0gI_2`5,67MsKrVccnrs.E]-2%$-
l4Ndk!1ET]#(Q\[qY'ctli7$Up\tK`!#Y;$pur@`!!<6%+6DM^%0-?_!!$F%p\+@TqRcA"!.XbC#(ln`
q=j`uqZ$X2rq??r1]W^2mdBQ%n-JLQp@e7W9`P4h!!#Ugs8;m&rYkjAr6>?D!rW*!QMLOerZ2'DqY'XY
bl[S=1DIjYc,RT4\$E6=VP'EEP)Y6KI!0LIB4>.M:eaPM69I1`0.eY$,U=TY)iO+"fDD3H!r`0*!X&Z,
QMb%h"T/?%"S`'(!$q<r$3LG6rW"\S"^Cie\`h-X+sS?Z-n?l)2E<oe7S?NW>@;#WDfU)PK8GVOR@^1N
XKo7E^;J%:g5b4o!=o&%rs"ei;#0h]\*sCh!!30$/G9#RpC@6no_S:Tp\+CYjErKcq>^O;rqHEthZ+tq
p\="cp](;^p\tGJ!+,NqqPif]!1`rdrVm,f!#Y;$pur@]!!34%oAoo^p,E$PD"m_up\+CP+ohZFpAb2C
p\tGM!+>WsqRl\*!=Seurrl7"L&:Z>!;bRLrqZ`o7K<Ja!!*Q,p\tJ:!)WOa+TMTB!!)QbrsJ)m&aT5c
pA/q4!qu[/%Z.6s^r471^:CPIU7@O2Mh?P,FrkR<AR\kE:eO;G5WL_Y/hACs,U=QW+=JQKL\uo-"T/E,
"9=bc?3'p,rW<-%rWE'$#66%Dg^+&e#6"c]"9:[`b7Z$M+sJ6W,UY&n0f1gO5X\4?;d*L;Bl7s9I"R36
P*_]6WN`qI`5p$<]X))D!:'Uc%fH)$#,;/`q"FQnhuEbip&>.U!&F3BrUp?impuq,!!`N)!<E0$!%djD
"Q'2*p%JO_l4Ndk!1ET]#(Q\[qY'cWli7$Up\tK`!#Y;$pur@Z!!.$;kl1n`Fp\3YSGDpYp&Xp`"&T%"
!VQKnJ+rsIK)f<Tp\MQ!!!)T`rs+/V=ShacU1rP(#B=a%EH2rt!quZp]_DF/jT$"_qZ:R6!WE'!,P_9H
M#]p=p\+@T-ia8KpAcoN$Pag;5ZMNGNL-0,Ssbb"K7%i^C1UjY<DQ=Z69R=c0eFn',pX`\+s@sH'TN$K
!;cp)"9=bc?2t*2p&k9s"TThBh?X2\"Yp5]6i5.G*$$4I,:"N\-nI#-2`a/j8ki/d?".G_EHlteNg?*)
TV.d9Jo4aZ1*[PC"69F_%fH)$#-\(cq"OWojT,5Z!=eu#rrgjP$fLj[p&k'c^)HYE!)*%c#N#M-p%S7H
&bl>+RJ6^cJ,ipPpA1BI!!&P`rs%`g)"RFrkl;:g!!WH)!!!t2r9F:grngod!!#%;qY1!_"o%h9!!!&m
!!%NCrs")U@/9Qn]_VU.eb9"I_Z2Fcp\@&J!9=+[!VHEm6MLKfrYkjDr659D!<<+Eq#:UN!1`oZpA*GH
oDepp"9\W((]jgF$l'g52FLDMC2\-5EGB&j<_uFY5Wo`>1bgR4-R9r^+sJ-O*YaV3MZEYY"p>&/QMb%h
nH/sq,kp.$!<i<(/c\99c57TE+X/-T,UFih/i,CH5XS+;;d*L?CiOT?Ebo5d8N87E(_6oV!WiB(rWDTh
p&G+'r:g3qYQ-TVp\M_b!!#.Srs_!hCARYup@nBP"TSQ(pAb2DpAYBT!%%=4q!&Ie!!*(fp\tGJ!+,Nq
qO[$R!1`f`#O2:+o(VqD&G,r(*OGbBrs%G%X5rpNrqcX.rql#_:_`s1">R7Xq"=CTpA+K$o`4pj!.XbC
#(ln`q=j`uq>^M]pAY?e!"eMlqH1uB!=AYtrsE`G;#9i1!!*'"jSf,Wrs88t$01gSp\B[=!"8i-"9o&8
#RCY@#R:V5"W%FP%29^).Pa+Q7n6-?6U3Xi1+k((,U<:4#9P$.'TN$K!;m!)"9\^jr*BBn!sS`NpYH/V
"T/EI!(-S.(EFP>+sJ6W,UY)q1,h<^6qL!D8jkm%/L;DQ&.AgK"U,#3"pPA2#6G)5"69F_(&dn,#/L9m
p\4L,i;`k3pAYWt!sIETp\+=WW<*&$!Wi3!qu?`:pAYBT!%%=4q!&Id!!&G]rs!uR?MaBlT'QFWSG3$g
l2V[lp\<tap&G.,U]1/j!V/VU!!`lQ018fG=@WEJ*XVcF%iJTsp\OXXp\+@Xlph$U!V69kJ+rsIK)f<T
p\MQ!!!#ggrs&H>!5\O.Hd_uk!!'S(rsIif'^kj:!!*'9rqZR"V>rCGp\+@U2"L\K"9o)/#QG)/$2t87
$OR1G#lY&I#RUtP()e8>-7LAn.46Df,9nBS*ZYrSr/1RR"o\W-!1*Oh!;lrm!uV(apYH/V"9er5"U+lm
qp#ut*ZlUO,UOfcr[S:)-mTrU(D@8d$2t/4#m^kG$iUM3$2k,3#6k>6j8]2rrqHEsaT*pep\N#/!9X=^
`:j3@b5a!bp\+=Wh@9Me!<N;s!!*,npAYBT!%%=4q!&Id!!&G]rs!uR?MaBlT'uaY!!&P`rs.fh)"RFr
kn*Ui!Wcs3qu7!%Jcu,_90XU5#5A0(#8oOHaRK$$p\sjkp\OWb)ZTp?nc/ZOp\tGM!+>WsqRlY)!?M1;
s82g"<<-b1qOGb0!'p;Y$2tnEZM`&N!!$6urs1XcL&:W<puVtU!!!0$#6"i.#RMmc#RC_D$4@4K$4@4K
$4@1I#m^e@"pYG@$P!a^()\)4*?H48NVn\7r<<0'"9=\a?3'j)!WiB'r;us##66%Dh?X,b"T8K-!(-S.
(`iSs&f_f+'G:oc$OI%B#7(SA#mq%IrX/c7$Ocq@!"&W1!"&T/!sSr5"69F_)#j:0#29,*p%S:-i;`l>
pAYJR!)rafp@n;G!!2]l!$hC@qu6oY!%%=4q!&Id!!&G]rs!uR?MaBlT'QFWSG3$gl2V[lp\<taq#CF-
fD>Leq^qjL5hl,0o^C\TYa:&oIu^MHipld>q=jUVpBC<fqXLX=m/R-Np\tGL!+PctqRlV(!:oj`#L3;k
o(pN1!<*#H!!<Q(s8Vop#]]o@qXc'6!7:QA#l4c-fD517qOmBZ!!N9*rW`i;#mgkC#mq"I$OR4KrX&W5
r!NB/rWWf8"pP;<#RUtM#(lc2!<*0#"9\^hr*BC&!rrDu!<<3#!sJZMpYH/VrWN3(&-+umaU8Rf$OR.E
"pP58#71;8q[*Q9$47.K$4@7@$31D3#QP20#6P/7"U!fc!?_=8rs.Qa,P:a+g'$pGnc/[XpAYD(!-7r0
pA)f2nc/ZAp&>9S!%%=4q!&Id!!&G]rs!uR?MaBlT'QFWSGW?brs.fh)"RFrkn*[k!>tP,rtkYa!#Mm7
qY'XWp\Og^q#(*hr;?Hgq=ssb#5\2kmD*0NlMppLp\tGL!+PctqRlV(!2K8f"T9#7YknRe%KHM1cN!sW
p\tN]!#4kuFT;jJq>U`<!%%=4p@e;Onc/XmrW`?,$j[.G#RC_D$4@4K$4@"F$47.J$2t;1$2k,-#lOu2
!.+R"!;lm)!s8Ofr*9:)!s82trW<?),kp.$!!E0$#6=ffqnrL>#6"l,#QP,/#lY/-$3pqG$4@4K$Ocq@
!"&W1!"&T/!sSr5"8W#`!!+8Bp\tKb!#tJ&q:Yu2!!)Q_rs;j/Gl%.-q,77ooDemmo(E"chZ+tqpB(-T
&bl>+RJ6^cJ,ipPpA1BI!!&P`rs.fh)"RFrkn*^l!<qicruSHG)W1Gdp%J+RqXAtT+[9FoY0c%elfmE^
`1Ug$'E/"2!W<#h!!&8Xrs"&T>5@ph]_MO-2"gkSJ,h7sp*]nA!RC`G5kk9[rYbb>ZMf.N6MUQd:]PD0
p\+CL'(Q#&"TAW)#8.:K#m^eC$47.K$47.K$47.J$2t;1$2k,)#Qt-Sr.tFP!=8`+!<AA^>lXs/p&PI$
!s8NKpYH,T!;up%!<>:[_u]c@rs8T/rs8T1rX&u=#mq%I$4@4K$Ocq@!"&W1!"&T/!sSr5"69F^.JEcH
nGj3kp\E_OjoG>[!:KR\$!RCPqY'[Q)ZTp2!!#[ars.E]-2%$-l4Ndk!1ET]#(Q\[qY'cWli7$Up\tH_
!#Y;$puqbiqZ$VDq#:J7!+,X"rq?NjpRiK%!!WH,$P<pT"8`'"!<N>h!!&P`rs"Vd:&4P[]_MO."82Bf
#l+c,Y5DZ-!s/9!eGoUVqY1!oC&h91/c`-Ors8Q9!6G$1pA22e!!<?."pb,5rWrc7#RLhF$Ocq@"UbYF
$k!C@$3:G=rsA]1r<NH0#RC>5#QT2KLB%>U!Wr?'"oste>lXs.o`5="!rsV@h?X,aquR0)5PrA!"pP;;
#lOu3#RCY@#mpS=$4."G$OR4K$OR7LrX&W3rWiK1r<EE/"pG+t!;6Bm1A:_Qp&GTgp\EhTiW&uBpAYGN
!)r^eq:PrP!qcNo!q>j^#N#M-p%S7H&buD-!1ET]#(Q\[qY'cWli7$Up\tK`!#Y;$pur@f!!*5sq#:Z5
!"*`#o(`(E3r8mW!VQKs!W`9%!!2Ngr;Zi!p\tGj!)<:`qRlS'!.=J>#_rC$ou$h3!WgUI!4V_&#2oP&
cj^'Mqu7*)s4[MlnbDhPq-!b!o`,-q!!EK1#Q>#.#nI:I#mq"I$OR4K$OR4K$46Y<rX&K,%0m+D#mq%M
#DN)6!!NQ("9edkr*9:)r;lfrquI!(!$q<q#Qao-rWNZ06Mnk4%LidP#R:V6"p>/9#mgn:$4@.H$4I7K
$O[:L$OQqB$46\;!"&T/!sSr5"69F^4nem\q?75gq"X%[iW&u/pAYHG!$h12qQg/%!VZQq!!%'2rs.E]
-2%$-l4Ndk!1ET]#(Q\[qY'cWli7$Up\tK`!#bA%pur@f!!"MBrsDC!!!F<)@iPIK!VufO!!'+prs#%p
9)85X]_DI-')hP(#lYkF?1f0;!WgpRp](:]p\tEr)$)Mn/GT5NB`M93p@e7N*Us+3"9o&8rWrK0"pbJ@
$47.KrX'AJ$OR4I#m^eA#6kD>$4IFW'GhW+*<$r_'9<!K!!NQ("9edir*9:(r;lcqr;d*(!$q<q#Qal,
"pG/16Mo%Dr>c.`)Aa)#%h/jPr<EK3#RLhG$N:D7$4@7@$31D3#QP20#6P/7"U!fc!)*%c#Q5&7htd'4
&GuOk!!&bersAQ0!7(H:TE"rmp](Bs!%%X9rs.H^-M@-.l4Ndk!13H[#(Q\[qY'cWn,WCe!1W`_#O2:,
o(VqD&GuM.<V?@na>jY%!!!&R!!'1rrs#P)2u*.D]Cu:*S,WH_rs%?\!1%p2!mUcH%/]f!"DRo;!/LCM
$2tnEZhjChq8`X-!!<?."pb,5rs8c6#RCb8$3:G=r<F;K$4RR_)]p7N.4Qer-7'l\+WqgH*"e,,MZ<na
qud0'Pl+ee!rW/s!;up&!WXM?h?O)["<n!Q!(-S.(*";8+<_pR,UY&m/1N%p+rqL5%LWRJ"pP;<$2k22
$2t21$2k)2"pP55j8]0dpAYBs(BDnZq!K'a!!*Qcr;Zh(p&>;$!'9oPS,`Niq#CKt!"AGns82g$ec7&i
p\="cp](;lp\tGJ!+,NqqO[$R!1W`_#Oh^.nFu_B&GuM.Ab5p-r8k5/9.qD!"n2NT!!(%5rs#q42#-h@
`:j64&Gu/#"HWTh<=7mh!W`<(kl:_%p\t6QrVur_q>Uig!#+_op@e?$!!!)m!!**(rW`9+.L-.\"9er7
$P*sl,V(Z36UjR;6pj0u1bUC.,pOTW+<MXE*"n8/MZ<naqud0'QMb%h!rW/s!;uou!X/QLpYH/Wr<+VS
"TUmdc5%B>*ZlOL+s\Nc/MT.E5XS%791hZ<2_HI!((gr\"U,#3"U583#6kG="pG)/!Tj@^HhRIErZ;-`
r;#n,nGr@b!YFXer;ZgBp&><j#69;PXoJG&qZ$a"!<<>]r;QcSp\tKA!%.C5q!&Id!!'7trs!uR@/BTn
T'QFWX8Dqqrs/)p'_(nml4Ejn!+P?q%fZG%nDhWkNbhKN-Q3O"iW&u#p\tK9!&+*@q9T0:!!$O$rrd6?
!WrJg!!E<'!(/R,!!#afrri<?!#kk4rsOS^6i$HLp[oj5!!;cm'ESC>!s&E(!X&c>'d,"d7T3]/DfHk;
DJ<Qa;b]hN5WUh[/h8=r,9e<S+!)CA&rZ[G!!NQ("9edir*B@*quQ]qr;d*)!$q<q#Qjr-0*MLZ6Mo"C
*$$+C+X/*U-7UT#1c[]a6qU6U?=R_gF`h_BAQh_h/gD2F#mCA2!W<'#!<W0!lMppQp&>=H!,UNZnL+A<
!UTjh5l(FPr;Zj!oC`+gW;ls=[g)m7qZ$^!!"\,frrN"&p\tB>!%%=4!r2$mp](<)p\tGL!*K*kqO[$R
!42G"#PA'/m.gA?&GuM.8)aITrr)]`j2RR+5T^7,!:g*if(]1KdJtikp\E),!!(aFrr@B.!!E<&7edhb
!!*]1p\t;2!*]0t#V#hDqY'XYf`U^D1B\1',;DSeCj_/,S",n4Ne`44Ec,N!?!'ru8OGa(2_m$;.4-8`
+s7sK*#oTLr/1OY"oJK,!0mCf!!E-"r;ccs#6Fu-,kp.$!rW6%"Z-A_6Mo"C*$$+C+X/*V-S$c'1c[]a
6qU6T>$biUDfpDYMj0QuTUq[:K5t0f1aX(N"Te_e!!'S&rrt4Y!!3WT$iL+r!!WHZfDkmM+T)3>NV*5T
N;rqi#6Fr&!!,"Pqu6\R1&(\Qb5`j]p\="cp](<9p\tG^!(m%\qO[$R!5A4-#5S?0kkOo>!#5>2!?M0m
rrrDtgO^jVrVup!nc/[Ip\tK[!$q11q9B$7!!*o5o`"s+$i0kl!!6[1gZJP:g@tUKiW.'qrs88t$0(dT
pA0F2!$;]/YdqKd_n`ggXJ__XP)Y6IHZjCHB4G7O;,'YN69GrA1G:=0-6scZ+WhaG*"n2-MZ<naqud0'
Pl+hf"7uU!!WrEJpYH/VrWN3(0`XQ;bn_9>+!2[O+seTe/M]4D4[MV2:K:S)ASQ.(H@LR*Ng-$+WNNYA
_8O@3^:S+J!;6Bmht@!Pbtol$!Ug!k!>7GXo)8Rhq?R!"!s&BErq-3kg*6:l!@>PXrrVuu3qrXZb5`m^
p\="cq>^Kr!<D!Nrs#%p7eucST'QFWd.dPFqZmGcq"O7rqZ$W[eGf^DHkQJ[!VZTm!!)6Wrs.rl(\%1p
g'@?P!s&B[rq-3lq,7C^!!F7fs8QEg!!$j0rrW-Ap\FgpV>rFHp\+=T2":Q'!#3H#ai)!,[Bcj2U7@X7
NJW77H?*q<@pW>;:J+#A4?,/N/Lr.n,9e9Q*ZQ.4Mu8J5"U4f,#6:"d?2t'/!qu^$!WrN),kp.$!WE6$
"X3q5qoolr*?Q@I,9eE^.kNM73Boi"92JYp?tF(mFaARlM[kc5S"?CSY-POL^r+:IOQ6BAo()edrV#6b
Q??M15l<bM7p'M[YhJaJqYpib!!!$#!#/qao)B!MDDWR^-:EdUr;Z`q!^?ZMp\tKC!$h12q!&Id!!)<Y
rs#q44S\[IT'QFWj7iQYr=K%[q=j@tqZ$U_jo=cK!r\#`nc/[Zp\tKl!=nGjq:l8M!!<6'!)<%a!qBt;
nGj%".BrgOs8F&>!<<0%!u(J1p&G+9rqHEnYl=Iu#W_s>qtBaZj9tGW1)%CH`500uZ`pL.URmm<NerC<
H?F.?@pW>>:J4/B4ZPDT/Lr4q,9e<R*uu=6Mu8J5rWW6'"9=bc?3's,!<N;u!<<3#!sJZMpYH/VrWN3(
#QR3gc5.KB+!CP,,pk&l0/GOJ4[V_4;-7+5ASc@/H\-s0OI)H0VQ$`([Ca5l`mf_(!!*W/l2U/N!4i%.
"=)p4(&dV$!<2Zk",-^T5PP0bg]/5_p\<tb!!*,u!!*/lp\tHG!%dj<qPN`^r;Zidp\tU"*<=+Tp[TI-
!<N-!!3X`L"7mrA!VQKo"8V]k#Q+r6i;!-.$M4<!!*/Rh#6!J45T^F;r;[$&#SedgWUfue#k\6"!<N?'
?!-Io!:fLW#l4c-fD5.6qO?pR#nt%t`500uZ`pJYWMZ>VP`CZSJ9l?VC1UdW<_uFZ69dLi1+k++-6j]Y
+<MXF'8udH!<*0#"9\^jr*BC%!rrE"!W3$'!$q<q#Qao-rWOkR6Mo%E*$-1E+sJ6Y.P*503'9Go8PN&a
?".G_EHZ_]KoM1\S"cd\Yd:gO^]VKqe:lua!%6:r$%)^Q$Z,A2DZFM3rrBV/!!#:_s82g'kl;7Yq"X+e
!!*,u!!*E&p\tH\!#kG&qRPtn!=&;lrs14WXSV\`+ohZC!!<6%!kd=gpAY0m4nSdU&,c2%#Q>YBaSGVp
%.sT'!<E0crU9amrquN\mcs?6qYg3h#gE>N!WW4&nf[?#!<Ak^rs6UE-M@-,p\75H!&>5'cGmc;]="rG
Vl$,VQB7#YJ9uEYCh7'[=A_da6U3[l1G17.-6scZ+<MXF'92pJ!<!*#"9\^jr*BC""9/H!!s\fOpYH/V
"9eZ,0`XQ:c5.KC+!DgP,Ub/p0fD!R5Xn@B<E`[<B5Va5I"R36P*_]5Vl[,/\%KMpaOH",!!#jOs7lU$
9)qBDq>'eH!!'aprrpdP!Z_8"p\tTr"9?^Bp[B%#!<N)u!>bY.rs&2t%d<]`^?kn$'`Iq/r;R'r!/LFF
p*Kb?!W)itD#Mf^"9'qR!VcWq*rbm5"u61QqY9Cio)Jjn!$L_,s5X+ZNW&n[$AJB(li7#Mmf*Ph!,VN*
pA""hmf4%8^s9s;^q@.^Y,S:mS!K.qLOsns*HH%1@U<5::J+#?3]K#P/h/4o+sJ0P*ZYrSr/1RR"o\W,
!0mCcmf3M7pY5uS"T/EX!(-P-(EFS>+sJ6Y.4d)-2E<of7nZZZ>@:rTDfU)PK8GVOR@L%MXKo7E]YVP-
e;*l#li7$\eGfn/!4D^tp[]I,!!V-?rs$@D!+W>80),AKrZD2eq??Wb*rl<Bqu?^DpAYBr&cgAUq99!/
!!"J@rs4)S=S_^c1&q@Q!!NE)!#1Oiec,gQs7d$'!Vl]q2td1T@fU?Ap[K?s!!NB)!!\Vchu<pe!!PdD
qYPO(!!*T-q>^6i$N1P:aSPW(qR6G,n,P3W^s:$=^q@._YcFXqS<oCuM1^2#Ec,T$?s6Q,8k)-13ArWE
/1;eh+sJ*N*Yj_5N<&n\!!E3#"./q##4W32$8;/3"TSN("9eub"oq!ec5.KC+<_pS-7UT#1cIN^6UsdH
=C#BIC2\-;ItNZ>PaS,<Vl[23]=u,"ajl71!!*,mec,^M)ZU&bq=aXF$N:#+"iT[*#DW9Z9DQ4#/GB)M
DZCjLq"?3<!<N)u!(6GZ"u-+LqYAeJmJm5cp&>36!%[d;p]Ena!<Mrq"U?uUkkb;1rrnkl"9JT*qu?_0
p&>5t!&s]Ip+#J1!@?@hs6fml5QH<1q=jV>lMpq?nG`jM!#tM'p@e>d!!2Qh*tuK;ai)$0\[/NAVk]iO
P`CTSIs?!PC1UdW=A_^]6PD[F2`!'<.OQJd+s7sK'TN$M!!<-"#7DeRS*Th;kOIa@kN_d3XBd=drW"\U
!(6Y/(EOYA+sSB^/1rY83'BSr8PN2g?=IJ`EHQVYKo;%YS"cdXXKo=I^qn%4eqrhqp](:MeGfdO$jGPa
pA)`*!!.6AmJdL_1B7Ddp\Vi.,PM-CnGrWFqY3V^!W)isG4kk>DZF#<puMkN!!&V`rsA;t%I!W`<WE.$
q#CBqr;Zj5_q4nkr=o<((B+=5!!'@urs%lk&F9,c2s^MG1=Z<`rs(%S]DD6rmLngc!-n#5!Gh`?<r2Oa
p[K9m!'UAr_pHNF_7mIdYcat&Ssbh)MhQY,F`D51@U3)791_N<4?,/P/h8=r,9e<R*Yj_5K`DK/=JFUC
qYKs[p[@nVpF?"8p#EAn/eA"Cqoos!+<i!T-7UQ!1H.?X6:ORC<Eij@B5Va5H[pm2O:ISGTVe]iZF@H[
_8aUJM<4d<dFA1$pAblnq"FQUq>^O=bOGN7p1X^2%gSj)p\Du4*WGd4#\*iBfDKsq!<N)u!5%q(#1<Jp
oD%bjmJm7Mo`#1@!2o\iEW?+@q#CR!!!!.0q#13nnLFMZ#U1fO.l'4P8m2I<KpfL)m.pYLrs!BAC=Ndo
!r`0"o^r.e*rr58q,Zb\!Zm3gkPkka[gW8Xq=aX6"8Dlg!!"G;rs8TF!42Lpp\Dqu!&tY0dE0DG^q7"[
Y,S:mS!K.qLOskrEc,T$?<U?)91D643B&`I/1Dnk+s7d>&X*%:T],S>qYBmZp@Iu=p\+=Tq"jj]k-D/c
c5%06+!W'[.kNJ43''8k7nZ]]?!q/VDfp;SJr,MNR@L"LX0Aq>]YMG+bLVO5!"C1Orr)`fna5N"f@SNd
rOhm:qR[EYf%/R:kj\6?r;HZR!$1Y)p\Jn)!!4C8p%JD1qSko-!!5[OqY0^ZgAqi`s8Mlbk1S>DmeQn\
*<7G[d/X1Jqu@E#s8Mi`jk&,DmJ$SZr!`YSqXl0)!#Yb:')hk1rqlEYn+$/Mrr<"X!&sZKS,`QjpAb4T
nGN:ekR[(]"TfAoERasYrrq6Z+S`DIrW!WZrr2fclJ^=Fi9U%4rr7ZP3V`H#oDnOa"Tfodc1_/,rt#%q
]P/_t!!!5Tq=aZf!!2Ed#6sbuqXj:Fq"Xjsm/Ra`q"FFXDZBe=n,Nb/^sU9D_n`poZRrD^VP9TIP)Y6L
IsQ-RC1CXU=A_d_6U*[m1bgU5-m^&d7sqr:p\=U\p\+@Ui:\huq"jg[o#Zeg/gMbm/M8e:3B]\s8l&Ah
?=IJ^EHQVXKo(hSR@^1QXK]%C^;.YhaNN1fk5Y\r+r1Ul!s.3X$N^VJ*Yn`-p@n:V:\Fc0"!Uj3^s:3M
^6r@X#64`-3QCjip@e1RmLoUa0,4Zf!"&fF59Kq+>5'<C!W<!$"[+@L"T&0*!tckI&HHYDq+'lR"qOEe
+VP+_rW!?-$5k0[1B7KuqoAd=q>^Tu!#!-Frs.Hh!&DL6`3oTM$`B_hP_XKi7QN"=%fHA/'TN(arsei4
#NP\e!!*'3.22seq>^d+(+:C-#29!_j8]en(,T6LWPHg(c-FSJVh\_G+q+>L$3qqk`:WfuqMkOWmK!4d
!YlCQrVur(q#:_[!'p>Rp@n5/!!*,i!&"eld`]_M_7mCbYcOatSsbb%M1pJ+F`D51@U3/;:J"#B4ZPDV
0.eY"/)'anqY0gZrqGgRo(F^1q>'dQ6R4060/PXL5XS%7:f^e.@qfh$G'nmsMia6oTVe]kZF@K\_8OI?
fm;NU"WJ[9/1`RD2?Yrl.P)qO+WV@5%L<.8!!PFZp\+>>l2V"m,Au--qY1!_"8D]R(&It8!Zip=)@Z`F
!!B*m!!3#u!!2rs"9fGN%0l_1"!7+3Gjk_5!W)it!Y,8A$O-D-"[DhK%fcY,!!,7[qu6lX#66dSqtg<f
!;lTi%/]nsp?pJ3?5ikE(Z4rd$2u(J_#*C0!!*,u!!WH4,T[^7$N'l+A,G0hl2V"g!<<W^*!Gd3%g3V#
Brg7eqYBmZpA/b/!Tj@_(B+%.$Rc"FqY'XYgBIWY!Up('$b=d1aMbp/]="rIWM?&SP`UfWJercWEGfK#
?s?Z.91M?74?,/P/Lr/$mJ-DK!r)E^kkFiF0),,6p\7Q1/1r\93B]Vq8PN&a?".A[DfpAUK8GSLQCFVG
X0/b;]YMA'aj&Faq>fa[!sATGmJZ_Yp[._Uq>U+"p@\(LnE]/gah4Cgp\+@S,P1sF$qWiB-S$rFG,O-g
qYC*`#P\)fS/D;.!W<!)"4[/=o'=]&J5ZY,(DOb9!!3'!!!3'!&-;k4.IZWdhT`BiB/q6fqn2+m&3T=C
k1\(lS:YKF3U$5j!!<#t!-.l8%d=<#5P4dEp@n:Vik*4RrlG\og"bTOmdg)IqXq-D!!'k4s8;m%1'"*G
qIKX-q>_+.p[dtEjjCf;M/7P3ocsM<!UKe*!WWBQJ%;tQCdTj--mU8o0g]/lQb;5Gp\Oa]rV$KkqYOFr
!U'Ld!<A,Zs8)a%mf3dZq"FFXN<&qYn,P!HZdm=B`l#U(\$N<>VP'EFOH#$JI!BdRC1Uj\>#S-e6pNmr
2`!';-o1&_q=Y'fp\=RZp[[hAnH8:No(W.Y!r)H_q"?.6-7pr/3'9Dl7S6KW>$b]QDK9oIItNZ@P*qi7
VlR&.]=u(uaNMl^ET-s$!W\Sbqtp6hq<dtVq>U3nqu$Bjqullmqst]t!!E?NS+$1Nq>g?ipBgZlq<jn(
!!*0'qZ$cEr;-<frqlutqY07Ec3F(E"p+l,=T&'nr;6`qq"XaV'BoK!Mu<JLqYUBjp]LGG!!2ut!/(.J
%/CS;4n\XEp@n=X`Y&%I%g<1F%h]Tp-8Io(C(UFLn+Zhc5QI>Nq9\m:!P/1+qu6Ktqtg51!!32f!!rZ-
!rr<=?GZ.,!rMiirq?Khq>($d&,H"pq"X[]qY9R3QV%_f!p9Oa&H)>'$[Me>q"OLVpGW'P!Ug"1#d2\&
aiMB8]XbASXJ_hbR?W_iKn+MnEc,N"?<^E+&PGV]5<Lqa0eFh2kkOlGp@n=\q$Hfcil7^;B6&!3mrAnX
J"XF(k4&*>q=s^Yp@eL[.on#M1H.?X5X\4=;-7%1ASQ.(G^k=#NKBKrTVeWiZF.<Y_8aU?d+W+4!V$0]
!"BI:[@WJ1EFMX65X7Ollnf/-3^>r"942akP+oF`%.jN9!<<*8>-d/[p\=R[q"F43UJDR(!!*-%qu@9/
!0H-LQ?H1o5=8:mS@m`TquH]r'*/.7Fl0NeDbiV]6WS]+^u.-O!UB^rVrPt'R=]<dBmbr<`8A$-rW!!#
!,VK2$T%i4nbMnOp@nEb$gdor!<E0_p\tC^!1`o[nGjL*!#,G6%^id/G$%7"5=8:gOJg?h!W`>e!<3)u
!#Q2!C8]MCo(MkSq>0p^q"OINj3XZC3Z8,"!!!&^!!%rPrri<=!4)G+p@e:E%KHJ0n,PTO"fBhqbK.W;
^:CYXY,S:kS!K.oLOsnuF`2#+@Tur59hIlA5<:_[0e50JqY9m^p[?nLNb;'L2Dd<[<UE^9;-RpQBlA?[
XNTVlpA"IYq"Ic:1,_*S5=7q6:fU_+@qfh#FaJXmM2macS.MEmWN`_<]YMA'aj&2d>6"]b!!36)!n72O
!<WAk!"0,U01&<%4=M-O!!)]m"9AT2"p+Gu!<ir.!!E<'!XoA.!!<K7!WhZg"9AT5#6FT"!s&Q7"T8<#
3r/dbU&Yb^qY'XWp\LTf!<N&tnGiRjo_AFj491oJp@pcJ!!<6&"9nGu"9Ac2!Wq9[%g*:]-T!tU:I[T1
/L)/@!q--Y!!*f3q#:WE!#kD%p@e?WlMrjFRFfg1aMu-3\[SoLX/;V]Q]dAcK7J;lEGfE!?<^E+91M?7
4ZPDV/3)k]f!'O%4=qs0.P*1N/ce+.qF^BP4\8I]B4kdb@UNMPDhF_!hWaZ7.l94H5<qV/9i5"s?tF(k
Ecue]Ko:tUS"?@PXKo1C]YMG+aj/8d;#gXX!!<6(!<W6$!<N;n!:Bgf!<W6$!rrB(!V$0i!VZTn!VZQq
!W`<"!=Al/!!!$#!WW3$!Vufm!WN6"!!NE)!!!$#o)SUe"T\W(!<E8t!=/Z+!!**%!"\o%rseo@!0m?R
p@\1VUBLW!kl:_"q#:OI!3l=nq.'=&!W`?(r;cp#!WE'#!<WE&!!<9'!Wi)sli@%drrV]jrrM'Y!2fMj
#WDa'qY'XWpd46G#`IB]cH4)D^:Pf&Za-[1U7Rd=Nf/UAI!B[MC1Uj[=B/-h7m]F&3&WNJ8M)21+<i'X
r[.[mr[.^n2s`d55=A^^?!dG7/6c4V;d).K3\iZT4[;D,92JYm?"7M`EHQSWK85JKQ^aYCWNNP7]=btu
aiak7d+:_e!TX4^!<N?"!T3tW!<<,t!V$-i!r2j!!WW3$o`4pkrW)s"r;Zp#!WiDu!!33&!;cfq!!!*"
!TjCU!<<3"!<E2)q>Uo3!$h+1p@n:W^'=W=!Ug$c!!&\frs/K:!7CW9qKDc:quHm"!<N<$!;lls!!*-%
iW',`!W`9%!W<#o!Ta=\!!<6%-3!]>$0qQtjS8HBpu`.P!%WHNd*BhU`50*s[Bcs7VP'EFOH#*LJ9uEY
DJ<Te>?4Tq8OPm03]T,M+!1D)r?;=e+sJ30+osSamlCV54?Pc*>5D>V<`iI)><!WR2`Wub6UsdD;d*C5
ASQ.(G'egpMiO$iSti3aYd1aN^;J%6c-Xhg2?3d=!!30$!<*#\!;6Em!WN0"!UTmc!Ug!g!W<#u!Up*g
!VZQo!TO1U!Vl]r+o_<;$:b)@qY0^Wq;2barW26`!2fSl#P%j*lM1)LGl.OA!W2rs!W)ls!WE'!!UTm\
!!!&u!<3)t!<*#u!!!&X!!(sOrsDC!;#9q[pA0jN!UB_!C>$tZcH4/F^q@._ZE0puSsbh)(QF3%I!B[M
ChI3`>?4Nl8OPm03\Mg*+S?cW*?[3(2ZZQOp/<MC7O'953C#o#8PN&_>@(fPCiOWFItNT;OHuB/VQ$`(
Zb*re`5p-IcI(,jq>c*I[f?Duq#:UA!5\O*p@n55j8]2.rVuir#I4=]p@n:WHBeI1@/L!&rsS5p"P<JC
p@n83!!2Bc!E7_OcmHrW`5'$rZa-a3US+*BP)bHQJ9uH[DJ<Tg?!:0$91MB81+F\!*V:9O+>`=?!]*5A
r)!8e/5]%i-n?r87S-6K<E`[;B52=)G^k=!MiO$iS>)m[Yd1[K^qmt1c-FV_c60LpJcP]K!:osc$N:_>
eG8h3qN:g[jo>Dcq"app56,Wup@e?+a8jNd!?(h0rs;6s9)85TpA)]/kl;bhg<n9mbK.W<^:Uk\Yc4Lo
S=,\'NJE+5G]e"BB4DBW>$+Wr9ggcg/1N"d)YP*O)Bq!'1'00q;"[O5:bjIN/Mfag:K:M&?tF(jEcubZ
Jr,JKQ^aSAVlR&.\\,Yp`lZNQd+#uJmf7q>_Z0]NrV6C!-31CKp\42"!!;9_!'U/X#PS<#cM@2-q#FTa
!!(pNrs.Qa#MT"Ip@e[b8cSnY!%e0N/Cr4qcHXJN_n`pq[Bcm5VP'HGOH#*LJ:)N\Deruo?!CE07Q3(W
/M&7eobmlL,W+mE">Vbg3_f9?*)JaJ/ho.?6rR2l?t3neEHQSWJqo>GPaS,;VQ192ZF.<W_8aR<cHsqg
[gW6;P5q<W!?M17rs<-7;u64a^&S08p&OU_!8dPO#^ZP%p%S1RpbS]GoDelSpAY4G!+>[&p&t3J#lk"k
!%f;>da6:ac,muA^:Uk[YcOatSsbh)NJE.:H?F4FC1Uj[>=pq81bp[=.2Nj=pDF#L-8YHQo.g>$2tT`p
9h.#n1H%3R7p9;1B5DL,G^P*sM2mabS"QXVXK]%?]YMJ,aNMlUd+Ool!!1=EJcOs6!?M17rs@ce#hf(N
D?'_=k5YK_q>Ucs$36gsp@n@M(#Ar(!!30$>5%t!V>q=qq>U'gq,le[!tiB"dJhDlaiG[E^q@:eZE1%&
TU_F7Nf/UCIs?!RDJ<Zg90GEu3&EEX,T$+k!Z3=@l7i;q9(bh)9hIf51cRN\5=o0oC2\-9H@UX)NKBBm
St`*_Y-POK^;7h1aj&2Z"ju(V!!!%U!3H5%&,l8&#Y>"CmefEP!<MKdrVusIrV?I!;#i$:p\+@W^mG*%
4nem_pBptcqY0aXq;2MA!%eDUf?hmid*'MM_7mOjZ`^C-URmsAOH#*NJ:)N\EGf>`6:*q#3B'>o*#KP1
p)*l]1@?mq0`j+#:%V(/8P(s'4?l/%9k&$]FaAFeKo:tSQ^aYCWN<D5\\,_q`l?3Id*U1q?iU6/_>o/f
nGiRWp\tNq(B>uN:]LLskl:`4r;$?q]DqrGq>U'iqHX(%e,[Pi!Cm(^rs:^d3VW:Ap@nA]jT#@;g<ooH
%*cl7`5'$r[Bcs7VP4ruR?W_iLP(,(G'.Lr8k29:5WVA24W#"R)#+sM(`G!i0`a[:p.Hu091r)S4?Z##
8P;lkG'JCaK8YbQQ^aS@VQ$`)[Ca/h`5]pEd*U1ggHtrC!W2qL!4Mq.NqWJXn.>X;+92ECl2Ui^rqZR&
lNR?!q=jUVq!/Uo!Ls,iEV9>7PQ26Rq>U'hqT]6,!!E<&@bfE2cm-iZai;02]XP5QXJr(iS!T:uMhQe6
HYQSX:J+2H5Y"gS1)BO#!Z2q2kqN5m5Y_2MqF`A39hePg:I%B@8ki/`B7#/\LQ.C]R@L%LWNNP7\\,_r
aN;`Sd*^:ke0b4sk5YJ_rW(FLJcblP!WX8?pAY9g-ia5Jl2Ui+bP;)Ene;'To_A.Qp\KC=!6G<(!W`9%
rW!!?UC[2$!?K\_rrh3Z!1s&dp&k'_1'$eF!W`9%q#CL[gX=LKckamJaMbm.]="uLX/D_aS!T:uMhcn%
>mjb7;+jMO8m>D".2MRo!>lpB0`j!k:%V($9itV+:e"&O;,pe*Bn2%uOHc*$U8+]hZEq*S^;7h2bPoin
dF-Uc'EA.7nGr=a!!/#Y_#OJ0o`"ri)=.>*"#Ialq#:ck'EB6=q=XITq</IlV>prSs7p@I"p>Ju]DhL'
%/(23>P\!dp\+HH!!)3_/-#\N+k5#idEp7caiMQ@^:_"_ZEC1(TU_F9P)b<9@UNJD;bp%Z?=I2@+W'eh
!>m$E0``pfo1Kur=C,HH;+jbe>$YTIDM+%6Q^aSAVlQu+[CZs^^r+78cHae`dF-aG"98Jb!!336(9eOK
'a,9a!"&;irri>J;\oK/!<)s$"WU.9p@eLrb6n:kiVE3Ap@n;U!"0RB'a5B]!([(h"TSJtq>Kpb%f@IM
1A(A8p\"@A%KI.YnJ)*@&d%q1.fo\Y]@YKYdEp7baiMK<]XtYYYcF\!U77R:MfNQF@pWAA;,C_7AReLS
)"eaJ(aUs41%I%"0/iAo+')l_BkgXH>$YNIB52F?Q^OG>VQ$Z$[CNra_oBgCcMl/ndaHuq!<*#^!!37/
K'I]7Hg#e[I!?P0,Q.-4&H;7FP\O#]2DIEf@">K=p\sjc#6&`F!%d@1rUpEkPQ1b`KALt$HNeeHJgLJB
mJd@f.0(FSq>U'lp\-WI(jLQ#HNJ_,"oA9+!<E1^gsjd"d*No\c,n&F^:V"`ZEUC-VP9T?G&_G7ARf"M
<Fp)`B50[IoGIZH.-NAe0/H5n9-?i"<G-&_EGer`?t3haDfTuWS>)m[XKo1A]=u,"aNMm.ciVYDeH+Dm
irB,^@Y^e1XagS1B++bhqqV5Lrs%7&!!#meq>L!lqS!172i3':XFLG*J/A:#o`+gg"oKeL(?#&gp'19f
GQ7qUL[]fqKk1Ga!%@pK>2RiXda?FecHXGM_nNdoZa-a7WMY]&G]e"DBk:aZBm+N8Ci1sCo,.QZ1@6gn
0`ad=oLg3%Bl7p2G]-nuB52@*FaAFnUT(;uZa[QZ^r4=9c2Q&ndF-Ioe0*cO!Wlhdhg^6-nUC^r>mgWN
kh?%Nmm@'T';#$pp@\.RqSNaB,_CVtI+3Z"Ig(@TD?p73n,ERc,QJS5qYp0mp\M)q!()V4Ifb=6"oA96
!<N6Nf@AC!dF$=fcH4/G_7mOjZPB^IVilX^I!0OKCh[BoIsQ6XEGQp:obdiK)_No/0`a[:oLgN*BlS9?
H@KpGC2S$6G^k<sNi'%d[CNra_oBd@d*^4fdaZe#[g;a/li7(hBo\X=\;:KLM3)Ed!!IoQhZ!o>6NR5j
<U'ASpC$]gq"q-#!$d,UMi4Wm"HZI\(B3h'#2p3q)r(5_rq6QmeIDR4Nf3@_"HI4#!!2ut#6=f6^=h#c
df.W8d*BbS`5'$t\$`9$Mhcq8H?O=IC2SWTIsQ9]@N66X)$1Wq0BY%k00i829D2"(B6AHGItEAsC2nB@
I"6p+Mit'K\\,Sk`lQ9Hd*U1fdaZe(Hf>#,!\6:\1kIR_1^Z-"1cd&g!!!n<rT!naoT16s!!PU7q>(!_
#Pn(<"98WY3W:i82T[f;1^#]s)urh)rrnJd!%m@0rUpHliu%h%0f\SX"?7q8!!2ut*WZ9AKAP/.da?Ih
d*BhV`l#O']<%?\Nf/aGI!TsU$#bNSJqAK!HqtRN)$(QrjtQoj4\bQA)bOF`I"-a%Mi2UqG'ealLPq1U
Q`7X3^r4=9c2Q&odF-Ome_E:R!;?Hn!K@)i!!<mQkPjcH(]<0?-isAK%o_!Rq=jUWpA"L@1B7CU!W<"r
!!(.3rs&$M!!$$jq>L!jqVrOq!<N-!mK!7fr;\;I!<E6%6JU,@eC)ald*U(]ai;66Y+1iEOH,6QJ:)Ta
LQ[XPKn=i,4;IK+!Z3+:k:m#k3DK-=)+mnVJ:`K5NKT<HG^k@$MiNseR@C7k`5]n!c2Q&jdF/$D!nYU1
NW>=E"W:.2iV3<ErrN,s"npfN@k8#e!!W`hQK\/?p\sjkq"jE%$ig;/U&Y3*r;Q`jrsnsL"TT.+q"OLV
p@nF?*o?r%!<<-#(!G5.e0!)cd*U(_aiVK*US+*EP`C`YK7J9)R?EYkM1pS6.i%[o!Z34=pG)1m!A?A&
9,^E!I"R-2Nfo]tOF)M1M2m[`Q^jhGXM`0%cMl2jdf._shNZ%\JcOR+!!2ut%g!=d1-eE3@U;\s3@c$W
!W<!'"<:70jS/NHrq6]nq>0K1(]XO;!<LdPbQ%WPp&>QrJ.DV\6f\%:p@n:TqSX'#!!J;=e^W(LeC"9B
)U?XHZ`0h!Ssu(0OGemEMkHQ+P`Ul]M0L*YoGI]I-o0s?!\Z?%nk10MM2RCWPa@o7P^nOKNg,s"TVeWf
ZGXr4d*U4heC<%!gd2#A!JCHH!!WH(#W"%G!qcO$!tc\CDlMUaq>0m\%/0Giq>0j=AJP7G!Wr?%U&Y2Z
q>UZrk)qJ'!!!HV\bZ'qp@n=Vq32-b!SRN!3o&<:eC;podEp:_[BQg5VP9TKQBI8bNME8?S=,V'Nf[`f
)"SUG.Pg?Fr%S:,1.b449-m/GNfK9gR@KqFWKrC&P*VN-USb)pZEqKrd*^:ieCE+&`"N+O^&W`bjT$+u
!ZuU4j4:Q&MgThsKoMG*d,F<_q"jj_rq?cpq>0s\g4q9b!!)ru!<</D!8%8Y"$0P&JqJP_6R3!;!!NQd
XS)D`rq6QjqWg`R!!1aQ!tDorec+&(daHO_]="uLXq[e/TU_F9NfL$:VPBfRR?s)'8e`-7)$1^.1?U@o
0/#^foLgB"@$$V>R@KqFVQ6eaOI)B*U8FomZEq$N_pQo\eC<%!hgG(sJcM\K";+/$kP4oO!;lclrV6cr
qYBmTfq;Fm#5S=a!"fAS8Wr!+qY0^Wp\4OYUDNt2ec5e`hpp9Ve/QiS]=b\^ZEUC,US+*EPc:siWMZG`
S=,_11DTO"!Z2n1jY6lk6;:*Gp.HZ';j*Q<St`!XX0/e5R?sG:USk3!ZF.6U]Yi.IeCE+#f.$b$Z2fIV
mJm4fr;[T:+@C(6^=(m!kNqQujkeD#SpF<i('OU:!s&H)!Or-c!!iT.J'$U=q>0pdp'LKhqY.fY!!!'$
fDl$T!$0M@rm_\1`4ist]=5,PY,S:mSscXgZEUD9WMcMcSt;#h(A&IF(a%fn!\Z]2o1L<&M4U<6VQ$W!
Za73JS"QOSX0An;\%B;e^qnCKe^`NL!rrAg!.k3U!!!)s!!rZ1$P!a]%L`RDq>^Qt!<E'!nc5Ba'0#gc
qYBm[q"ad_p>V;g!rr?'!VHHV!;lgB!<N7Ri76E+`5'1&]=YV_Z`pU3VOjj&]=5,NY,eP!U8E5S(\ARH
(a1Zr0`j!g:%M!o8UI50Vl?c#ZF.0P^9XK1WN<D3\%0,`$bjEl_p6c_gc>E9!KI/A!<*$!!<3)r!;c`s
!<E#urW)s!PQ2-mEUE2ao'u,-d%"Pp#lXf*!<</N!$_LE-J$ks_o'=+^:q4i\[A`IXJ`,7^q@4eZa-a7
WMZb$',^?Z!Z31<p+c%k!A?D&9-?`>Vl-SsYd:[H]=bkqZ_sn/Za[KW]Y;+r_o'F9hQ-q#!.k3&!65'A
!XK8OrYknS$NeHN!s&CWfc\5O_8F+'^:_(g\$NBCY/A8q^:_(e[Bd$<WNJH!)&O4a)$1X'1?C4l0/H5m
9-?r#>,JC(ZEpsL]=Yep`lPQhZaI9Q]=bkn_8F42`mm?R!.k3&!0$sZ!Wi&rb5`dg!$TA(`l#^1^qRIn
]=52SZGal)`5BC&]=G>TZEU2T'cIr,obdc\1@$[j0`Xf;9-?i!9q8PqZa[KX]YMG)`llQ3Za[EU]Y;1s
_8F40d$=jG!.k3&!7CiM!W`<%!;cf@!"T)3!WZu_`5KR0^qdUq]=AQ^Zc:A8aMu6;^:_+h\[/i0)]/)`
!ZEXGj=pZg7.a+o8kV[4\[Au[]Y;5"`lQ9Fd*&i+]=Y_i^qmk)`5p+Pnc47A\GuU1b5h59!!/bn#lt#+
!<E0$!<</q!7Log'!f^#_nj.(^:_(i\&$J=cHF;K`l,[*]=YPdD\_j]!Z2q2j"UWh6;:,F9,pEE]=Y_g
^qmt/aihrSd*g"E]=bkn^qmk*`6s"g!!!&I!9jL`!T*kW!P\X6!<3)(!!!&m!!!&c!!!&u!:Bge!NZ8/
5gdTi_na(%]Y(ekrQteobK7iF`!4,p^:V9U'D!(B(`qZk!\Z]2oLfTe7prm?^;.Y+aN2QMrm1hrd`/i3
^AbnN_o0[-)!1hm!!aZ0-63p9&IJ:>$ORI^*\0>]!$EO*(&egI'd+Xo!#5ni)\`ks(aCC/!#RL6((glb
'cenMpAbdR-l!'p$Q(E'!!"'.-6*a4$2Fi1%hfg)3AUR6#9597'+bHY&d]0c)B'\A+s7a3m/RIt5VF/n
&JH'/6R_[/!te-V*W?rZ+=p,2m/RIr-QE[(#RCt[-k#hN#o"X"$j[+H'dOOe!!<EP;gS\9Q?GtF"8)X%
*]YD]'+>6](EbLbo`,[U/0,H<$4[^f,r#T(!#J3V*#0%mq$707',_rL3<RV.kQ(;V$j)(.`5BF,]Y;%o
dF/$A%+*;EbK7cD_nj.#0,='r!Z3(9j"UTg3DK*<$qaC"_8*t,aN;WNd*Vd>#1V/?]Y;+q#/S6rd7+*;
h#IX9s8W)trVcQh$N0l%rr;s7!*0$trVZlus*k"Lq>^R)mf3:b&H;]b!!"8Cs8MuorVc`qq$d#u$&AQ[
r;6EkpC%$+!%7dGrr)fjqZZorrr<#YrW!-es8Muqqu$Hlrr*9)s8N#qn?=hQ!!2Zk""aKPrr2iurr<#Z
pAb7$pAb'i!rr:!li7+Gs8Dro"TA>t)?BU6#tt<tr;6Bhrr5dj!!NB'!%4rFq>UWkQQ?,,!Vud)9E5%k
rVZTlrr2ro#kn<,$N'l&rVcZlrVli/rW!-=rVulqrVZKg"oS>urr;TZ!5/@C!WX+Iahts1^:qD0e^W$q
rQkkrbK7iF`5\Yr(\8LG(aUs11%-gu0/lVu9E%Nk8Xmf>`lZEKcHsqcrmD;+eC)1G^qde)d";H$!<M'X
!W`;en,ERe"onc!s8;m!rY5D6qZ$Zu!/pdT!W<W0!!(C@rr@TG!!<6%*<,m9!5&10!8R&C!6"j:!<i2c
rrM1(oDepn!-\;?rVloq$hjW$D#4/4r=J;q!,VN3!:0C[!>b\3rrN*6q#CF2`:X'2ri$G(!!*f5p\t4A
quHWp!%.I?"Y0QR!!'Y"rrD,]!!!$,!<>.)`kfL,][#+-e.0pTdEp7ccHXPS`m02O)"SUH(ah*!0`j!b
9(GUZ7Y8h*aN`!/ck"OOdaHXpe^i-`^;7Y-Z539:huEbKn,ECWrVurCqu6Z\p&G(ar;Qccr;Zh6q#:Bm
&buD-!VQBj!,VT6!-S,;p\t5fr;Zi>mJd:e/cYtG!!(dJrr=\G!!"8?rrD6J!!"JErrBA!!!;cls8Dru
o`=mh!BL)Jrr`$J!!2ut!<`&irr?s2!!$L'rrN!(r;Zgtn,EC0jT*@%rW*<*C!jl8]Z\mVec!ttdf.W!
d*U(_ajF<*nJM?W1?pUj0`s'a7nrSJ"\3:MbK\?3ciVVCdf.bqeHjaQ^qn%10)u%,!!$KsrrDEb!!'(s
rrBt7!;c`r0DthMeboIJ3qrXSU\Ffhir&fV5Q(Q^3q*(KOSo.ZMu*GWp%%\Gq>U3i!Vm<"!!*W.p\t5?
quHWp!>,2+rrBn$!!*c3qu6YGpAb3Qqu6ZXq>^L_qYp`tiOQGUrVQTqr]9lU!:KU]!7LTA!5SO4rVllc
qu?^En,EBsWrNJ-!<<Ccc,%KPf%'cMrm^trs3^hm"4#1O'_3+C)D*`)0`s'`7SWJI!_HG.rQkVndF/$D
r7)&'f?M.W;ZHje!:'Ub4o>6\rJQC-LBNI*df/q=!!&\hrrAee!!+>DrVll1r;ZgDp\t9n-2@N@ao)/=
.K'5I+o_B=$_h?TF`1GuEe:t&S,E<e@f-0+r=Jr.!s93QrqcWpQLt4X7/$W\g\1[K"o8&q!1rKV!=8Mu
rr?*o!!(:@rrC=B!!**#!@RmDrrJT!r;Zj-Pl(I_rZ_CDr;Zi[p\t9k$i'c'#5S&o!8%,K!>GG/rsQJP
EH-#)Bm"g/r4CY_df9XS!<<-#(9,R/rmq"trmV5%da?Fge@?e?o,.TH*&$8*!\Zl7nOinaeGdkqdf.bo
ec+,'f@>!G!!1aQ!%IgF!;6'd"Vk2F!!&>^rrAAY!!+8Brr3$!XSi,")ZKL2!8I;L!3?(u!WF,<!!*]1
qu6XGp](=3-iF#F7/Qubr=So,!(Qhb!Vlom!!',!rrMZ^r;Qfq&,-&(o)8Ris8Rf=!!*5qqu6X`pAb3*
qu6Z*qu?a"nGE4lAH2]2!!!$"!+Yp+!UTsd!!)$Prr>1W!!"kMrrBk4!!!3'q>:0l8b`8d&M9p]#QXoN
c.gh"f%9iMrm^tr"jt]KR26\2)$(Qqi%Y9d5>C]A"%JI)dJhSneG[qsecaOSi1^S;!;6Bn*WH!:!VQTd
!!%fOrr@]F!!*r9rVlkfr;Zj4rq??n:B1Fn!!&8^rrN'3r;Zj(qYU9m/b/lA2Z*LTr"&W(!9j:Z!%@RA
!<`&orrJFKqu6X]pAb3Yqu6Y:l2UhSqu6XTpAb2oqu6Ynqu?_7qu6Z@r;c]p!6G';!,DE3!93_P!3Gtr
!3lJ&s8Mrr!2KDk!:p$e!)UT6kQ()P"?=uef%'cNr71er"k(iQDA!fX)$1Wt1>sqh002hu9*7\,eC+<F
r71_r!oC="eGoUcrVZZrp&agc!/^UQ!-\&9!>PP3rrA&W!!*T-rVllpqu6]m%/U#)P5YC_q[3B(rVurm
qu6XJnc/Y?qu6]o$Mj`&PktC[8bW2b/,]DJ2`1F3!3,\m!93nU!,q-&!:fsd!\OHQq#CDoqu6YZr;Zj$
pA=ji/GB,E/,T>Ip&t<o!93tW!W)fnrrMisqZ$X)qu6TroC`%]!0I'X!:9U_!)VbW[/^=sg"Fs,rRUqt
rR:o#6PK#.!Z31<oJ,bg!A?D%9*Ipoc.1=nqpkVq!o1L1e,TL\rVZZrp&agc!K$jSrr@<;!!*f5rVlkW
r;Zj.r;HWrOT#(V!2B>j!/pgU!Vcls!!)Ncrr=YA!!"PHrrN!'q>^M6qYpP%q#CHs!0-sW!rWN8!;ucp
!V?Ef!!(aMrr@'(!!)?^rr=D?!!&qorrn;\!!*'\qu6Zdo`,!_qu6g\!!*'"l2CV_g@5">!&OTSrVupq
rVlninbiCeJGT<HjSSrW:nRga!!5sOfDF.teHOIPf#T3SnehKG-SjX8!\ZB&nk0*X9sr[(rRLbq"Q%3D
!!DophuEcfr;?Qqp&agc!/^UQ!-\&9!>PP3rrA&W!!*E&rVln%L\h#N0)P\LGl@XCoE+pj!:0O^!%maA
!%IgF!W*6#!!$p5rr>^d!!)Hcrr_*X!8@>M!%@UB!6tE@!-.9(!9X1Y!%7L@!gN`brVlkDr;Zhqqu6Z#
o`,!$qu6Ykr;ZicrVlo+M>R;QVY^>nhu3QU2Y[.L!.+MB!8%,J!)VAL^&S73gY(3Uf)=,%g8>f))"JOF
.Pg6Cpb;e)8b#FT7[r-1ebmu'e^`Qu,QIlHeGoUTqu$Hpp&b$i!!2ut!/^UQ!-\8?qZ$X2rr)isNVrhX
#Pn>u!c\57qu6]a!rW*!HN!jEncAXg!9<tV!%dmFrrN&u!?hC>rrMs%q>^MUqYpOFp](==rr)j!FT;DZ
qu6YGrW)ls!W`;>qu6Y9l2UhJqu6XBpAb2Oqu6Y4r;Zibqu6Y7o`+u3qu6Z]r;ZidrVlo),Q%KAp]^Tr
!$V=@"7?Kls8DrtC&7l1c27M@:RM1b!<<*o"52G[ebn"teHF`U&f;JW)$(X-hD#%#:%CpY7XNhfebdo$
e_e.e!!2<alMpqgqY^?oo`Fph!<E?%!!%lQrr@69!!*f5rVlkWr;Zj'q>L<pFT=c)rr@HF!!%?DrrMZl
qu?`Tqu6XHqu?m%$7/7I!;ulu+9)3<!VZWk!!)3ZrrMs&p](;;r;QjF!!"8@rrD3V!!'(srr@'(!!(dN
rrH4Kq()Oj]DMU.DZ0V;%K-8(rr>X`!!#FarrN!)rVurjrVlr5!;66h!'0uX!13Za!cA,<r;Qb.qZ$WA
qu6Xhqu?j##U)nJf`91q"p"`)!(5>kpsoT&9bA3ZoGI]I*%p,'!A?e?:%CpY8RU!Becs[][3#AL!Rh#L
"T&&r!qlctrW36*$5+\T3W/pXM>R;QG4kn:'`S+3!WS/X!!*?#rVltB!!'M*rrN*ArVuqErVllbqZ$WS
qu6uli8`kYlgt#RnbW:e+o_E>!;HBk!W`9aqYpPjpAb3TrVlok!r`0"oDJUhrYPA1!3?(u!rr:?l2Uh4
l2La$rVus>rql]q1A(VI/,T>MrYtn<!quTm!il<hqu6i-!!*'*q>UBrr=9A9r;Qb0qZ$WAqu6]hi;Va?
lLOfOq?3PnrW*-%!&i6]qUPc#cn,t&)$(QqhD#'b5Y^fB"%lG+gA9A'i2ILm"5EnM!!*6!qu?Qg"T//t
s#BrW!/^UQ!-\&9!>PP3rrA&W!!*?#rVm"C!!!T,qu6ZOrVuqErVll_qZ$WSo)A^AqZ$X?rqucrpA4gj
4oG3W!W3]-!!*u:rVll#r;Zhuqu6Y"q#CDaqu6Y9l2Uh4l2La$rVupIqYpOIquHQn!@%O?rraYK!!W2s
rrShn/,T>Lq?d3&<W2q"]DrcIr;QatqZ$WAo)A^SblHr-mf3Uo!!!$"!%>bBrmh;(f%/T^*#J/`!>cp9
0`j!j:%Cpf8kGf5f%&@%f%8iC%0-D1r;b@J!<i8hrr=DE!!%lQrr@69!!*f5rVlkWr;Zj'q>L<nK)P`M
7f*,e=o\PKrVll`rW)ot!9!GJ!7:TC!>b\4rs&Bn3'C2mjn\oX7fWSc!!$U.rr>Oe!!#FarrC7<!!&2Z
rr@'(!!(IBs760iDZ0V9/GfAH.eNcB+o_B=">0ZS$N0l&"-<K_nGE4f3WK0<rVlsU!#tq8rr>dj!!(=8
rrD$G!3Q;))m8/Qec+,$hM2g8)$1X#1@m6f0``pdn4O*XL"k20e^`C2GR2Oo!<i8hrr=;B!!.rVr;Qb?
p&G+-rr)isNVrhX#Pn>u!/pdU!5/4/"8`]2HN!jDlh^Y^i:?mJeGB4H'E7J#!W>Xa!!(gQrrN'1rW!!"
'E.k/!W*6#!!&2Zrr@'(!!(I3rr?s9!!"SHrr=VC!!+5Aqu6dP!!!Q.rVltP!!%WJrrJho!?qIArr_]i
!%%OB!)<=j!7(08!9gB^oDf7"!"Y1Mf@AF&hH1E\)$1X%1>aef0/Q;k9*n+&e^rC&gY#U/m/Z&E!<i8h
rr=>C!!%lQrr@69!!*f5rVlkWr;Zj'q>L<nMu<VV&c;J*!jr#SrVll^qZ$WSqu6Z*!20:f"2NdklMCP^
'E7P%!r]_Lp&G+/rr)iseGB4Gi;<NU3WK3Y!!&8\rr@'(!!(IErrL-2q5+7`kl:\]rr?m7!!";@rr=_F
!!+;Cqu6dG!!!l8rVm"D!!"/@r;Qig!0-sW")7f9./X#E:&=njcMRVBae&I."MEIco`O7T])W6?!<<*'
C#%Inf@;\ln/26V1?^If0`j!`8b#F\8Q3X^e_nV1!!*,F!!*6!r;R0(\[AoU[Dptjrr4tV!!%lQrr@6?
!;c`s(B4:4!0-pW!=J]%rr@uT!!#mmrrFH_rVllTqZ$WSr;Qfs')DS1$SDYbr;Zj3rpg!g<qH@lA,Q?-
l&#A)!K6FDrrK)!qZ$VMqu6Y9l2Uh4qu6XApAb26qu6YJrVus7rql]q5P5!V0)PYPrYY\9+9)6=!+l-0
!9X4Z!raA8rr33$&HDecs8W&t!)<=j!7(KA!%[mG!XC=`T)e]f#"6kog:SLDn/26X1>X_e01J\.9+4Nf
91c2=hln1&!<</\!:'Uc"T&&r!;6-f!YJEWr;Zh?qu6Y>p&G+8rr)isNVrhX%fH;*!/p^S!7LcE!T7;_
rrCsR!!(sTrrN*6p&P$k!>PP1s8N#orrMZro`,!Kmf*=]"8`&uJ,B6GDs@<&dej%E-hdT@Gl.L@NW&nZ
#5S;srr??t!!#Ufrri0(!!"ADrr?+!!!$d2rrC1>rrBV/!!"qSrr>dj!!(=Arr=Ur!5\^A!<E0I\)ihh
)"AIE*%p&%!&"@?:%:jZ7$-G]%`eVN"T&&r!VQTd!!$p6rr@oL!!"DFrrN.]r;Zj-r;HWqMu*JT)?'I4
!6G-=!8dSQ!93qV!WEl*!!*f4r;Qou/fPY,qYpPrp&G+/rpB^c/GfDIP5YC^s8RH2!!(IErr=G@!!%9@
rr@oS!!(gOrrA;V!!%EDrrD$W!!"hQrr>Of!!*l7p\t4KrVup`qu6XjqZ$WAqu6XINrT:`!rrpt!G<&8
)$1Wr0AS>a/jE)%9*\0c95IW2!!:XMp&G*rqY^?op&agc!,qc7!1``_!'L2Z!.t.L!=o&+rr@oR!!30$
DYsG6rr)ishYR9QlMUY_rYG&)!=eu)rrr<3!!!8rqYpO^pAb2&m/I'IqZ$VZqu6YMl2Uh4qu6XDpAb2<
qu6YVr;ZhFqu6ZQquHQn!7(KA!/(7N!(Zte!'U8\!7^fD!:Kdc!(Qkc!)<=j!7(KA!%c%gkQ'cGr;d!%
!!aA1)$(QtgbAj`3_f3=#>J&\'EA+6!VHHC!!*E'r;Qfk!qQBlCA\#2de3Y@JGfEIEW#k<(B4:4!2B8h
!9X%U!8d\TrVurbr;Qfs*:a(1%/g&'!W<W0!!"eNrrMp)p](<Nm/I(VqZ$VZqu6YXl2Uh4qu6^E!!)fp
!-nD@!2f\p!$V7>!W<W)!!*H(qu6X@rVuq&r;QaUr;Zgoq#:>1r;Zguqu6XjqZ$W@qu6XJjT)@^#lt&,
!<WB'$Ps`Q)$(R"nM0Ab!A?G(9*J*f/dMFYrW1+@!>#,+rrMfpo)Jees8;ltr>#)-!<M]frr>pp!!*r9
rVll!q#CFBrqQKnhYR9Qm/-e_,Otg8%/g&'!W<T.!!&birrBP(!!+#;r;Qf8U]%.oWMuQIqYpOEqu?_[
qu6Z#l2Uh3qu6XDpAb2Oqu6Ysqu?`Nqu6Y:pAb2$qu6ZNr;Zh@r;QaOr;Zj-r;?Qss8W$0r;Zh,qu6Xm
qZ$WCqu6XPTE+3V!Ws#QoGI]I-8OC3!A?A)9*J$a;+;Q,j8e*<!=o&*rrMfqo)Jb?qYpTJ#l+H#QM^[^
.fB>I+oM??^A%[.P5,%WiVNTTlhg\^1%tYP"[WLq!"Af'rrN'5r;Zj*p\Omk8H8hi!!$j5rrMs#q#CC=
qYpV`!!3'!!0mB\!9WtT!Z)%Ap](<Rqu6XPpAb8Xs8W&t!5/40!&"0K!W3l3!!*f1qu6XLr;Zhjr;QaG
qu?`5qYpQ+qu?_;qu6Y*qZ$WUqu6Xjp&G+Y''B7t!!<61(E2ra!%R+cp+ZS'8bYj[:JinU_#OKMrVZZr
q$-Ej!=/Gsrr`"L3$8>>)_>L_qu6]o#Q4W&.K'2GdJ*\B#PIom!:'F]!;$*f!2fPl!t7H\kl(P_%/g&'
!WF#8!!#F`rrN!2qZ$W[r;QcJp](<tp\XskpBCKq!2o\n!)WOm"9]T:gsYlr!:'I]!'']Q!1E`a!6P*<
!1s)f!V@B/!!*o(qu6_h!!3'!!6tHA!%RmH!(?\`!&+6M!eUIPrVlk<qZ$WWqu6Z>q#CO)38F-0U&a]`
!X',TpDEuM/D;fZ7SW_P"AMfa*WjmmlMpr(rqucsr!`,r!/^IMrr2]m!1s)g!&jcT!9*YP!(?Y_!:0L^
!;?9h$LPjF]Y;eJn,34c!1s/i!=eu(rr=8?!!(FCrrCdN!!"5?rr@cI!!(4=rr>=_!!'1trsJ;IdaHn9
q>UEoJ+ipD!qQ6g!(Q\_!3?"s!8mYR!<h0Srs/M#5URm<RJm$_!T+(Y!!)Kcrr=PH!!*N*r;QccqZ$Va
qu6YZqZ$WYqYpTeao8pWcJ%^as8U*n!4Dk/!=K\=)$1Wp0&&)^01/J29*J*e/dhX[^]4?\qu6]r)=db.
#j^mX!;-=$qu?^qr;Qcfp&G*BqYpQcqu?a&q="=`<W2t!')qe.!&=?N!?qI=rrA/Z!!&2Zrr>=Y!!%3=
rrpXI!!*)ArVuKh!%djE!=\l&rr?^+!!'t7rrDNa!!*AUn,EFB$N'l)&,cA*!%n'J!6G*<!-S/=!4i",
!6P*<!:fOX!-XY.q#CR#&/cB()#bBS(`b9a0`j!m:&R]e:Jj7k`rPf5!'L,X!]'fWo)Je&j7!!Kmi;3)
!07!W!W*<"!!+AEqu6]h"8r3#)ZK4*!%ImI!?hC>rrN.#q>^Msq>URu!!!2sr;Qfs*VTO62Z!FSrYkb9
!:B:U!W3E$!!"/<rrT>'!Vl]qjno&[q[!6'qu?d#L]72Nq>UNqN<B%X!%n*J!'0oV!*0!t!WF&8!!(dN
rrM`mr;Zj-r9sXc5L9Do!8%8R!W`Q?r##PQ+>V\+#qe8591quU7jSB&!7_&LRJQp`P4/GQ"(Uonrrr+=
#64f+r;Ziequ6XSp&G)oqu6cr#64`*!!%B7rrN*5rVuppqYpQHq>^L@q#:Cq!)`Xn!WET'!!!r5rr\hm
!%m[>!;H0e!.4SB!rE<)q>^O0rqcWr3WK3W!!4@WrV-<nrkTfS!!%WJrr?s6!!!r9rrDE_!!*9#qYpOB
r;Zh%mf*84nGo!X#7;1a)&X581@[*b0aB?k9heJZ/e#;k$NmQ_UPEuET%9D3!V6<j!"T,]HcG=BqY^9f
o]jMJ0a@FR#S=)(C04bk\OQ8m#TCLRHZF;!TF1Vt#+<i9OF2(TrE'A0@WHs[U9iF_#Q=]0B@X)\S"lt&
^('o=';3pZR>m5iUWC%TA'UU)NhX_-$2X`$!"]UO]UOqAP,H[%!<@#u^9!q&NX(fGVmXFnkaD,E$%U*o
P`C`fWPKqW!!t:$ZDO:fVQS3Ap&GI5>.j8!r;?EZ^0MHI!!dbuRuNH'emnRW"9XgOHaNiLqZ%<Of"RZ7
NL$m,4TGK_!/&e#P^d^[rE'A,@!-gXU9i:k&$,cg!!`N-%2Kj!-8O=1"tqf0:cB'hf`9t2rrW#s!WrN*
lMq(j#7(V@!V??l!Vucr!VZQp!<W)t"T\W(!<WAu!;6Bq!<E0$!r;lt!<Vck!W`B)q>^Nt!Vl]q!VcWs
!<WB*g&V-Rqu?d!!s/B$qu?d!!Whon"9o,;#6FJtrrMus!!2rs!!2ut!!3#u!<NB!!<*!#!!*/h!!!&^
!29Gr!tH+u1]&m,0C:Ll0`Wm)0a'6i3>hm]!7_&L!WE'!!Q>$=!Up*5!!!&=!!!&r!<3*!!:'Ub!LWrO
!!`N)!!XAm1G\q_jtR,p0ek=:1+!\<aoI"nJcLB&W;m,,)_Nm#0e_WC"#D\\&c_uc!.k3&!.k4;!!NTE
.Pih5kV32r1+!V:])[E_JcLB&kQ&^)"9fPg1,J8O"Yqnf,7ah/!.k3&!.k31!!`T<,;1i.0/*;Zq(W..
0/>:=/0##uP5p17JcLB&e,TILrW!*&$5t?K1A*@)1GL3k"j-gs!.k3&!0[Bd"VDn01G\k_"Yqnj.NAlt
!eUK)!.k3&!7_&O#8AF9rA+O*+:n[e!.k3&!.k3=!!WH1'HnM0"n;SE!.k3&!.k3&!.k3&!.k47!.Y~>

%%EndBinary
grestore
np
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: ADAAAA+Arial-BoldItalicMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (ADAAAA+Arial-BoldItalicMT)%%Title: (ADAAAA+Arial-BoldItalicMT Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /ADAAAA+Arial-BoldItalicMT def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-560 -376 1489 1000} def/FontInfo 4 dict dup begin/FSType 8 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 2516 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 14 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A936AA182F5809A9> |40 <001C60D8A8C9B64EDFFB963413211994AD29A31453FFDFD9EFBC30879361DC8DA6A53FAB49F1A206A56D28A2952DEA10DD311C98399D> |54 <001C60D8A8C9B64EDFE7A97103298942CF312570A3692BFB1E6C45E5FF2EC249354E7A1932DFBCAECA3C78C2036B8DDB9A7E091AB38531C38FC7F4A40D809269B97D193BD655FE06A800BD5780B8F3C2FB7C695F743C928CF317D3C43AB25BCBE2B94C76BF5D632065A2FE22B979AE5E8E685BC9AF9A740E0181538009EE17394E5B0549DC8C0300EDC6D3B69916840285E531FBAF75C12BE34C55DC33AA4B8348C3BE15EB83DA2BF3473DB98264BD2746B0F46BFE0707BD57FF8D4F23CD0F16503FEF97DCFC9E44FA05A7DC> |55 <001C60D8A8C9B7D8BE19FED925D9664338A8E5E586791ADBF32C3F58506E33534CD4F74357CAC5DCE1> |36 <001C60D8A8C9B6079F6D2340FA029E8D98990BC1A4841C3F03AF89C49845FBA32563D8CBF00F1EB80A7078B97C387B1AFC42D7592C7FC9> |37 <001C60D8A8C9B6079F6D87EE794C9CE930098194E769642B3CF8113FF876275E3385F1D2D6715579623E8A44F00699380A257C6AB50929C832FEEA2AFB3FA0FAE50398B9E2EBEB1D1674F3CF40C6186B6406F84AB71B24EF861335A635F077A75659AE92AF8B5FD6FE09F5C098B1B6BC22531607CC07771F92F9EC9076A0C5E3AE35C5657F2C30B517F3E7D74EA994F8E22BCDA55DB534764639AF2007DB4A63BBDBEC90CC49B5CFA002577340ED5E76D3BD8EBCACD3C416A8AFABA0A71CCFDFCBF1B0CC33A9BF> |47 <001C60D8A8C9B7D8BE194E20DCFE811A18C5C548631AD7D6A1F8577671A1FB60E63A> |44 <001C60D8A8C9B854D0F47995413A5E5BE66353371AAC4CB04E8F10> |43 <001C60D8A8C9B6079F6DEE103DCCDDCA242E33C5F691111FC6F9562D0B7255AC463315693E230E91CFD5D6E9222E58DE1E3363D15031> |39 <001C60D8A8C9B6079F6211393AD632EDB9ED7BDDAAC47DF20EC679951F6FCD8281F2D0086A3B0534F4D3E46C20E93DFB158769482EF11EE33A684157D14794CAECDEC8DCF6E821D73B690177421A9FB1F38923DE228EBF0DF8FD2992B3234E04BC93A89950ED8FD4601D3AB0B6584DA80E64AF0F1322C34A080D45C9ABED076F7F9BAAFEC443FCDE119A660A9474DE23320B90DD8AF118> |3 <001C60D8A8C9B854D00D> |20 <001C60D8A8C9B7EF322B678A8453A171E5F41DF9F93C9306BA52FD74F7B7923FF50F1CA58EACC491EBB191FB8452F1D3648FD7956574AB5F> |28 <001C60D8A8C9B7EF322B1FCE279244F96F09340A68A387ECDF9C6F29D67B1A461C4CDF7C8891A8CE5A5514FEC1BF65BBA7813B579D2DCA0B27043EA51AEC1740A044D6BBE4E62001986E3E0FAC553DCF1FC53BD4D162A15A15C29910F6C36653785608CAA49A1DFB2273EE9DC10A1615C5FE9455A35BC42B3E79978D160A624A9F6D2B4CA934D9BA72D778754AEE6EEAB7CE3D76263A44D152B0BDD65A29820B82E42636B46C68841965147DABB6611B236707910DA9D6880F37282C9B5A8CDA4AFA2C> |19 <001C60D8A8C9B7EF322B193039B49AF433BB6D51ACC56137D95C1752F72A424A3A5BFA6CA25B2B344140D56C380A70538DF7D93A8C86640D15736ACA075337CF6B95A64E2CA94F1D7291A69C6306E684191D0DBC8AB1F41E29DFEEC2C1EDBB4FB19FF808A89680BA97CE8C50C244B86E99F78C7EB6916B233A65430D3D8379B4BF836479BE92C12786753DCB6ED6166F38B02C2AB0D5B6EE9F198221773D93D6> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /ADAAAA+Arial-BoldItalicMT-Identity-H /Identity-H 0 [/ADAAAA+Arial-BoldItalicMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/LTQVUY+Arial-BoldItalicMT /ADAAAA+Arial-BoldItalicMT-Identity-H findfont ct_VMDictPutLTQVUY+Arial-BoldItalicMT [9.96 0 0 -9.96 0 0 ]msf132.691 333.604 mo(\000\()shLTQVUY+Arial-BoldItalicMT [7.98 0 0 -7.98 0 0 ]msf139.334 333.604 mo(\0006\0007\000$\000%\000/\000,\0006\000+\000\(\000')[5.34512 4.89813 5.78395 5.78397 4.89813 2.24084 5.34512 5.78397 5.34512 0 ]xshLTQVUY+Arial-BoldItalicMT [9.96 0 0 -9.96 0 0 ]msf190.538 333.604 mo(\000\003\000\024\000\034\000\024)[2.77678 5.54567 5.54565 0 ]xsh209.953 333.604 mo(\000\023)sh%ADOBeginSubsetFont: QCAAAA+Arial-BoldMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/QCAAAA+Arial-BoldMT 2 GetGlyphDirectory27 <001C60D8A8C9B7EF320D121CA398C298001D96F0921D2E4665BD9F3AA1BA7D532049ABF4F4FCF2A7FC4F6A0ED37FE2585DE47D51304F14ED056DB3FC05532D589CBF5A774F4D516D6AAB8789497CB0131489B84DA7C94C0627654F4D18FED079C94F269728A47C6C0EB84CA40F5E78FC31BF2E0ACEFE6CB102A2B325F441C0403B0EFCA436D6E439C13A27D99B392D81A2766269FD00296F0EEBF2AF6F36768B541EF326F88EC21AB91AAD53441E2070F43F8DDF9934A4943E76622A197FDF8EB6DA1B86461063DF6210F9D9D247D1A6F2C7EE40CBE2CD49ADA7A56F1B7FBCA1AA8CD970D1DFBE0F65D2D4D004885ABAC029EED06BDCBE2B97E2> |28 <001C60D8A8C9B7EF322B10E0BFB976DC04330FD22BECFADBD47637009C222D724F78A82A92E5C78F4F709846183A67B4862FB7C5966756D03C45DA90A3029DBE8AF9FA80D2B7EB6EA167C09082D63AF26BF135514387BB83D3AB17107D95F47564F0A79E3794637C7A222B3530712E221A4AA15A9D31C1BCC58DFBD2457CF6D56601A9B10AD08CE26FE2C1F2643207DA6EA4D55BA02C093F0CEE9B0648C773D76ECE62881CB64371C368E4D1AE86B3A2D43196BD0F0173D6298D36D5> |!endend end
%ADOEndSubsetFont
LTQVUW+Arial-BoldMT [18 0 0 -18 0 0 ]msf118.074 353.599 mo(\000\025\000\030\000\031\000\020\000\033\000\034\000\031\000\020\000\025\000\030\000\032)[10.0025 10.0025 10.0025 5.98837 10.0025 10.0025 10.0025 5.98837 10.0025 10.0025 0 ]xsh220.074 353.599 mo(\000\024)shLTQVUW+Arial-BoldMT [12 0 0 -12 0 0 ]msf125.214 367.613 mo(\000\))sh131.586 367.613 mo(\000D\000[\000\003\000\025\000\030\000\031\000\020\000\033\000\034\000\031\000\020\000\025\000\030\000\023)[6.67438 6.67438 3.28674 6.67438 6.67438 6.67438 3.99829 6.67438 6.67438 6.67438 3.99829 6.67438 6.67438 0 ]xsh216.288 367.613 mo(\000\023)sh%ADOBeginSubsetFont: VCAAAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/VCAAAA+ArialMT 2 GetGlyphDirectory73 <001C60D8A8C9B854D0F47057B2F13303E258FCAEE9E8BBA6E28AE872907C5663BFD2A0F535ED0EB011F2C2A875E053FAF73E8AA16B1F99510A6812F90D61CF3F1DA5EF558899A9AE12AAF6AF4568E0F6003B0A2FF6F33293> |35 <001C60D8A8C9B51976DCC30AAC6C2AA511F0674BE95A3B2DA094B7B61D3EAE0B1DC1CE9BD1DC971F05FB6CF020EBBABBEA6CAFBC3048E4C12CD9F92002989AED9484A5C57085D33E9669E7E018395D79ACBB77429542CF2E7329BDC42C3C3A6FED718882644341BA725F2207D03C267508E00EFA997387EE805056D9374C05A3C1099F06C8C0C2F60E1B087E0285A4A5E570E966622E44266C6DAB2E418C942E752E189577000E79A540F8C18730F17FC3DD8E8C507C337DF618139AC093E134E8D79E972C90E6398DF5B18B2C83CDB4653DB976409FFBE0C2C0A3C8298BF1D983DDCEC916269AEF7B24F2B5EC053ACA4BDF36A6AB78492103891798B290E12EF0D1DDF42BA9FAACEC4D925FD97257184A9809C235385ED376878318DB60E06A60ED578D54AE66C28F0FDD6369E4A5716ED6447D9861D2848C4A80AED769E4D7B87F86769953EC3FBD449FC9070733AA06DDFFBBE7CAF7C86890A4AB9E3CDD1905AA15A6926737B736D41270155B5CC100A0D21498A4F1101C402E9369C92564ECEA74FA574CAC60DBD9D378644BE576A68EC3F240D324538EF94ED6291C29303FF697C7350096D7655D62B9F723D5> |!endend end
%ADOEndSubsetFont
LTQVUX+ArialMT [9 0 0 -9 0 0 ]msf114.457 382.916 mo(\000Z\000Z\000Z\000\021\000O\000D\000Q\000J\000O\000H\000\\\000I\000X\000Q\000H\000U\000D\000O\000K\000R\000P\000H\000\021\000F\000R\000P\000\003)[6.498 6.498 5.72223 2.502 1.998 5.004 5.004 5.004 1.998 5.004 4.5 2.502 5.004 5.004 5.004 2.99693 5.004 1.998 5.004 5.004 7.49693 5.004 2.502 4.5 5.004 7.49693 0 ]xsh%ADOBeginSubsetFont: FDAAAA+Arial-ItalicMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (FDAAAA+Arial-ItalicMT)%%Title: (FDAAAA+Arial-ItalicMT Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /FDAAAA+Arial-ItalicMT def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-517 -325 1379 998} def/FontInfo 4 dict dup begin/FSType 8 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 2516 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 4 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A936AA182F5809A9> |36 <001C60D8A8C9B64EDFE336C872FF73B4C5DCEDFE80A50894CB36B664CE7D6025A416411314DEE9A61B9F4FB8D41CF1B562B8D12196E2EEADFAD21646AAC782C951AA13> |41 <001C60D8A8C9B7D8BE1604AAA8B9EA693226D51C11D5265471671E86AF9E91CF4581F0FCAE740CE640A4C6493B> |39 <001C60D8A8C9B6079F626840AA0CBE0BF30E926E60110A50448F476B3D340ED7759EC42E5BA9C019008C78FA6302169740974315636098D33776FE73D89E7EF624FF87594A8FB84A632E5B5F2CC9A78AEA9293E27E5511F232373F9B3AD165763C4D6E4C801833ECDA6A4EA6129980F511041DCEBBB5CB977399E55389C063AA803288745E624938D569D020DD666F6A28952BF271AE33315A> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /FDAAAA+Arial-ItalicMT-Identity-H /Identity-H 0 [/FDAAAA+Arial-ItalicMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/LTQVUZ+Arial-ItalicMT /FDAAAA+Arial-ItalicMT-Identity-H findfont ct_VMDictPutLTQVUZ+Arial-ItalicMT [9 0 0 -9 0 0 ]msf61.438 389.045 mo(\000$\000\)\000')[6.00307 5.49893 0 ]xsh79.438 389.045 mo(\000$)shLTQVUX+ArialMT [9 0 0 -9 0 0 ]msf109.759 392.672 mo(\000O\000D\000Q\000J\000O\000H\000\\\000I\000X\000Q\000H\000U\000D\000O\000K\000R\000P\000H\000#\000J\000P\000D\000L\000O\000\021\000F\000R)[1.99704 5.00304 5.00304 5.00304 1.99704 5.00304 4.49904 2.50104 5.00304 5.00304 5.00304 2.99597 5.00304 1.99704 5.00304 5.01114 7.49597 5.00304 9.13403 5.00304 7.49597 5.00304 1.99704 1.99704 2.50104 4.49904 0 ]xsh230.919 392.672 mo(\000P)sh53.64 416.16 mo
94.26 416.16 li
94.26 396.36 li
53.64 396.36 li
cp
1 /0 /CSD get_res sepcs
gsave
clp
[1 0 0 -1 0 792 ]ct
[40.62 0 0 19.8 53.64 375.84 ]ct
snap_to_device
<<
/T 1
/W 250 
/H 111 
/M[250 0 0 -111 0 111 ]
/BC 8 
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
sepimg
"onZ*!!3-%TE#2t!!36&!WW>n!42b)!T!hU!W<!#!WW6$!<<7p!!WH,!!!'#!UTmB!;QZ0!<3)s!!WN*
"onZ("J,Ss"98K'!<N0"rrN-"q#U<l!!)fqq#L3knGr@cq#L3kquHEkkPtVc!r`0""T/6'!Ih2PWM]Wn
V5Y!+XK@9Z!")M(=BAR+=BAT"=SZ%t=Su:s=8>tg=8>to=8>ts=7o\[<sM]+=&rI,56Ula"Kgh<gYM\Z
iS41^q:jQU#MJ(H!!!CBEr0hVE9_H,EVXXkE<^K(E,TcA=8i1)!<N7tgXk$*p!p1p$.d__[/^7:@r?2^
D#eD7D<u-8DWPa6DW,F:CMIg-Ci<GT!!`Q*!3"W$dF\3Eq:=f]q:5;lg!pAXf%I8/!"NLXr,;UQic"=)
q/5G8rbgM0#&nBpD/F5prW!-'!<B%Pf@K<=[FGT8e(qD4!"EOYDuFSRD>A)FD>A)FD>nGNDY\/>DY\/F
DZ"AFDWkp@Df9H1EEW/="/sr(f'(YneHjm8!!*L>Df0FQDYS)ID?4Tln885CqecCNa_q,qrb_aU=Si(#
W7oeQjOLlm#hlTb!=WOXDJdd=Zu5n\rb_aU=Si(#W7oeQi75Tm#hlTb!=WOXDJdX9\8M=`rb_aU=Si(#
W7oeQgss<m#hlTb!=WOXDJe*F!,_[P!,_FIq/64L`btfnrb_aU=Si(#W7oeQf[\$m#hlTb!=WOXDJe*F
!,_[P!,_:ErGMXP`btfnrb_aU=Si(#W7oeQeCDam#hlTb!=WOXDJd4-`,>Tlrb_aU=Si(#W7oeQd+-Im
#hlTb!=WOXDJd()aDV#prb_aU=Si(#W7oeQbgk1m#hlTb!=WOXDJeHPphftI!,_1B!,_UN!,_^Qb\mGt
rb_aU=T/:'!!*(ugRQe"g9Ub[$tO9oD>\8UE,BK1D/jGaDJa3-Dea9.DJsK6CMn--Df0T3DJsE3Df0K3
DJj</E,9H1D/F60Ci"'.D/a?/E,BT2DJX6-DJjE-E,]]3DJa9.Df'B-Dq8e/Df'Jq!WE'#!<B%ugRQe"
g9Ub[$tO9oD>\8YCMdp/E,'0/E,fe.D/X33Df9E+Ec?&>Df'<1F)Cnr#&nKtDKBo9rba$!DfT]8Ec,]2
Ec,r;CMRd(FDtu4DfBB4FD5`5DK'N8Ci+01Ct<J,Df'Jq!WE'$!<B(QrmdXk#hlTb!=WLWDJf;h%W?B)
Ci"'4>[VAdC2@cm5\+YMEGTMp?uC%#>$>-9=^#'2CN<QeE,KQ3D,NP_:2FrhDJ3KbDK'Q5Ea*!lE,B?/
?Wh>dCi"!#>An:mDf=3E"E/-s<rr:#!s&D#g\THqeHjm8!!*L=Df0FiDA$`'E,]T4BGpkVEH#r1"[R6G
D`i#D!XrX\B,:RV!!3H2$<;$[-Za0F>Rg`Q(BG.OEH#nF"&3fODf-.8Ec5`3BEeKADK'Q84U,M@Df'@B
D?OlpEE<2?!!<6%W8%$rVpu(,ZN("7A8c@&r,*9hD/=0-E,HHn+`2+4B*CM>D/jSN$jSa^E,&rrB/U*(
B45Xp'I7^?@Kmo^CiNl!%V0Bs-NFNhEbTJ&.s5QJEC^6>2fW_ODF+G=DJjH1entV/D/iVXrW!$$!3"ZC
eZ74+g9Ub[$tO9oD>S2gDes<1DJU+1"[@-M@Ko/?DJj.q8MM$#EGm[RE]XVEEc5f8(++-?3<rl2DJaH%
!'PC@+<(qJE,fh,.W]HDC_Jm!#&%snF$'bCF)5]4entV/D/iVXrW!$$!3"Z?eZ[L/g9Ub[$tO9oD>\8g
D/jH/Df9G(6UUu\EG,M?EGong"D:^9=oN=@EB+=YCi+61DA"78E"":<DK9H0F!_i?E$Qr7!)R`S%k_g>
Dd*3D@0')DBl?*@AT)O+eSYM.D/iVXrW!$$!3"Z;e[*d3g9Ub[$tO9oD>\8qDej6/DJa;)6#@;YDJ02>
EbfS7-?X291iR>LE]=PADf'>BE=j[?AHk><DesE/EBaM;EZZcT,nXj3$8$@;E\J;NEZH6@EH"2DBl.d+
D:WS-Df'Jq!WE'$!<B(Qk1-rk#hlTb!=WLXDJf;h->dO8E,9B/&j1A@!(Ui.5]^mO!B=@k+pr"&DJhHD
B6%a*E>9gC0Ok2NEGfT3D0%fBBlG1DFCYM5E=j^AEFoG*>?rr`@<$<N#\J'mD/O3.Ci401CN&0L!,qjS
!cN$\r;Zp#!3"Z3e[s?;g9Ub[$tO<pD>\9$EH,c2DJj5(5]Cd+"Bl3uF)X/?#64`/!D%3JEA\/@D/sK.
(aa3?'IRcKD/X32D'L$9E?HfRECp46'.S0D:B:V""9nihEc4/IBPh[-CiF91EGBE3i,/O5rb_dUE*<,>
!s&D#gYUJqeHjm8!!*L=E,KOjDD#[BCi400Bb3IHFCl1%#XWEG$SPds?XaTiEc#bU%;9a"E,lU<FDj5@
A9_m/E@>/o5&bQ_.s,]H+W(M<EHE'<@:*PN-PL<=4ToP?E,fi7D/+'-D/a=ID?=`q=oA=&!<B(Qg==*k
#hlTb!=WLXDJf;h12h)JDJF30&O15NF]\VE6$?')>BXq'EBsS1EcX8KBQ.d)E"aO=E+]gq;fHMS%23Dr
+E&DME,Tc(#lli,<ru!:DeaJs!)@]!#Zt\J?t3_jD/0&e!-$_2!H;3?!!<6%W8#nRa41ILZN("7A8lF'
r,+E2D/F91De'\JF_to92?6$],o:B9C2S-'!'+q:1Cn2@C2e)),]RdC?5W_Q$N_5UDf0D9.<Q>ADfJ5L
069#UB5MR)EaoV+EBXC)r;['iD/jB2EG]OLD?OfoDK&bW!!<6%W8#bNbLHmPZN("7A8lF'qJJ9.D/X<2
=Cc8gDea&fBQ7']EG]Z6CN!6\D/j/iDJaB-E*QgiCN+6/=%Z:kD/a<1E*QagE,]]2*)p?e?X%AdC2\$-
?<V5X=]&7(=&`OIE,KN1DfFTO"Dr$oE*<,>!s&D#gWn?qeHjm8!!*L=E,KOjDCo[CE,KT0DK9]2DJsQ1
FDYi:EbTE0DfBT:Ci+'.E,KH1DK0Q3Df9T0F)l;@rb`0^E,BQ9DJNs)Df]f3DAR>2DK'E0Ec#c5E,oo;
EH#u>D/+$.DJ\0I"Dr!nE*<,>!s&D#gWJ'qeHjm8!!*L=E,KOjD?XrpDf'B1rb`HeE,9E3D/XB.Ci=0.
CN"*,CiO9-DuOVsD/4'-D/F*.CN"'+Ec#W3C2[s)E,T]4Df'H3D/O<.DA7#)DJsE0DJO3.DJa6,Df0H0
EGTIKD?OfnDK&_W!<)s#WS5nRT%+,#ZN("7A8c@&r,)^WD/F6/D/]GlrbWWnDJX6.Df9K1E,TQ3CiF--
DJa9/C2@j,CiF60rb`TlDJX90Df9W1Df9N3CMds,D/O30Ci4'.DpE5(D/X<0EEN)<!3$%Re^g>B#hlTb
!=WLWDJf;h$>j^"D/F30D/O3/4Do"SD/F9.CiO9-DJa6.D/aB1D/X<4E,0?0D/O3,Df9N4Dej9/BQ%m/
Ci=32CN"*-EG]H2Df0B+DJda<"`80qDK/eU!!K:Te^i9CeHjm8!!*L=Df0FiD@UN$Chn!/DJa3-Des9.
D?Y#uD/=0,rb`9_E,TT1DfBN.DfKW2Des?/rb`WkDK'N2Ebo`4C2e$,Ci"*/DJF0/Dea3.Df*g<"`80q
DK/eU!!B4Se^jZKUX]Y(ZN("7A8c@&r,*-dDf0E2CMe'.Df'B3DJO--E,@FME,TQ3FDG].Dej3-EGB?1
Ci=3-DK'B.E,9?.D/F3+D/a0.DesB3BQ7p)D/=00CiF*,cu'#(Df0H4=Si(#WS5nRpsl:m#hlTb!=WLW
DJf;h(2@])DJj93Cij]:G&hG=CiaN5D/F0105k`CE--#>CMmp.DfT]4EH?,AEH?,<F)5r>F`h_GF_tr6
Df0N8EcZ2:Ci+01F3e_-D/X<0EEN)<"0(#)f(@LneHjm8!!*L=Df0FiDAmA3E,BH1Ccj!l,q'urAT'P!
E,]W3Ah[,)Cb/(/@rcI*D)jn!DbDK,.4?Jd5AP'n.4$>g-qJ/lE,BB55pg&YF)Q&(.q!>CD?XlqDJjGr
qZ$_tg==dDeZ[L/g9Ub[$tO9oD>S2kDes9/F(c=!1Ggm@4_S^A061rGEaf28G]5#12f'mZDf-@;F)j2A
/2K+>/jsJj%M:NQ2BMoPDfBW6BG(;(EH#]5<WH3@cu'#(Df0H4=Si(#WS5nRm+&Gm#hlTb!=WLWDJf5f
+Dl+7E,-(?FE;>ACij>&0QV&KEb#GDDf[K2!`X5VEYB]DF`'2LD00W8Ec#i1$TiKOE,[u@@rZC.9+!H`
C2J!0<rcHCcu'#(Df0H4=T&4%!<B(QrRDG0eCN1%eC<%#eCE("f$r4KecXIPf%()Ve^i:%eCN4FeLfJ)
e_&C%f%&='e^`:#e^W4%e^r@%f%&:$e^E+$e^i7'eC)suf$i1#eCE."pXKK%ZN("7AT.H`-Z*a=Df0H2
D%e^FE,ff:CMOP;D0'Q5@g>8AD^?V\%;Bd$&gq[<2ZaP,F8g/'E,KCs3HB.XG>\EKE,]_:.V/ZUEc>u!
!EX5XE,9K1DJs@DD?XlpD/O;pr;Zp#!3"ZOeI^<]f@JF#db3*tf%&@#e(<7Oe-F[Wdb!(!f$XZOg""OH
eJ?`bdb*(!e^W1"dacq!e^r@&f$`(!e,Il4g"+a,dact#da6Rre(3""f[8@#f[ffI#26B`!=WOXqJId!
D/O3/D.sV.@U<;CBlRhq20*MNF(GPBEH<BNBF$J7E>Bd?F#4,)?!S^^>A.kg#rQU5D.+P&D/F;t!*!kX
*cQ%8<rc6BDJs?/Ci4-/fPUk0DJa91=T&4%!<B(Qrm_,%e(31Neelifdalpte^i6tf[e[%e^i='eCi="
e^N.Fe,e7Rrm_S5e(*%#eCW:#f%&:$e^`7#rmhh3eC3($f@8F(f$r@"f%8O$e^rI$fD!f%g9Ub[$tX?p
DJf;h-?!a;E,TS2!!WW."&*cO&h\<ED/X%i6#^co+a??S=`G-'EH!o@rWWH*#Z,aOAeG(R$4$b@@/b*Z
5n%XU:B=g@EEE3CE,]`5DJa</DqJq2D/O3.E*3&=!s&D#g]#_Be(3%!da[+-f&GB<gXXs+f%/4*g=tE9
g"4a*rn@G,rS7>+0&#(7hU^3.g"G69gtpiAhUgN<g=t<2eC`7%e()mtf%&0ugY1H9g"YB6e'lt!pXKW)
ZN("7AT)L)D/K,e/oY`E&gq7&An,XmC(W4>CNOE+#XEKM,pI;G,S"c2,BIod#@M"LB4,UoCCDOi*)BWu
!'Y=ABFk\/1b&MhF)Y4]>Ae:oDJa3.D/IpC"`8-oDK&_V!!<6%W8%=%+4SlleCr*8StDFCRBG)gf[SR&
T:MUHSX[dPf<^p>T)"p1T:MUFSC,j8XI>`OS=Z@DStDXFUq"Y'g=+R)d+6k!e^rC-ZC%;VTq.b%g!eX(
pXKW)ZN("7AT)L)D/K5h2/R5JD/aA(1NI;PE,TZ2%ki!BCi3hg6?@#l-$4$6"@!_OEGm`GC2Rs4C2e*(
$TNENE,dEG'l@ti!%00D-kR#,Dcd!AE,TW6Des9/D:i_0D/O3.E*3&=!s&D#g]#_-eC)sugReWJ!!rZ+
#I<.7f@e(OrW!*'!LDTm<qQFo!rr?1$*i15/cl"S!<<-$!<*!2!!4Zh`8T7pg!nX'eCW<o-3F,G"9k4J
f@'BC$/2]c!=WOXDJj=hDE2QOD/F3/&he9DD/4!'E?bm&FDuP"!`O#W-m!PLEC9g-.<0>f%W-E,Dffu8
CC3.BDf'J^"))Zu'HCh,Ect@]:j#e>>'P+/E,Tc7Df+-E"`8-oDK&_V!!<6%W8%=%*nJime_Hr#!s/H'
!!#gKe(<3p!s/K'!<JhLf2;YNp](O"!!!'(\D5I32#@7e!WW<'!!**#!Z.6]dacq#f%&7(T`+ok"9&9'
;V'@Nf([]!g9Ub[$tXARDE_iRDfB]4B+lk<C2e-/EGebV),"*m!Zl)qFWr#PCiF57""/,22#o[$5t!q1
DeKJ:F)5Z69ESd;!^:^GD%(Au$mfpo">W2+5s.sBD?+V-D?XlpD/O;pr;Zp#!3"ZNeK3;jf[lo"!!!'#
!WW>&gXFfq$31,/!!&VGg.q_L!VZR#!WW\<h9dnW!!!!"rW!r?!!!$"!W`9%!LDQmf@/7#e_O%&!WW3$
!!!YOfCdYug9Ub[$tXASDF88XE,99.Ci(OaE,KQ/E,0E4<>c,H$SZ.1D/MEnDK'H4>SoSBDFYT`(`=)&
13$tS7W30`DI!rZ;Aj+dCN"*06lZVN?Q'h%(`F#FDfBN0fPUk0DJa91=T/:'!!*(ug\]M=f%Zr"!!<3(
!!*'ae_/Nq"TSQ'!<A_HfhqYI'EJ18!!**#!WW3.Zf'+a!WW3%!!<*!!Wi?&rW!B.'"d#Lf%&=(`X`%M
!rW*%",Ymbec+.reHjm8!!*L=E,BIjD?k#sDJa<1D/BDrE,TW3rbi-]DfBW.A8,t$Ci95j5Ak=TDK'Q4
D/F30E,]f:E,TW1Df9K0Df9N5DK'T7Df9N1DK'T5DK'W:E,ou<DfBW3D/X?0Ci40/D/O91DZ+GND?+P@
D?XrqDfJhZrW!!#!2onPqpbc!gS=`J$NpG3!!*.fh:K[T!rW*$T%r!rr;Zm#!!N6#%06G/"U)6fcnbY'
!!!,u!"T/3!WW9%"(0X2f@/=,M$!YV!!3#u"$Y;efDa@teHjm8!!*L=E,BIjD@:;tDJjB3DJX0,DJo>h
$#aa"D/aH2D/O7iDZt#qDJsH2rGM[RrbW![Df9K1Df9N0Ci95hrbMmXD/O6.Ci+*.C]8/OCi0,g%rH0%
E,TW3Df0E.D/O92D>e>PD=)3EDf'E4<rr:#!s&D#g]#b&eH4=VU](6,"98E'!!"Y#fZ=?u!W`<%T%r!r
rW!Q3!"b?rXJ`(rXf/+scIgN#!<W6##TfqFVLU].!!E0"!YW9&rm_M33rf<^!<E0$!<<;4g",oJ#hlTb
!=WLXD/K5h#An<rDJa<2Du=JSD/F)#Ci+$-Df0H2D/X?1D/O6.D>\8SDf0E/DZ+JVDJa</DZ"DXD/F0/
Df0H2rb_jUDJjB2rbhaSrb_sZD/=',D/=%cD?4TjkACHAD/XDq!WE'$!<B(Qqpb\t&)3iZ!!*'#!!!$%
!.s1N$N:#/!W\hIfhq_K/cbqedc96Bi8EGNhVHi8d4kV&!s/HMhV-]<gj&u%!WW6'!0Z-cf@mb=!!**%
rW!'%!W[H"p=0K'ZN("7A8lC&Du=JWDf0B.DJsIlD?b#uDf0K2D?OioD/O:iD?=`pE;XPWDJsK1D/F+g
D(omGCi+',DJsB1DJjB1D/='+DJsH2D/=',D/F30DJa9.Df9K0E,ff6DJsE0D/XFWD?XrqDfJhZrW!$$
!3"ZLeHFIXUAt9%!<<*#"9AK),L+17qu?hjgt>R&!%nh^]=PYg^Upqjf$i="2?3^X!!=Xrf@8L+gKFUZ
!W`9$?/!cXgi`Yu!!<3`%/p5/"=qsRpXL#4ZN("7A8lC'Df0E0DJa6.Df'9*D#S>MD$FlpCi400D)#mE
DJj<-Ci+'-Df9N1D/O91E,TW4DJa9.DK0Z5D/O60D/=',D/XE5DJX0-DJsH4rGDdUDK'H1Du"8ND>e;6
D?XrqDfJhZrW!$$!3"ZLeH4=VU](5p!WW6!!!NCFe->sVrW!%lgt>R'!%J'N%0m(D#m^e>7+]oBcRo>#
!!*'FgXjj'f%7D6!!!$"!'/W^f$Z&O"9&9%TJZuQ!!0+QpXKZ*ZN("7A8lC'Df'@jD@gZ'E,KN1Df'B1
DJa3-E,0@jDZt#rE,BK2'lRu-Df9N2Df9N1Ci+$,D/F30DJsFkD&7,0DJj</Df9N1D/=*.Df0E/DJX0-
DfG\o$ZKs!DJj6+E,TW2DZ4S:D?XrqDfJhZrW!$$!3"ZLeH4=VU\t/r!s8f1!!*K.)6aYP!<<3%T%r!r
rVup!rVus%!W<!M!^,)ff$c;T!<<*$.+6\tf[SWq)?Ts>!WXh&f@m&&!!!*$,1C3*!!3-#BAWX=qUH)0
ZN("7A8c=&Df'?/DK#Jk'Q7r.EcH&:DJa6,DK0W5Df0H2F)h.s!,VjTE,TW5rG`?dE,BE1E,KT4E,TW5
EH#jqEW0n[Df'E4EW0n\Des9/DfGYp")_smDZ4STDuO\\Df0E0Df0H0rGDUPmqr;ID/XDq!WE'$!<B(Q
qpbc!gS=`J!s/H1@Jp3.!(db.!WW9%!1r!!;>gIp!rW*+!rr<%!'f,`f[2SS!"(((eCN1#f$H2Q!r`0(
/(iG-?N:0,!!uigT`G,o!!=1armpqr$ehoe!=WLWD/O9/D>e>pDf0E0CLgj\?Y!tmE,KT0A7]UrB4,+R
?=R_hE,TK&?oq_'?sd5SD/O6.@T6*1C2e'(@UEPO?sd8NBl7m1A5lB0CN492D.m?a?t!JWDfKW2E+iHM
=_MboDJfAj!,_[P!,_1B"`J6rEE<2?!!<6%W8%4"!nQ,$qu?d"Z:Xup"U"f*!rr?+!1r!";#gXr!!NK*
!s&B&rW"`>f%/O%0*;1T!!"@uf[J@%fZP67!<<0$/D&Rr(]sa<!s"kKa:nXT!<E1jh:'s*e^i=NeHag7
!!*L=Df>Pk!c;glrGE6b(B=R<!#.P4DK'A*13%@u!!E3##7E_4De^'g"TABH!Ch$HC,>ns"9BWVF]e\E
!s8T*!!6SLCd8"(#lkcEE,TYh!<*!1!!YE$CNNPg!"/c4;K-MkD<Pj@D/X<0E*3&=!s&D#g\]M<f%Zr"
!!<3$!k#-4!<<6&!Wi?'!!&VGg,2_-!<<0&!"K,8#mU_D!^kMleC$)P!!*'%-.L;rf$`6[!!*'$!!#%4
f9ZI;"9JQAcJ@DVqu?sug""a)e^i4KeHag7!!*L=Df>Pk!,_UN!c/Srr`C4!"!ql(C(W.>EB=A$?!:>b
!)IWL&1Upe>$4p:Ec*]^"@m$<<"0LYBjFqB$6re[<GQJ6!^1%,@2f5NEH+hU<*<C04TRKfAI]hm@Upbd
@r6($k\^Q@Df0H3=T&4%!<B(Qqpbc!gS=`J#Qau,Y2WO`!!`?$#Qb!tgtGU*!<>[k!#2BI^:h4k]Xbo4
d+Qc%!!E<&!$^(Ld+Ht,C]XS:!WW:-gYG6u!rr<%+aS<V70!Ah!!*\Lf@JI#e^W4$e_7>0!=WLWDu=JQ
D>e?%Df9D(13.MVG"D[0E,#n:Ec3uICij`9D\"L@D@/:FDK'T9Ec>%Z7sK22CiiMW:3CDoEXs[DEHQ2,
!BYC>E-5e**H,pj!+g:nE,cU@FA;g=F`MS0"&!WOD!5a?D/X<0E*3&=!s&D#g\]M&f%Zu!!"8o/"0ULm
%L)n5"TSW'!",=Qg/.hN!!*'4a8k,rfa-Bdf@/@*bq]=u!"g^:f\P9<OoYOb"98E&OP[YUrW!T7!!3-%
"98E&!s&B%N8<%:e^W4MeHag7!!*L=Df>Pk1Mq#HDJjB2CCi1?DJ3s*%kVg;&2A6F3t#kID09@m5&t6G
2KEk[DK9T4/J2i;CN+-/@Ou,2DJX5(/TGTEDaXS:E,TZ0GXqg@F\VpNF)c59&Lqm2!%DDuDKK<%DJX:U
D?XlqDJjDqr;Zp#!3"ZLeKi`#UAt8q!!*/'gY6WH!rrB'!!3-#T%r$s!!*'"!YiN'eCW:edb*+&f%8@!
1'%@X!rsOAW2l(W"9\W'&HW+J^u0_C!<W<%!WW3$!!!0"!"h6Ce^i@&f@/:#g9Ub[$tO9pr,)OPDZ4K.
Df9D'0QLuOD/pX<FD;CCEcF2F9ib@k*Y;h#CC^n+-n$N&CiL+8DfBQ3D/X?3DJjGBCC_n8Ec,bA(Mdo*
Df9Jp"As;6"&)ft;CMrSEGe&F!>[OlCiF?0E9M0CD/X<0E*3&=!s&D#g\]M&f%Ztu!!iW+XkMLP*WcEA
!#,J7T%r$s!!*'%!"m*)e^E%#e(*%RdF[(!/d2.R$3C2/!<<*%!!3-$rW!gNgXJ%[!!**#!<<6&!<E0%
!<E6%"hEC8f)4&'g9Ub[$tO9pr,)OPDZ4K2DJs>'06(uLCig=7F(l4AEH+&A$j@"D">t:<D@[@;0.en>
B5n\2F_Yi5D/F63CMRg+&1M]HCiFD@)/aJ2DesN%!)@c4!!s#=#QcQ!D/XK'8Lb;P)IRE%D!5a?D/X<0
E*3&=!s&D#g\]M4f%Zr"!!*3&!4(>1fST\0"T/6'T%r$s!!3'!%2H_2e^W1"f%8@#f@S4L1B7CX!W<!3
!<<0$!<E0%!$fVCX9/J)!!3-%qu@N9!!<6%!WdN%e^i:#f%&=)ZN("7A8cDaDEhuTDJsB0Dep%@EH#i8
C_A:>C(W1@E'"85D.I9?!F9bY%5i6KF)Q#;D^6-7DK'B1BK&Y)EG]V(/9P`DE&f$GC2.^+D/rDP>B3C=
?YX:i7fZJ-A7BFrEbn\X.<9<Ek\^Q@Df0H3=T&4%!<B(Qqpbc!gS=ZH'*G>id+Zu("98K'!<<+kgtGU*
!WE'2'?8YUeCN4#f$i@%f@)GU!!)rt%06G0!!E9%!WX+If@k'?!!NE(%>ULCrga(P)Z0R:.aQ`DeHag7
!!*L=Df>Pk6Z$[XE,KQ3C_8=?DJjPo!)@QN&MS9G4:GtDEH>Lg8TAMQ3-9"WD/a?370$M5Ci4?"!(h9K
D/Tt9Df]c8;ZKR9D&[A0E[)04F%u^IEc,r2#X!8o$#FQuEcWWECiAKS"`80qDK&_W!<)s9W7oeQe^r7#
fA!#"!rr<(!3b//e_Qr"!<W3")P,[9;?-[t!!3\Lg="^*f%&@%e^i9t2#mUWrW!E/!!<3$!<E0$6bM.+
c63#b'/nLsgtLQ?hG+%N!W`9$WSQ(Sf)F26g9Ub[$tO<pD/O6.D/O</E,]Z3D-.?#Chmf_"WM2pD%8CB
E'=PBD/a?-$UJfJ%Php9BkqKtF^P[nA92g*)\-V"Df0M*.s,ZGEGHa)=*/>"3<MfnF%l[DEGfW4$oN</
!'G.=F'o>)DfBRWD?XlqDJjGrqZ$Vp$JO%]e^N+!f%QZ#r;\DVVV0JOf@W^r!!<3'".8)u;ZZq$!<=%Q
gsaa)e^`7$eCN0t/HGkP!<E0#!WE';!>\_+e_Jg1Qj!Hl!W`:Ii76?-e^NE9!WW?%!$GS!g!\C&e^`B[
!!*L=E,KN1DJa6.Ci4-,D/O#*!YPr@"TT`SEH#S'/9,\h%;0TrE,-%:F(l3d&.K0^$;kV_;%<RM-O:,_
EGff2E"+I>Df9E7@ibUi.1cSBDf9_g#@_ajDf$L:D/qi@%j`D)'4GrrkACH?Df0H4=Si($W7oeQeKi_s
e(*$jS=lRJS=7URe()t(^7LmdT:27if%.$qS"-+?SC5jbelL>Of%&:$f$g^hSt)CDT:_[FS#!O9f&#$.
eCh9sU7ImJRE4"0f@AC#f$0VUSt2ODUtF,Gg!\F$g9Ub[$tO<pD/O6.D/O60CMn$,E)TM+9iPG6E]e2T
Dc9t]E*ZCYEG]T2<)d^R=&)Uh:JX\mE,9E*7PQVcAp%m+D/=/i>B+IuC2\-1;)9jf>&eIuEFh`@D%CN$
?VPBVF'C^_0M-&$CiSWU"`80qDK/eU!!oOWe^i:$e(!"^eCN@-g"G6;f%/I(f$W7)hV%n`$eNkZg"bB=
gYCQ<deqW'f%&:#f$rC*h:gW:rnC$%gt:94f$r7%db<=.g"kE:iRlZ4e^N.&eCNC/g=k?;gXXg)f?r.!
g9Ub[$tO<pD/O6.D/O3/D/sN/E-$,@D/XK7CiO?.ED1OkD0'Z8CM[s*FE)/4EcGr7DfKl?C2e*0FDl,<
FD,Z0EGoW5D/X90Df'<+F`DPAE,KN4C2n?7CiX?/DfK`5CNOT9Dg$#5Eb]OVD?XlqDJjGrqZ%&'g==d)
e^r@$f[\R)+k5)neCN.!e^W.%e(3.#f%&@&e(*""e(3%#e(<.$f%&@LeHa[Wf@A@%e^j`L9\%bHeC<+$
f@/0sg!nO&f?r4!f$r@"f@AL%e^W7%f[JI(eCE1$e_7>0!=WLXDJa9/D/F0,E,KQ/DJa6,E,fc1D/jB3
D/='.DJfr"D/X?1Chmj*D/aH2E,tqp$uU!%Ci"$/E+j90CMWod$uU!#C2\!-Df0E)F)Ltn(2n#-CN"-,
Df9W1Cia?3EGo`6Ci4*/k\^Q@Df0H4=Si(0W7oeQe^W+#e^`1"f[\O'diHuff@AI$e(N4"eCE$uf@AI#
f%&:$f$`1$f[A=$r7(eurR<.Ee^i=%e^W$rf%/@%e(3.'eCE.!g"+m*e_&C&e^E"!g!\F"fDa;Pf%&7"
e_7>0!=WLXDJa9/D/F00DJX3-Df9N3DJX60Ci=9.E,KN2CMe'-Ec=E]EGfc4Dej9/CMn!.Ci+!+D/=**
C2\-+F)>f6DK0K/DK0K3DeX00DJX-/CN=<2Ci*s*D/F$.DesB-DJa-+Df0E/k\^Q@Df0H4=Si(4W7oeQ
e_&=#f[SO)daupuf@AI)dnA6Edack!e(*.#dFHq#eC<+"e(3+!f%JU)e^`7%eCN.!f\"a(eCN1#f@ea'
e(<("f@/:$f%8O$f@&4#e^N-uf[nU"f@JR%g!TfL0A"b)g9Ub[$tO<pD/O6.D/O6-DK0Z3D/X?-DK0K0
E,0E0Ci=00E,9E,Ci=9,E'S8ZCi40/DJa<0DfBK0EGTQ3Ci=9/EboT.Df'E3DJF'-EboQ-FDG`5Ci"$-
Df0N1E,fW1CN"--CiX?.E,TOUD?XlqDJjGrqZ%J3g==d)eC`=&f%8C&e_&C%f%8:$f%&:%$e<eYf$r7'
eC3"!fDa>7f[JF&eCE.#e^rC%e_&@$e^N.$rm_G,e'ut"eC`4!f$i0urm__7eCN4"f%&I&eCN4#e^i=%
f%8L(rm__:ZN("7A8lF'DJj<.DJjB2Bl.^,rbW'_Ci43-E,BH0DJO3.qecRSDf9N4DEMfTD/O60CM[s-
Ci40,Eb]N0DJa91DJa9-D/aE3Ci4-0C2\'-Df]]2Df0E1DJj</Df'B/D/O32CMe%SD?XlqDJjGrr;Zp#
!3"Z7e[O'7g9Ub[$tO9oD>%iiD/=$.C2n'.E,0B/DJjB1CN4-.D/4$+D/X61DJO0.D\$]&Df'B.E,'</
E,99,DJ];j"`\BtDf0FkD?4Tirb`NjD/X93D/a?0DJX0.DK'K4D/X3*E,KXoD@1B$DJO92D/O-+E;"/Q
D/X<0E*3&=!s&D#gZ$bqeHjm8!!*L=Df0FgDZ4MPDBa"9EH,l4E,BK1EGff9Ec#i4EGoi;Eboc5DfTT2
C3+E9DB<k<CN40/D/FN:F)5l6EGB<.E,fc5D/=?8Des91E;j`!Ec,o;CiFB4D/a?0FDQ)>Df'?/DJa?0
DK'E-DKKc5D/O:eD?XlqDJjDqr;Zp#!3"Z/e\BW?g9Ub[$tO9oD=qcoDfB8T;f6JhDfBZ"1E@W-ASl='
EEb=C,<ogZDJa-3=Z%<G6"4tR5]1IXE).u)-qS5qD0&]KDJs?4EEYP8EH"uC6psI269e.]@7"UECiF/b
//^!6DfBK4@m=7<E,BW(7;Hm\D/]2e"`80qDK&_V!!<6%W8$%V_po%HZN("7A8c@&qJQ=OrGF**7KO6;
EG]T27faA`/-$`,DfSSS'fIQG'4Gs$F?fj?2(o(><cW%mDCRXH+#bGF,&)(51_FJ?Ci4)/!]>";9b\<Y
!"Kta0QT_aAp%m(*WRBI*WdR$EcFqW'5D<&DbU:DE:n)PD/X<0E*3&=!s&D#gXaoqeHjm8!!*L=Df0Fb
D?Xrp(EW]Vrba&u$8$7;F]JK.G%ha8CNjc&!'>:>:]i_!DKKP6$Y=9u3ri0#EH4$?!&nn81(S/?E,]%e
-k0p1D/FAu!)@TRCN`AR@;p06!*jP_F&;rnDfJYT!Aeq6EDupRDf'E/phg7PDf0H3=T&4%!<B(QdacOk
#hlTb!=WLWDJf5frbXN1DfJhY@O<7;DK04k4)o@UEB?j4CCDk<DfB_]5]:Q^'QA&0C3<_\6uuoA2K`YQ
CiV]lD)?;i'l%W%FY4\B"%[HLDK9+b:iL;nE(BtAE*`T3F)c)9F#F,.FADom!*+&Z9`\jFD/O:eD?Xlq
DJjDqr;Zp#!3"Yte^)bOg9Ub[$tO9oD>J/LD)lKOD_MoG8H<4>EGQa!1fnI0F)l&;.0D2'AT)X.Eaf#7
Eb]T4D/pF<F&rEDE,fc2DJsB3EA@uA/T5NA#XNDT*cZ19E*NN?E,TT79)rUF8-!7>Ci=93?3!Z@;?^;U
&S?8]!G$6DD?XlqDJjDqr;Zp#!3"Ype^N%Sg9Ub[$tO9oD>A'6Df9N0C'7(OC'Hk@D/j2A$ig;L95e]d
CGHD#!Z+:CEEWHBEGo]2E,R->Dc6XDEboQ2D/OB1EA8/BDfSJQ/7j3+!+0\_DdWQ>EGf]:8-!1@2[O/<
D/X60A-5,@:]Og6"$1I#!,-4eE,>;e"`80qDK&_W!!E9&!3"YBeHjm8!!*L=Df0IhD$4fpDfBW.9*%4O
:_+:WDfBW9C0X.I!'5"8F`2)%80.jdDdWQ>E,9E/DK6j;E`E*FFDPl3DJX$(E%ho@D/LR+9i=:Z3HB"W
?3<uBDf0Pi!+^7<!blRiDf0N+!(;!-!FBh8!F8Y)BQ.p-D>A&RDf'B/DK/eW!!30$VuYSBeHag7!!*L=
E,YVk$?0iuEGTB1)[$icA.fRW;fZ#/C2\*4F=[W3@QSFFEcZ:Z!,$'T/Tu&JDK'G!0lpJ#8T\ffCi26L
DKIWGCis1g%MT3^$5$rjE*<6;FDYl<8-<@C:]OR>CiXB59a+R>;#jaBCEOTk#%hXjCN'#d#&e?rD/O>q
r;Zp#!3"ZOeXt@sg9Ub[$tO9prb`<dDf060Ci+*4=ohE8CM[Yo-sq'p!)IcWE-4>EBj1[0EcQ#;9*&@C
2?R*'E,]h^"]'/U',PD*Cj0M!.;a#Y'5;JI"_DLeD,14/EH#:c9QG&kECU.BF(Yq'CNsN5DB0F,F]/9L
CNEhf('\AhDf#2d#&e?rD/O>qr;Zp#!3"ZKeYCY$g9Ub[$tO6nD/K5h&oDN(DeF,D$Ys^"DfRr?AT&Ip
>Y&I49EctdDC,BT@UN(;+`)"+'FIHD>rr6DEH#np!$YNR=r[TRCiM3CD/'81E,BN4D[[q0EFJoCDfBN8
:&nsHEDcib=CYMV!*!rV;?0sAEGn5G"))^iDfGMi#&e?rD/O>qr;Zp#!3"ZGeYgq(g9Ub[$tO6nD/K2g
#B+EsEG-=LE;jb_D-@39Eb6d%!!<O00PbQJAM*rb!s()dF)Z/1-NF8L#<lsBD/48o%fcb7)d70!E&JbS
<X2]FEH#`64:>_A=:nAJCiOAb$tF0nDc.,J!Ws3<Ebohr%9mpfEGHd,A9)R)D>A&RDf'B/DK/eW!!<6%
W8$mnX47I/ZN("7A8cDcDB3Y6DKBZ2Df0B$DJsN1D00Z+CN+-/A6N>NE,Tc,<-3:s<`rsMFD#W1DJrub
@;9XsEc#f2Deif`?>=OtDea*"Des$(E+s0.CN*g$D/a*&E,fZ5DImd)Df'H2?r^WOF_u#6Cgq=$EG]T2
Bl@^)E,,2d#&e?rD/O>qr;Zp#!3"Z?eZ[L.g9Ub[$tO<qqedHgE,KK2D00W3C2n!+CNF<1DK9Z8E,TW1
DK9T.Ec;h8F)5l9C2Im,E-#o9DK'E0BlJ!0E,TgsDA-u,C34?1DfBK.DK'H.EboZ2E,PYl*cZ(;DJX0.
DK'W6E,o]2DK0Q6D/+!)Eb]Z3Df'?2q/-CTD/O3.EEN/>!s&D#gZm=qeHjm8!!*L=Df0IjD&mP2DJsE2
CiF91D/X?1CiF91CN+-,EGf]4Ci=90rb_aTC.rV_DJj</Ci=90DJa<3CM[s)EGTN0EGBE0D/=3-EGTW2
DJX6/CN"-+F)5i9BQ.d*DK'H1Ci4-/D/X9/DJa?/D/O9,EbfT0DJj:dD?b#rDJa92=T&4%!<B(Qk1-rk
#26B`!"<FWqecCNo5=SFnS\ADr,0)`rb_OM!,_[P!cN$\r;Zp#!3"Z3e[s?9g9UbZ$tXA'DT$GmD=;?D
DfAkX!!<6%W8$1Z^XWYEZN't6AT)I(D:`\*D>J.kDZ=SKDZ=SMD?=`q=oA=&!<B(Qg==*k$JMfd!"<FW
Df0E/p29nIfP\]Hs)%FH!cN$\r;Zp#!3"Z'e]62Ig9UbZ$tX?qDJa7aDZ=S'DTZksD=qcJDfAkX!!<6%
W8#bNbLHpQZN't6AT)I(D;B+0D<PleDZ=SND?+PND?+PPD?=`q=oA=&!<B(QcIL7k#26B`!"<FW]5H8=
s)%4B!cN$\r;Zp#!3"Ype^N%Qg9UbZ$tXASD?+PFDZ=S>DZ=S9DUr_*D>nGQD>J,ODfAkY!!E9&!3"YB
eHXa6!!*L=DuOVUDf0FfDV/k,D>S2ND>e>PD9QntD>nDWDf'B/DK/eW!!30$VuYSBeHjm8!!*L=Df0F^
DNo#CDf'B/DK/eW!!<6%W8%=%T@F5$ZN("7A8lF'm;CWqs)#Si#&e?rD/O>qr;Zp#!3"ZKeYCY#g9Ub[
$tO<pD>e>PDshMsD?+PPD?+P$D?+PND?k#sD/O3.EEN/>!s&D#g\00qeHjm8!!*L=E,KOkD?+V?DVf72
D>e>PD:*5$D>S2UD/X9/D/O>qr;Zp#!3"ZCeZ74+g9Ub[$tO<pD;fC!DZ=RcD?b#rDJa92=T&4%!<B(Q
ma\Mk#hlTb!=WLWDJe3IW,;fXD/O3.EEN/>!s&D#gZm=qeHXa6!!*L=DuOVUDf0FJDXMEAD>e>PD9Qnt
D>nDWDf'B/DK/eX!!`Q*!3"`%f@9'8n^[Hdq:,5kq:5;ln'qZs[/g::AT)MaDY\/FDY\/?DYS,FD>A)F
D>A)FD>A)FD=MKTD/O9.CiWSY!!!$"!3"Q%e*,?\f)=1aebReTeHa^Ugog\Z$YKBUrG;OPq/?(Hq/>\=
r,12+q/6"HnSSPLD/F60E*2u;"KgY>g>2#Iq:kGnn_<Tfq:k`!$/!tj[K-I=BlS.iE7/b$EVXSLEVXS<
EVXSKE=d)-EGoo&!WW3%!<@VRVl?TMWPkb?XK7E^!")R%=oMP'=nu1q=nu1a=oMOY=SZ+i=SZ)(=BSd.
=^4;m!!`Q*"98H(!!;rrq#U!cq#SkCq#LI!rW!!$!!L+<^]4?9rW!$$!!!-#!!NB+!!*'%e,[\m!!`B%
!W`?'q>g<lq#L3kklCM[rW)irq#U9kq#U9kq#Tsb"9AW*!X&B$#6Fl*"TSZ*!V$0[!Vl`k!V$3d!;QZc
!!ic/!<W<(!!!&3!6>-?"8i-!"o\LP~>

%%EndBinary
grestore
np
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: QCAAAA+Arial-BoldMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/QCAAAA+Arial-BoldMT 4 GetGlyphDirectory50 <001C60D8A8C9B6FF86F5F3A19921C3FE187E6183EB941A461BFDF48896B01C539BA03B9A71268054FD539295016B775957F73BDDB654AA6712BF7E0C40F4AC922FE0B288CD70E18C4E1C889841E3AE3271A7D86FE908FD4A3BC0FE2CC8F051210EDBAF3FCCF42B66137993282D8903C68179D39C68CF2DDA978A8EFE5F09284C45B6203BE9537D93C8C7D651EB9110B223AA11E17568> |37 <001C60D8A8C9B6079F41181ADFF82FD511AE28F2C86910E87A2408036CAE220A294923EA0E343A2E6A98A318DE85DC7C76B01F1EC3BBDAB8243406F64AA60EC47C4740DC38CA972359346DC4F829F6F2F025BAF490F6C12F4FDEE6E00BC02718C2A815AF9445D30C8E56633A71FE0D0177EB4631ACBF3247225C96DE555742F231ACF12ABFAF7923DBF44FBF12BDB4408FA2F2BAEBD8E7E077E25AB5122D52C15E7FE3C32CA90E2552D23E0B4ABA9EE9903B7FFBC9DA58DB417DC8D58F11CC4F5D7250D4EBACD68EE666FFFB942A580FB288> |59 <001C60D8A8C9B64EDFF497A17A55F5BD58F090A68D065C34237DBE60D957894A083EF29FAB2EFF59AC0A40A8B9BB907788D2259067F423BDEA55D1A016233B> |57 <001C60D8A8C9B64EDFFB4ACF2CE4960528C34E7D425A8BC108A25462582A6577B0215C0C14DC527B> |!endend end
%ADOEndSubsetFont
LTQVUW+Arial-BoldMT [9 0 0 -9 0 0 ]msf149.308 408.372 mo(\0003)sh155.326 408.372 mo(\0002)sh164.797 408.372 mo(\000%)shLTQVUW+Arial-BoldMT [7.2 0 0 -7.2 0 0 ]msf171.313 408.372 mo(\0002)sh176.658 408.372 mo(\000;)shLTQVUW+Arial-BoldMT [9 0 0 -9 0 0 ]msf183.949 408.372 mo(\000\024\000\026)[4.9617 0 ]xsh193.872 408.372 mo(\000\023)sh132.154 417.372 mo(\000')shLTQVUW+Arial-BoldMT [7.2 0 0 -7.2 0 0 ]msf138.653 417.372 mo(\000$\000'\000\(\0009\000,\000/\000/\000\()[5.19839 5.19841 4.80244 4.80246 2.0016 4.39914 4.39914 0 ]xshLTQVUW+Arial-BoldMT [9 0 0 -9 0 0 ]msf174.257 417.372 mo(\000\017\000\003\000$)[2.50914 2.50914 0 ]xsh185.781 417.372 mo(\000/)shLTQVUW+Arial-BoldMT [7.98 0 0 -7.98 0 0 ]msf193.731 417.372 mo(\000\026\000\031\000\033\000\030)[4.46477 4.46475 4.46477 0 ]xsh211.59 417.372 mo(\000\026)sh244.5 415.32 mo
292.44 415.32 li
292.44 393.48 li
244.5 393.48 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 0 792 ]ct
[47.94 0 0 21.84 244.5 376.68 ]ct
<<
/T 1
/W 756 
/H 323 
/M[756 0 0 -323 0 323 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
U]1>`iW$gq!:[i)j8T,KU]1Aas.oYpnDO>brrDQ(s5a1[n>$!bnGiNbrrDQGs2G!<nF-A[#QOi!J(FY]
rrDQXrrr<$s8V"!])Md"rr;Ti"oJB#s1f/VrrDQXrrqllJ,]KRp&E&3!:]LX"n2LVrW!&Ns5s=]nF6G]
huF;c!!2Hd!WEVWrrDQes7cO!i'77W!!hun!:9^g^]6V!nGWCr!WRZM+92B?!!%NL5Q:Zin/agorVup0
i""*3rr_0Ys*snF!:]U[$\/cfJ,fW.!!*'!_>"!*rr`<%"$aU"!![oQ!"],0r;?U$&-)\-!!!Q0r;-Ho
nGN=iJ%u$a"8r0!nFQY]J-5iK!!7ZL!:^!gr;HZs+2IgT#!W(f&-)\-r;Zp1s8VQk!!!-$q"k$ki;EWV
5J[6u!!iK&!:]U[!WW9#qZ$^_n,Rt.rrqloqu@hsr;ZpaJ,hh5s8;p"&-)[FrVus`q"k$kE;]b;+2IjU
!!3&u!:]pdq>UQr!!#.Y!!==Y!'g#R"n3W6!$D"7!!5CC!<)otJGoNS&-)Z["9&9*q"k$kI/O$G+7T4/
!.Y"J!:]X\!<2`n!sS`*5PP3Trs[h8s1f0C!"9,55PP9XrrBk6!!j,8rW%HJ^]=0,!!%KH!!XP?!$Ct9
+9)9?nFZ_\rq-6k+7]@>_>jPn&,lQYs58D)!WE$(i!9;[&-)P.rr`;j!-nA@$\&-Z+5e7=!.Y"K#QF`'
nFZ_\r:L$i+7]@>JcGc>&,uWZs6tO9!WE$>i",ke&-)D0s8VusGX)5D+91h[J3X)'+8u9?s53qWrrDQc
s8)`qr:L$i&+TZ.KE(uH+9)=js7h*A"9&6@i#i!u&-),0s8W&u3.Ltd+91j1J3X)/5Q1Z_s7cTnrrDQ\
rrDie!!!Q's8;m*"98E!+9)=js87BE"9&6)n/q]1&-'F0rr3c70Rs,\+92+cJ3X)35Q1Z_s8E"Js8VT\
rrDQ]!!!8orsT#0s8F,?!<<)sJ,BEIrsA0:s8NW0^jlCa&H@87s8V"!s87@s5QCXGrW)rt"Fr`:s7#a^
!lP&ro`+ssnc'"&s8W'/rrE*!r;ZZsrVm)k+92A5s+((J&&9n!s55"!r-s6Hs8G7^!<3!$^`WUVnG<1a
rr`6#5JZpl!!Dck!!iN'!tYD3J,]HKqucot!Uq30rr<)urrq=@s8V"!rr31QJ,fLtrW)rt"Q0gjs7#d_
"8i-$JFrmD!WVuis8Drt#QF`*&,uWZrr3#s"9&6#n/qZ0!WE,urrqmVs8V"!rr3"L5Q:Z`rW)rt"Q0Ob
s7#d_!;Q'a!ri6bp&>'l"9/<&O8f30rr3#s"9&6#n/qZ0!WE3"rrqmVs8V"!rr3"L5Q:Z`rW)rt"RlZr
s7#d_!;Q'a!djtip&>'l"8r0"!.Y"J!W2usrrMU2rr3#s"9&6'pcnfYi#hsu!J!E6rrN*!rr3,j"98Dj
q>UNrs7l$_!"\c&!WE3!rr<&trrN#urVlof+9)9@p]LKp"oLUbs55!urrIY"rVlitrr3,r"98Djp\t6_
mf3=mp](6m!!3#t!!)ut!W2usrrMU2rr3#o#Q=Z+r]gG_i#hsu!J#[urr<&urri6#s8VT_rrDQW!!!8r
rr<)trr<&trrN$"rVlof+9)9@p^d?'!<**cs8V"!rr3"L5Q1T^!<3!$quQitnFuq_nF$>W#PA#s!'gG^
!!)ut!W3&urrMU2rr3#g&,H5+i#hsu!J!E5rr<&urri<%s8VT`rrN/hmf3=io`"rB5Q1T^!<)ouqucot
!Uq31rrMU"q>UKR+9)9@J3X#4!!)ut!s&B$nFuq_i9pXG"8;`ss8RTSrVm'%s8V9^qucot#4N`7rVu?t
q>UKR+9)9@J3X#4!!)ut!s&B$nFuq_i9pXG"8)ToJ,oQJ"p"]'_uKW:rVm)k+92-9n.5Er"98DZ+9)9E
J3X)*s8N)trrW9$s7#d_!9!;G!!Dln!l+dXrr30&s8U":qucot#4N`7q#Bh*q>UKR+9)9EJ3X(ms8N)t
rrW7Ns7#d_!9!;G!!Dln!oO%Zrr30&s8R`Oqucot#4N0'nGhDgq>UKR+9)9EJ3X(Ms8N)trrW7Ns7#d_
!5S%'!!2cm%KG>d!.Y%K!.Y"Ns82utrs%s's5<q8+8Pp;i#hsu#(Sr<JcG]LrVls"J,f$4rr@T<!!!&l
rs\As!$D7@!'frTs82utrs%rprW)uV+8Z!=s55!urs"!<rrN0!!<)p"J:IUgq>UK3rpBad!VHBqp](:!
s8W&u!sAT$"9&6"nGWChs55!prrM%"rr31Q%F>.UrW)os"+Yn$nG3(b!-ml2s8Vfm"o\K%!WW3!!!<?'
qucot!:]sf!rp%Xq>UKR+9)9EJ,fQMs8E#srr[e$s7#mb!<29a!.XY@"FpIPs8W&u!sAT$"9&6"nGWCh
s1f`PrrM%"rr31Q!!!'"rW)os"+Yn$nG<.br9F=_5P4sYn,NH<s8E!#"989$rVllerW!$"^`WCP!T5(!
rs!uR!!3-"!<)p#J:IUgs82frr9F=`#N5:T$iU,+5Q:^*p]LQo"9&6"nGWChs1f`PrrM%"rr31Q!!!'"
rrE#t"+Yn$nG<.bpuqbY+8,X@J,g\k!.Y"Ns82utrs%s's+(-b+8Pp;i#hsu#(QsV!WW-!rVltMJ,f$7
rrDiY!!",6rsJ5q&,uY0rr`<!"9&6&n/q\grrKnWq>UKR+9)9EJ3X'bs8E#srr[e$s7#mb!;PdY!"\c&
$N:#9rr@QKKE(iMrVm)k+91j1i",Y`!T5(!rs"!<s+14L!<)p$J:IUgs8W#s!;PdY!"\`%$,@)O!<<(O
s82utrs%s7s7$'H&,H5+i#hsu#(Sr<_>jN8rVltMs8VTbrrDiY!!*?)p&>?f#QFf(s2Y0;"9&6(n/q]*
s54F`rrM%"rr31Q5QB^BrW)os"+^FOnG<.bpuqbY#PA$&p]pg!J,e^3qucot"n3W6q>]@Q&,H5+i#hsu
#(Sr<iW&lWrVltMs8VTbrrDiY!!!8rrr`0$rrE#t!W3&urrMU2rr3#W&,H5+i#hsu#(Sr<oDegjrVltM
s8VTfs8DrtpuqbY#PA#urWE0#rVlor"9&6#n/qZ0!T44YrrM%"rr3"L5Q1T^!<)p"JH,Z=qYpQbkl:bi
s8Vfm"TAN'!.Y"J!W3&urrMU2rr3#W#PnB#i#hsu!J!E5rr<&trr[iPs7#mb!:][^!5S7-!!i<!!<2ut
"9&E&!<)ouqucot!Uq31rrMToq>UKR+9)9@J:IOt!!)ut!s/H%nG<.bnFln`!Pn@.!!i<!!;ufq!X&H&
rVlor"9&6#n/qZ0!Up3errM%"rr3"LJ,]HKrW)os!sAT'nGWCdrrDQ_!!*,Yo`+ssq#:BmJ,]HL"9/B"
rrN$"rVlof+9)9@n,`@b!T5(!rrIY"rr3#u!<)p""98DjqYpQbpAb3r_"@[-#QFc#rrMmZrr3$%rrE#t
!W2usrrMU2rr3#o!W;s#5QCcA+9)9@J:IRu!WE)urri<'s8VTbrrD!O!!38<)"mq0#Pe<(r'15]rWiH'
rVlor"9&6#n/qZ0!rN*!rr30$5QCcA+9)9@J3X&5!WE)urri<+s8VTbrrD!O!!3D@3;*=P"8Mm$r#bt=
rWiH'rVlor"9&6#n/qZ0!W2rrrrr<bs8V"!rr3"L5Q:Z`rW)rt"T/f1s7#sd!rr:NpAb7"J3<N*!!E#r
#Q,\Ds8E9'!<3!"j88rWrs57d+92B=rW%HIrrr0^s8V"!rr31Q5QCc\rrE&u"T/f1s7#pc!9!PN!Y9fD
p&G'prVufq%K$b:s8EQ/!.Y%K_u'Q7rs0_9+92B1rr@QJrrqmVs8V"!rr31Q5QCcTrW)rt"Sa)=s7#sd
!;Q3e!Y9g1p&G'nq#;91&-)\-&,uWZs8R`L"98E!+7LBPs5<nW5Q:ugs56-As55!urs"!<s8V-Y!<3!$
n/q]1nGN:di:R'O++Sh6!!!&pru(e<s8Vj9rr@QKrWi?%s8Vj9n.5R!_#Jp,rr3/;J,fQ,+9)9EJ3X)6
KDklMrrh7Es8VTdrr@TB!!46mJ+WdAJ,0*^rW3'!n/qZ1J,f!Cqud!!^`W%Vs8N*!^^pGE"b;+&s55!u
rs"!<s8E-"!<3!$^jlCanGN:dJFrmD5Cie,!!",>s8DsArW)uui'75AJ,eF3quQit!$C,0s7cWphuj#Z
rW%HJs55!urs"!<s7c]q!<2uu!<2uunGN:dJFrmE561_6o`+tVqYqN6!'gL6J,TEirW!K(!.XJ<5MuYD
J-#]>!<<'"p]1<n!Pf6FrsF8us1ea9!'gM]"9/<#nGN:dJFrmEIfTMao`+ssqYpd!!"8c+s8;fq!?^h0
!!.SbrW!0*s7cRYs53qWrrIW\rr3<*&,ZD4rW"&?p]pfu!:]pdrrD`m"9/B$i:R'M"8Vur!!39&q#(0n
+5m(t!.XqI#7(;.!!2lq#QF`+!!E9$rqug$&,ZD0s1f0ErrDQds7H?p!WE*!i:R'M!WE&srrq<\!!iPn
r;Zj_JGoNL!WN#t!tYG3JGoNS&-)\-!!*'!q#(0n&,?)'!'gJ_!:]pd!.abC"9JK%s7#[]!!2oq"o&&t
5QB[?!!.S"rVus$rqug!+92B!rW!4Rs8Vio!.Y%<r;Zj_nGN@crrDQdrr@TC!!E?%!WVZ]!;QQsJ-Z,S
i;N]X!WR]L!!*?(r;[$ds8Vio!!E6#"o&&ts8VTe!!.T-rVup_rVller;QhK!!)co"9\Q&s7l3do`#$l
s8ULFrs,h's8TA'!$V=@!q62>rr3K-!Q"g9p]1?p!WV'X!"]#-!:]pd!.abC"9\Q(s7l3dr;YCK!;lcq
!8mYQ!:]pd!.abC":+](s8;Ni!!1mTli-tSr;QbIp&G4#p]LQoo`+sm`r?&.r;QbIrW)`o":su(s8MWj
`r?&.r;Qc4p&G4+i!9;^o`+smqu=n?!:]pd!5S:."<ZP,s8V`l!!1jSm/I(Tr;Qc4p&G4;i!9;^o`+sm
`r?&.r;Qc4r;cZo"[CoMs8RWC!!!&>rrDQdrrBk.!!PUV&-)[Fp&G'pqZ"h?!:]pd!.abC"b6"Ps8Tn.
!!!,Ts6]gdnGN=Z!!RlA&-)[fp&G'p`r?&.rVllso`,0qn.5R!i:m9R!!!&>rrDQerrDie!!WD\+92B1
p&G'njT"9?!:]se!5S:."p+b^+92B1p&G'nmf*=e!UTgd_=@O+nGiLfo`,0ss55"!s8;Qj!!2Nf!VcZ^
rrMlqnc&UYrr2uno`,0urW#1_s8;Tk!WW3bn,EFX!:Bden,W"Y!:^!f!:]X]"p=c'5QCc]o`+t6qYpZs
!!%NFrrMThq#C'f!Up*ZrrDQfrrBk-!!W]'!'gM`rq-6k"8`$"rVuqJqYpTq!U]mfquH9e!q?6i!WR]C
!!W]'!'gM`rq$0jJ,B6JrVuqJq>UEqm/I%cnc&UYrr2tKo`,()n,P]Ps7QEo!!!Q+rrKn9q#:<pm/I%d
nc&UYrr2tKo`,()n,P]Ps7?9k#Q"H$n,rIc!!2iopAY*nnc&UYrr2tKo`,(9n,Rt;rr@TB!!!9#rrMTo
q#:<pm/I%dnc&UYrr2tKo`,(9n,Rt;rrBk-!!!,trrMm"q#:<pm/I%dnc&UYrr2u6o`,(Yrr@QJrrBk.
!!*'%qYpTk#Pe<!!UTgd!V-0inG`Ff_"@[05Q:_5rr2uVo`+soqYpTk&,?/)!VZQfrr<)irrDQfrrBk-
!!7ZM!<)oti:R'M"8`#un.5<o!!DWg!WE,irrDQfrrD!M!!7ZM!<)otnFZb]"8`#un.5<o!!2Ke!WE,i
rrDQfrrD!M!!<3#!<)otq"4Ue#Q"H$n.5?p!WE,errN*$nc&UYrr2uVp&G0qs8E&trrDie!!!9#rrMU2
q>UKp"8r0!nb`@]rr</krrDQfrrD!N!!<9%!!3&u!;uKi!!iB#!Uq3,rrN*$r;QcTo)A[lnc&UYrr3#g
!;?Hq"9&9$rVllqo`+t&qYpTc&,H5+rWE)u!5S4+!WE2krrDQfrrDQ^!!<?$!!3&u!<2Wk!"\r+!UpWq
rrN*$r;QbIoD\jj"7cBknG`Ffq"=[i"8i-$rVllso`+t6qYpTc&,H5+rWE)u!.k"HqYpTq"8;`pJ,TBI
nG`Ffq"=[i#P\9$r;ZEi!$D(;!Uq3,rrN*(r;QbJoD\jh"8DfrrdXnH!:^!f!r)`qp](C,p](Eorr@TC
!!",;rrM%"q>UKn#Q4T%Jb/mBr!2ur!W7HGrrDQfrrDif!!<c$!!iH%!.abC!C-V]rrM%"q>UKn#Q4T%
Jb/mBr!2ur!Vh0CrrDQfrrDif!!=>4!!iH%!5S:.!'g>[!T5'qrrN$"r;QbJq>^?l!W32srrMV=rVlle
rr2ufp&G1:s7cisrrBk.!!#7[rrM%"rr2uqrr3<(49todq>^HpoCW%`]Ee32!T8J+rrDQfrrD!V!;QTs
+92*@r;QcTp&G(WqYq5e+9-ol!'gM`n,N^ns1gl!!!%NJrtZ.FiW%h#s8Vj&#QOi!s8F,?O8o61J,TBI
nG`Ff_"Ia15QCK`r;QcTp&G.Ys8W#s/`8kn!;lg=s8Tk7#QOc'&,lP/&-)\!!WR]MJ.M\[^]4W>rr=/9
&,ZJ.rW#1]rrDQfs7H?oJ,f!Kr;Qcdp&G(7qYqJl+8u98!"],0!!!9(qu?us!!!-$s1eX7!.GO\#QOgS
!!iQ%!"\Q(n,Rt9!!3&u"7Z?jrq-6nJ,f!Kr;Qcdp&G('qYq,b+8c-.!"],/!Pf6Gp](QWrW!i9rr<%J
!-eJGs8N'!#QOQ!#N,^B!.XbD!<)p"nGiO`quHQn"98Dj&,cG-q"=[f&,Q;X^`W=O?iUH3r!2^%s56!A
^]F?5J,THKIK4<e"98?&n-B!_!!hEaJ,hh/!!)ut"7Z?ji:R'Ps8V!fr;Qclp&G'prr;rs/\jUG!'p;a
s7d]*&-'HE"2Fs;!.XnO^jH-$3!93Y&,6\8i;<\m!rr<cp](?nrr_cjs1n=."9JN&!$D.=!;uKiqYqMM
5O\XRrWiJu5PPchJc5cF"93m9pclPR!+>d<"98-<p^dCUrWBq9#J_G]!.XtI"7Z?jJG&sG!WE'!+8l-=
rq-6kJ,B6s^d%<R"9&Q*n:13Drr`6&rWE295Oa0<2uj!Z!WVXRp^dB*rW@ZN&+C\@!;uj!nGiN=qZ-No
"9\Q%!'gD]!<2Wk!$D+</AOL>i!95`s58D%&,un6"9&E&^d$b,^bB^0rrN/X5PPch#Q=gV!$C\PrrDus
!q?6io`,*squ?^]qu?<h!"])/rr4Ob5OmYBrWE1Ns7d-(#Q=i)#QMR]i;^T3n,r]As58D%&,m+;",?k@
n/qZ1r;Qifs8V`l"9\E!!'gA\o`+ssqu7YO5PO(HrWE1Os7d-&&,Z\3#QN^(_>h;qn-AuE&-'Fpn.5L/
r!/8_5O]cp!;uiunGiO]!!EQ%!!#7\rr@TC!!!,us"&[bs55!u"93rPn/qQ=p]pd's54uMs+(.=&-%4\
_#Nm7r"&Q-hZ//q+9)B>rrV]is7lZn!!Ei-!!#7\rr@TC!!!,us"&[bs55!u"9/K'n/qEIn.5L's54uM
rrE)g&,u\1JcG3Mp^cj)rr@Q<+9)B>rrV]is7H?p+8>g9J,B6G_"Ia.!WE$Ns8RV!s55!u"9/K'n/qEI
^`WO\s6q*4rWE2i&,u\1JcG3]p`JE9rrE)g+8u<=rrV]is7H?p5QCb6J,B6Gi:[-N!W2m;J:IUW+8uBA
"97j4n/hWpr!38[*s;!;s6pR!!WNW3s6q-"5JTM`!<;O1rW2rs!:U'is+'eC"@)qdJ:IIr!9!PN!!2us
/:`6Mi'72CrWiJm+7L*IJ,BQOn/_[^&-(Q0rrN-%s6q-"3WO[0!<;O1rrN&t"7Z?j_"Ia2J,fP!J,B6G
nG<4`!!!,us"&\Ms56-@"8iE(n/q-""989(s54pu!$D7!+9)BA#QN^(huEfXrrE)g+8uB?rr_cjs1n=.
"+U@N!;c]qnFch^"8i*3J:IU75Q1c_&-),@n,O"!r!38[(`iYWJ,eFKrr`6*s55!W!!iQ'!<;O1rWE)u
"7Z?ji:[-QJ,fNKqYpQjp&G'pqu83ts8Tl!rWDp+s6r82#QOi%&-(Q/!!iQ(i#ht$rWiJ]+5d-Ks8E'!
n/qW3r;QferrN/Xp&G3ps3:W@rrDif!!!9$rtPP6s1gks#P\i0i'6-as8W!-s56!?rr3Yi5Q:ib&-(Q0
i",kfrW3&g+8uB?rr_cjs7#^^"93lO!;c]qr;$El!!!Q,rtPP6s1j-^#P\i0i'6-as8W!-s56!Err3Yi
5Q:i`&-),@i.(e,rW3&g+8uB?rr_cjs7l<g"9JN&!!2rr!<2Zl!$D+<'EJ15^jl7ep^dD_5N%%ks83E-
i&guErr3Yi5Q:i`&-(QP^jlCarWE2Y+8uNCrr_cjs7l<g"9JK%!!2rr!<2Zl!$D+<'`e:6J:IJ%p^dD_
5N%%ks7d-)^jHCdrtF<Trr`00s56,WJ,fQJ"97:$r!30"!q?6i!;uQk"9\W'!!2oqp&G(Wqu7B2s8RV!
r!3!=s1gk7J,fQD&-'Fm#QF`:^d%i$r"&hc5JVdKs8E-#i'7,Er;Qlgs8W#k!!EE'!!!&qs7lZo!!%NG
rtPS7s+#Us#Oii8^d#Vas8Vj)s+'kLrr3YI5Q1c_&-'F0^jlCaqucuW5Ptcarr_cjs8;Tk":+i)!!E&s
!.aeD!.XnG'`n@7JH,NPn.5PL5JTM`s7d-)JG9BKrtE1trWE'/s1gk75QCc]"97:Dr!30""7Z?jrq?Bq
#Q+Q%"8Vrs_"Rj*rtPP6s+(.I#Cm?bJ3Erts8Vj9rrN$&rr3YIJ,TQ.&-%/D5X5;KqucuW5Ptcarr_cj
s8M`m":tD1!!E&s!5S=/qu7H2!WW1Ms83*%&,uVl+<UX`p`KM:qucru'Yo4t"2G0AJ33frs8W!!s56->
#Pn>u"7Z?jr:^0o&-)\)"8Vrsi;!BQ!;ld3rW3'!JH,NO#S6n73+*j.j7j_q"8i9#rtN7urW@ZUrr=_Q
5QCc]"97jMHjB3?rr_cjs7l<g"<[[Dp]pWp!9!SOqu7K3!<<'!s82j6#Q+Q%?jH^ap`KD9quHa4pj^)/
rW!?/rVuq++9.,o#QN^9GR*4+rr_cjs7l<g"@)qdp]pWp!:]^_qu8;J!<<'!s82j6"7Q9jhuW`\n/qE9
rW%G`It7Ru!"8l&!!(p^rWi?+s53m)",$RP"RuHkn,W4`"@)qdp]pWp!:]^_!.XqH(&S&]rrN/t!'C7s
!!)Kg!"\Q@i",hd!!WCQs8E!>r;[5p!!!Q)#QN]^qu?itrr_cjs5<VO"FpIOn-Adh!;Q<h!<>@^ruUY0
+9)BAquD*E!+5j&!!",1+2Auu!!!'"JH,TK55bHhn,NG1p]piW!W2p&rVluhs8Tn/!!If@++OUlrrDuk
!!#7]rtrNO#QFi)quD0G!:U$a!!#7Q$ip>-J,fZds+(.K!.OtKDuo_6!'g5`s6p-g!!iK&"7Z?jJG0$H
It.M!&,H5*r:^0k&,cG[^]4W>"989"rVuuo#Q=]'s6p!hs8RTL#QK>SrrE'!!Up3h!!%ND&-),(rW"&=
rrV]is8E#o!!N=P!!!Q*rrE&m!!!Q-s"<40&-%:^rWiIR&,[OL!!E8j!"],0huFl!JcGb$s*t@L&,lP0
s7d-)n.5KuJ,TBKnGiL]!!*&u!!!Q*rrE&m!!!8qrrDQerrhgUs6p'grtkS6s8V]js3L`'+9)<?J-Z,P
+92+#rrDus!q?6fpAb3ps8Duu&,?2!!!!&crrMU"qZ$<i!;uZm!6>$;!q?6bpAb3rrr)lt&,?/)JG0'0
rrM%"iVruKs7lNmqZ$X!rr)lt+8Gj9JG0$DJ*d19i#gqX!q?6ZpAb4!r;HZr+8Gj9_"Rg/J*d19i'63#
!q?6ZpAb4)rr)lt+8Gj9_"Rg/5OACNi'7&;l2LhSs7l<g!"])/!PgqprrD!O!!#7MrrM%BiVruKs7lKl
qu?^=rr3#75PY6Yi:d3O5OACNi'63#!q?6fpAb18rr3"L5PY6YnFln_J*d19i'63#!q?6fpAb1Xrr3"L
J,'$Dq"FagJ*d19i.(P%lMgqTs8M`m!'gJ_!J#[prrDig!:0Xc^jk>C!q?6iqZ-Qp!.Y"J!J#[prrDul
!!!&crrKo"iVs#Ls8RWE!!Rl15Q:_5q#:?lp](?rs8VKd!J!Dnrr_cjs1nC0!WTt7!!%NDrrE&n!!!8j
rrW0"&,6+irr_cjs5<YP!WR]L!;HKnrqHHn&+';trW!2^rr_cjs7#mc!rr<%s8;rks7cQo+70"/rW!2^
rr_cjs7lBi!<N6!!;?EmJGB0F+9);arr_cjs8;Zm!<N2u!;?EmJGB0FJ):4lrr_cjs8;Zm!<`?#!!!&n
rr@TF!!%Mjrr_cjs8;]n!WW?%rVup!pAY-.q#CDEao;J4s8W#m!!NW-J,fQMpAY-Nq#L?mc2Rn8s8W#m
!!!Q/rrN#upAY-^q#K4MmJd1U!rr;uq#CC*rr3#s"8;`pnG*(*rr_cjs7lBi!$D4?!W3&nrrDin!;li<
rr_cjs7#ga!$D4?!W3&nrrDii!;ld#rVuq.YQ+P"rs/OQ*WZ67r."_Go`"skJ+EUAnGiOHq#CCZrr3#o
#PS/tr:p<mJ,K<Hr7(cK#QPD7rrMWh!WV*R!!RlE!$Es#pAY-jq#CCZr;QcldJsK$s8VTgs1nF1!Iqoa
!!!8trrE&s!;ult5Q(N]psK-HJ,fQ<s8Tn1!!3,8rVup'pAY-lq#CC:r;Qclli?2K#!`.fnGiN=q#CHq
JGoNK&,#tu!!",=rrDiB!!PUes7$'gp](?pJGoNK&,#r&JGK6G&,cG-psK-GJ,fQ<s8Vlp!<N6!!!",6
rr@TJ!<)ru#Q4T&r!_$S"b6RPnGiOa!!*3%r;Zg>p&>$-q>^L#kPkS\Ig4jrrW"S]J,]HMhXC8ZpAb0q
rr3&hs8Vlp!<`B#!!",6rrD!R!!!,Crr_cjrW)cp"pb/.!!3-Bp&>$Mq>^Ktao;G3s8Mfo!!iK&!PffM
rrDQd!!3-#"3LQEnGiOa!!!Q.rrKo"p&>$]q>^KrjT"BB"7Z?jJGK6G&,lM/^d%Ml!;QBj!!14A"RuHk
^]=63!$D1>!PgqmrrDij!!!,Crr_cjs7#jb!$D1>!J!E-rrDuo!!*'%ao;J4s8Vlj!!#7^rrIX7p&>$i
q>^L#j8\<B"7Z?jr;$Bo5OeUO!.X\A!<2fp!"[3O!:^!frrDrs!Is&+!!%NArrE&p!!"+_rrDQfrr@TH
!!.Sbr;ZhIo`+af!.W,j!:^!f!5SI3!WR]K!!%N@s8)cr!TF(BrrDQfrrD!S!!3+Mr;cHh!.atI!!C=B
!:^!f!q60ir;ZitquH?g!5SL4!"[0N!:^!f!;QHl!<N6!!!!&krrBk4!!+2Aao;A1rr2unqu?a"s8;ot
!V?<ki;<QT+5m1`rrDQfrrDil!!W].!5JRg!V?<ki;<QT5KNj)nG`FfnGWCh!!!9&rrN#uoD\g[qu?^]
aSu80rr2ufqu?^-rVlor!V?<kq"t*nJ,fPkrrDQfrrD!T!!!Q.rrN#uoD\gcqu?_HhuE!A!:^!f!9!bT
!$D1>!W2uirrDup!!#7\s8E!."98DIhuE`7It<=:q4N6-rrDlbrrDQfrrBk5!!*'ArVlon"7uNmr;6Np
5PtKZ!"FGW!!%NK^^gDF!Pe[Grr3'Bs7c]qrs@Tgrr>:`!!E8;rr32_huEcWn-Asm!:^!f!5SL4!C-AX
!!!,mrrE&r!!#7_s8N#uJGoN_s8N'!5QBXP!!!&8!!iQ(rZD10!WN*8i!98^5PtK^s1j-as+0).!.Vca
5QCcQrr2u6qu?a^i;EWU#P7rqrql`r5PtHt^]4B8s8Tn(+92*HJ,fW.(^'g<rX]&("9/<#n.lQ7J3WNe
!.Woks8N,h!!%KL!'gM`nG`FfJG]BJJ)L8*!!i)pqu?^=qu7MkJ&-^9s5<Y_s83tSJ&1V=!WW3!#QOc.
rr3f0+90-+_#N=Wn3?sQ"8DirILkp4s8VTfrr@TI!!.Sbr;Zg&o)JUf!$D+<(uTo&_>jPor!39"+5hY/
pclRos83-%rWiH&(\f*Pi;^Xnn.5"1s8E8u&,:Mop`KP9nG`FfJG]BJs1nR5!"\Z#!.b"J!"]&.)ZTiq
s7=),s5EkXs83tss7?"Mi;`iT#QOc.rr3f05QB[AKE(]Wp`KP8#P]D=Hp@NNs8VTfrr@TJ!!33$JGfHJ
&+]`#_#465&,ZADi.(dCs8V-Y!WW'^i;`iP5N)SAp]piu#QF`(r'(qri;\T4r!3!-s83,s+9)1&rZD1?
nG`FfJGfHL!WR]K!!!Q#rrBk5!!!Q,rts\os2"a8j8K&Yr'0->s7ehJs8Virs8E9&rtkSts5<nfs8E,q
&-)P4p`KP65Q;i*s7$$f!.b"J!<N3#JGfHJ&+]`#i;EWU#Q+N<i;`hps8V-Y!<;s]i;`iP5Oe^Qn,r^i
#QF`>r'15>rX]&/"8EE,p]pR9s7ehY5QCcQrr2tKr;[')s6p!n&&8_HrrD!U!!!9%ru(jpJ,dFds5X(Y
J,V[js8VjYnGiOXJcG]Srr3W/5QB[@+92?Cp]pio#P]D@pcn`W!:^!f!.b"J!!iH%!T5'jrrDQe!$;I8
!"X_^s58D,_uKbsrW#1^5N)SApcn9Js5CforWiH&!rP:_&)d@-s8RZF"97iqp`KP25Q1T^nG`Ff_#465
#Q4T&i#hOi!;QKm*s^^(#D<'Vi.'(js8V-Y&0Lm9i;_-u+6!8"j2(cp#QF`9r'15>r#bt=JbT?Ii!9$!
s83E+rrDQfrrD!U!!!Q-rrM%"o)A^br;[oEn,N]Es8V#,O2M"tj8L_Cr]f=jO8(rUs8U!ps8E9&rt>5o
s5<ess8Tn0"979ap`K,*!<)otnG`Ffq#(0m&,cG.^d%Di!;ucq)[H9\!sAT'i-l3Qs8V-Y*!cC+i-u:4
+2S!W`rk9"rWiH&'DrsP_#-Fss1nC1s1em7+6!+t5Q:Z_nGWCc!!",=rrKo"o)A^fr;[oMr]U;as8V!W
#JpH?iVjf!r'0*>&,6,,s8Rl4J,T]PrtG;Ps1nCos8Tn0!WU"Ap^b4?!"])/!V$-grrBk6!!!Q-rrKo"
o)A^hr;[o]r]U;_s8V!W#K-TAiVjo"r]f<@#P\90s8S/LJ,T]PrrDur!"\ihs8Tq1!<:%Dp](?p!!E6#
!:]se!;Q9g!.XS>!WE)u!$?^i4obW`s53k^_>jPqrZ?[i5MuMHp](j)s,ZY6rWiH&!;ufr&,8Bhs5E`<
s+UdR!!3,8!<2uunGW@erq?BmJ+<R<!$)+?r]U;as8V!^#JpH?j8L-NHp?Nh#P\90s8N)7!^HYhrr3f0
+90.O+92B"pgAR]#P\9"s53lAs8VTerrE&m!!%N=s!*$o!"],/4ob]bs58B^_>jPqrZC'I5N%$Hp`'P=
rVup?rWiH&)>HGr_#,;Ss5<ZkIh)eZ!!3-!!'gM`nGiOfs7ZKnJ+<O`J,fR6s8G1^+ohT#J'Yt2s5X)#
n30(pJ'[m2"98?#!$D1Frr3f45QAOs+92B!pi&D=#P]D2s8RTks8VTds7ZKnJ+<O>J,g_ms8W'^!$VCB
i.(43s8V-Y5O](Gi.')J*s;Q@!!",?#QF`>r'14sr#bt=_"_k456ps*oDej[+92B1r;Z6d"9BVCs8;fp
+b0Ops8W'^!+Z'/i.(dCs8V-Y+8>t'i.(e%++aIi5Pu#mrWiH&(]6Mt_#,;Ss2"JL*'X]'+8c*<r#bt=
nGN=I!!!9'ruHS/oDejKJ,d=as5Er!quAt>s8VjYJcGX4r"&c3rr3N,5QAOs&-)[Gn9>q&#P]D?rri<3
s8VTfs8W,[!!!9"rts[Ds1n[7j8L/"!'fCks7egos7h*C#Q=u-rt##ls5<ecs8Tq)r!7cWp`KM8"TAr3
s7#sdj8]/bq>V;iJ,eI,s24gXrW#1@s8VjYi;`TPrWiE-rr3f45QB[@#QOgVn9b4c#P]D@q>^I:s8VTd
s5X.[#PnB9i.(dbJ,dRg+9)=*i;`iP5N%%\s8N?'!!iN'(]6Mti;NiYs+Bh?!<3<!+91m2rZD1?nGN=I
!!!9"rts[Ds58D,L]/CqJ3Vulr-1Hq5Oe^Q"9&Q)rtkGps5<nXs8N>nrW)s'p`KP*s8F,?s7$!e!<2$Z
!!i?"1Z3c_n3?r.rZD0u5N)S2GX([^iW&q1rWiJDs7ehYi;\?-rt"W!!<3<!+9-k@rZD1?nGW@ero=%[
#QOZ#1Z3c_n.5L/r#bt.5N%%LpcnNqiW&q/rWiH.s7d]9_#Jq7r"&;s!WNE"+8uO1r]gG_nGW@ero=%Z
#PnB:^jlC^"7RE1+92+#^_d(@+8cYcs8RWK#9*LNs6q-1_#N=7pcn7tJc5oL+8?ZppcnfYnGW@ero=%Z
"8VsQJ04gj!!#7Y&-)DhJ,fW.&,lZ]s8N(H!<<Z1n.5PLJ+*^4J)EPDrWDWo!&t5!J,fQ<rVllsj8]/b
q>W*u&-)Y0!<:sZs85(]!!0k;rr<%KrW"nX!$D7!#QK;rp](<o^`UVr!T3qX2uisXrrDQerrE&Z!!39&
s82gLNZ\<$huj#;"98CNJ,f\e"93lOJ,TEb!!%NK^]XT:+8u6Fs1f/kquGXT!'C5`rr2ufrVllsj8]/^
o`#$.s8Vikrr>:^rrt[es*m"Xit_UokPtRSs8VS<s3DeequGZ*"93n$rr2ufrVllsj8]/^c2Rdiqu6Zc
rVlot!9F1\"31?@nGN=I!!!-#s2k9@nGN:dJE6b2"5a(BrrDQdrrD!=!!!,@rrDQdrrN*!jo>Ad`r?&.
qu6Zkjo>AdrVt%?!:]mc!<2*\!$C%slMgkRqZ#[X!'eL'!:]jb!.a85!"['K!:]jb!.a;6!!2rrbPqS3
qYpPGkl:\ggAgL=!:]jb!5Rh!!"[$J!:]jb!Pe^#!!!PJrrDQbrrBk!!!",:s31KCnG<.b_!(h!+6NS(
p`KG6!.XtI!<)s?mJd1UqYpQ2kl:]*k5PJO&,lM/p^d?'!Vd2mrrDQbrrTt9!:'Ub5N_tHi",ed!Up?m
rrMTomJd1UqYpQ2kl:]*q#Bg_!Pf6ErrMTkrVloV#OVNknG<.b_!(h!+6NS(^^'i<!T4(YrrM$_mJd1U
qYpQ2kl:]*k5PIt&,lM/huirX!Pes-rrDQbrrBk!!!",'rrM$grVloV#Q=Z'i!8ZL!:]jb!5Rh!!'fWG
"7RE4rr`<$n-Apl!T4LUrrDQbrrD!A!!#7GrrMmZrVlon&,lM/n/q&t!V$-drrD!A!!%N2rrE&rrrN$>
rVlon5OJINnG<.bnEBoQJ)C8+5Ni%HnG<.bpuqbY5N2Y'rrDQarrG@"lMpp7`;]o.s8Vrq!;u-_!.Vre
!:]d`!<29as8U(<!:]d`!<2?c!I+_3rrDTcrrW1Ls5j7\nFutN!!!&mrrN*$pAY*nqYpTSJ)pV0nG`Ia
s6]je"82ZpquQfs!!E)t!.k"H!Pj3_rrKnGli-tSp\t5Dmf3=mr;ZTm"9JQ&rWi<"!.k"H!Ur>OrrKnG
li-tSp\t5Dmf3=mo`#'0s8W'/qYpQ3qYpZe5QCc_rrM$gqu6Z2o)A^Zp\t5Dmf3=uo`#'PJ,fEgqYpQ3
qYpTcJ,K<In3?gM!$D+<!71K@!:]sequ6YHmf3=uo`#'PJ,f9cqYpQ5qYpTcJ,K<In3?gM!$D+<!/LCM
!:]a_!5S%'!"\u,qYp]VJ,f9cqYpQ5qYpTkJ,K<Ipcn]V!WF2<rr@iMrrDQ_rrBk'!!!Q%rrhgUs6r8L
rrBt5rrMV=rr3*#s7ehUrr=/<rr@iMrrDQ_rrBk'!!",5rrhg5s6r8LrrBt5rrMV=r;Qfm5P4sUch[S@
nGN=arrD!G!!",5rrhg5s56-<rr@]JrrMV=r;QfmJ*[+7nFuq_i9pXG+8Z$7rrhg5s1gkqrr@]JrrDQc
rrMV=qYpQYoD\g[p\t6Omf3>0o`#'P&-'F0qYpPNqYpQRr;Qiun:1<7!6>*=!;Q<g!:]a_!q60unGiPR
o`#-R#QMR]s6'C]"7uPFn,*+bi;<NTn:1<7!/(:N!9!VO!:]mcrVlro!WVZi!.XY@0Am*8J04dnq"tB4
s+1:Oi-mm$s5<DH+8c*<n:-50s5X%P56LrTO21dVrt#/0TDnijnFlk`YQ'.G!!<>m!.XhEr;SG/"9/KG
quGXT!s!fN!<7Qh*!cN%!'UYXs8VS;#697)pg?2aIt.cS!"\i*r&b5`rrDQ\rrBk-!!3E)!;$3qi<0&f
+8c+HrW!IY!!%HJ(]Y*HhuF`%iW&oln9t?;If]<e)utHg#Cldbn,Vqh"9/<#nFZ_\i:R'M&+TZ)j+71L
5O`VWrW"3n!!%I3(]Y*HhuF#bnGiOHqu?_G!VeW<!.G=]J,g,<i,AYurr2ufqZ$Hm!9!MM!$Cb20>iA=
*'`r^!!e$nIfSt#4qIaUs1fTS!V$-hi;<R74otF<56q*-#J_;i_t[U>Jc>ZLnFZ_\nFZb]+8,[4s"D:*
r#?g;i'7O_pcelU3.)8<s8Tl`!!)Ngs5<eTpc\`R3'RZCILj9o%tjX""6'7Z!:]X\!:]X]!'g#R)oKJd
4<MDTp^b1856L[7GWCEVs1nU6_!qC(^_?`upcJTPGWuH&ILj9o%gVkf#N>[^!:]X\!;Q3e!'g#R0>l^m
Hlp6,r"$X556prp?pB;Ds2"^9i,Ses_#Ju`49>5%IL#BA&&J/c#P^IfiVriWnG3+^rrDie!!#7Rs"DFN
G^LT`"8i[\n9toC!!%M$s8Tq8&+FT=s1nYcpcLk;G^^1]rXXYZ*XDH]#N>[^!:]X\"8i-!nFut`J+Wd?
s"B/s0`3#C#Q,*`n3.BX+9VY!s8U":&+CbBs1nZPpcLk;E./>Ur""GX*Y8#e&)mNf!:]X\"8i-(r;-Hq
5C`b'ru@*h!W4$is83skn9to;+@#m]s8R`N&,62*s1nXIKD9fpq!`_C_>Fgrr#QCD*Y76/rrDQ\rr`6#
+9)-;!rp%9nGb/&p]::7L]@8oKCF=3n,`RhL]@C,rX\c)s8Tq8KD9lrnF1l;_>Fgrr#QCD4:f:-rrDQ`
s8;m)!.Y"K!!C":!<;NhnGb.squcj]"989@KCF=3n6u@sL]@C,r#bh=s8Tq8KD9lrnaQMg_>GC-p`9t@
4<MK?rrDQ[rsOJZs*t([n,NLhr!2fm1&q9/qucj="98-<KCF=3i8FY8#QOgVr'1)]s8Tq8KD9qIj7*$Y
KD6O@pc]5X4<MK?rrDQXrs4,T+7K74s8O21ruD@B#Q,YGs7d[gn9uJ<i;`f^s8R`H5Ptcds2"_j&bpjl
_r)LF"7RCbpbiZPHlp9*rrDQXrrp1<J+s!GmJegEr!3!=Jc5@."7QL:_;IQX#QOgVpj`8Js8RZML\MCq
#N-"3"7Q>Dp]_8uHlp9*rrDQ_s8)a!huNfV!"\Mt2#[aZ&,75s!;Jb`n-0ten,OO@s8R`@J,T]Qs+13*
n.3;Fi#D^t^]=EP#7obj5JTM`s7#OX"n2Qmrr=//s!7LErt"T0^]=.Z#Oi33#Oh^X&-)Z^_>jNGs8N-"
#Oi8>+5f?^!"8s[(_7.mr#`_(s8VTXrrr0"s8RTkmf+C(!WO8""2G$6Ig>`j!"\i)Ih2SZ^]XW:&-)V/
Ig>`_+5e7!IK@4a"+W?A#6FTa^jlCanF6G]rWiK'^jkeP&GuS/s54"S&,uU$pj[horW2ut)rM8,ru_:?
!'cP>5N%%\rWg4K#Cq%@^^'X!_#F?6nDXE=rrMm*qYpZds8V!Trs8CLs8F,?rW%HIrrDZirsKq<Ih0Bn
5PQ?#s5X+Y!:[i)"98E#5Ni%HnA"u(rdX,2!V$-)rrN%IkPkPOi;_a8!;P^V!:[f(!W4)&rrDQ(rrN#u
k5PMPs8Tt9!W32brrDQGs5O%ZrX\/k!:[c'jo5>MU]1>`rr8kq!:\kF`r?&.^Am?q!:Zc`!:]seVuHbd
h>bOq!:[]%kPkPOU]1>`r;W_q!:\eDaSu80J,~>

%%EndBinary
grestore
np
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: QCAAAA+Arial-BoldMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/QCAAAA+Arial-BoldMT 7 GetGlyphDirectory78 <001C60D8A8C9B7EF322B75AAFD4DB9E7AD574572B7D2556469383B3D4CBB5184BAC1997D5B0A13D1B495BE0C6B6EE29F273838B3F19F49> |74 <001C60D8A8C9B7D8BE2780ECF91BB8FE73517B0190DDC8DBC9897295332E6D8EF13268DE217D7EA63F2C2488BA6624154001DFCD86A24A51CFE6922F8614F4FD4481342B3992244B419F0D448BA14CBCD530939FD538BD00615A031E3CBF1609B0E4C3D7F5A051C575D052C1A51F88B318CA9D0C7CFDFA53AA8FB2F2EE274EE2F4C85657CA9E748262BB03EF446591D320994414EE439D72B9883F38366A41CF501DCE32006C591422CCF439307E4D3088D90FF7CD2955301C96A46D1D1545AF9D499025D541CB2077BD42919F91257F222D868E80527F0D65> |46 <001C60D8A8C9B6079F62DA5536DD2BD6FC532AB93940DE39A08BF5BD67CEB09469A3E2E159A477F353E377238529E6F1B4DC2C777C02E0A0A4> |42 <001C60D8A8C9B6FF86FA39BD8455388B96A79DE6C661D434721B9BFE9AFE31A8D3B1EE2339E46446F423E77240C51C0B1A82619322B37485E3A6C3AEE324ED7B0632685A57EF9CA7E19AAC2082E01C4F403DAE12BF8F2830FC26B22875DFBD55FC1C80EE740D53E34A2534A4362B0D86968D9BDA4CFAC87CE7506BF4518D62FCE7E6EAEDFB7B13AA321234AF3D6EFC462C35D2578BD423792DB837448E> |71 <001C60D8A8C9B7D8BE1937528A8A04A3F08B6D80EAB145BDD9DBE53FB1B70A6DDBF10422FFF8F4C48F788DD104B24EA5229392446A977753676010F47763954952B19E372D9318BC5C7A48B7A85FDEA74862756E58887CA2F53B9D7C319DD7A84656FBF89C0C66533E86D0B18AA2C13EC41ADA69D4E07EF68978C6DC11D8A9705A6EC736D21DD4607DF3> |10 <001C60D8A8C9B87C134ADC2EEB12157227709B8A1F2FB07B392B583235634469E0> |60 <001C60D8A8C9B64EDFFB50A69D860B3638B52FE1DC219CE81D0F8A430E50766B8409D0664A9D25CEC6B7E18E2BDF> |!endend end
%ADOEndSubsetFont
LTQVUW+Arial-BoldMT [9.96 0 0 -9.96 0 0 ]msf48 433.054 mo(\000&\000$\0005\000%\0002\0001\000\003\000+\000,\000/\000/\000\261\000:\000D\000O\000N\000H)[7.23094 7.23094 7.23094 7.23094 7.7887 7.23093 2.81767 7.23093 2.80869 6.12531 6.12531 5.57758 9.44206 5.57758 2.8087 5.57758 0 ]xsh151.613 433.054 mo(\000U)sh158.287 433.054 mo(\000&)sh165.518 433.054 mo(\000R)sh174.422 433.054 mo(\000$\000&\000\022\000\025\000\023)[7.23094 7.23094 2.80869 5.57758 0 ]xsh202.848 433.054 mo(\000\030)sh211.185 433.054 mo(\000>)sh214.541 433.054 mo(\000\030\000\017\000\024\000\030)[5.57758 2.8087 5.57758 0 ]xsh234.083 433.054 mo(\000@)sh%ADOBeginSubsetFont: VCAAAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/VCAAAA+ArialMT 7 GetGlyphDirectory49 <001C60D8A8C9B6079F629170873C67115641D0B6890161EC48F71E8D2106F3AC927984C1E464F121F968> |53 <001C60D8A8C9B6079F62E89B521DCDBE3DC5497B8DD99916239C0DFA5ED4F632B33575F4260343AF5DB7D477D12055F49C5E99C0AC176EAD42723223937F2BA15ECAD7751CB6A136B700EE485E38E7CDB87D9465C90BB8E29B04FDDA42609FBC3833B9FB5105619F4CC434003085F449D9FD5022725306B331FB97B31D295257B180DE1FD5465D256CCA19301DA97326882845130A5257BF61307ABA64C3F0B222> |10 <001C60D8A8C9B8ADAC5DDBE05E73C95FD04AE8995553CE47146A7ABAB05713BD> |45 <001C60D8A8C9B7A73D9658D627ED627C91284E113B36EE4477BE063DB79C014B4C1304B38BFA4196C7B3993D5118026189127416D2C23E3BA1516C5E2D259EE2D27698DAD25B31EA788FD5CFA3D890F5093AD3EE1D75864143B6DAD8719C69> |56 <001C60D8A8C9B6079F6D3F1E4545C3E1CC9D8EF54571065F01BE5A50957BD2D8AD04D30C23B37CA98B969ECB5CA0D9A7C563636CB33377BB3DEB53D45DD0F3E333CD69EA3B53D63C91B303CFDF29F59C20776D4DC576C9C080B76AB60A21673EFC1F645BF33D33929C60> |46 <001C60D8A8C9B64EDFF4E9C0F6048EB723B0CED8EE1109108A02369C8B45382285654732A05ADDD12E99CCD504BC058489833BA3AE060EFA> |18 <001C60D8A8C9B854D0D18501A7E07A7DB7C8496D0849EBF5F0BA> |!endend end
%ADOEndSubsetFont
LTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf240.186 433.054 mo(\000\026\000\030\000\030\000\027)[4.44005 4.44003 4.44005 0 ]xsh257.946 433.054 mo(\000\034)sh294.657 432.974 mo(\000$)sh56.9971 442.997 mo(\0003\000R\000S\000X\000O\000D\000W\000L\000R\000Q\000\003\000\025\000\017\000\023\000\032)[5.32114 4.4353 4.4353 4.4353 1.76998 4.43529 2.21686 1.76998 4.4353 4.4353 2.21685 4.4353 2.21686 4.43529 0 ]xsh112.426 442.997 mo(\000\024)sh47.9957 452.956 mo(\000:\000L\000O\000V\000R\000Q\000\003\000%\000U\000R\000W\000K\000H\000U\000V\000\003\000\)\000X\000Q\000H\000U\000D\000O\000\003\000+\000R\000P\000H\000\003)[7.54116 1.77959 1.7796 3.99804 4.44492 4.44492 2.21844 5.33076 2.66532 4.44491 2.22648 4.44492 4.44492 2.66531 3.99803 2.2193 4.88375 4.44492 4.44492 4.44492 2.66531 4.44492 1.77959 2.21844 5.76959 4.44492 6.65532 4.44492 0 ]xsh159.5 452.956 mo(\000\011)sh167.105 452.956 mo(\000&\000U\000H\000P\000D\000W\000R\000U)[5.76717 2.66287 4.44249 6.65288 4.44247 2.22404 4.44247 0 ]xsh200.402 452.956 mo(\000\\)sh203.672 452.956 mo(\000\017)sh208.114 452.956 mo(\000\026\000\024\000\027\000\023\000\027\000\003\0001\000\(\000\003\000\)\000L\000U\000V\000W\000\003)[4.44247 4.44249 4.44247 4.44247 4.44249 2.22403 5.76242 5.32832 2.22403 4.87415 1.77716 2.66287 3.99561 2.22406 0 ]xsh47.9957 462.915 mo(\000$\000Y\000H\000\034\000\025\000\027\000\020\000\027\000\024\000\027)[5.32832 3.9956 4.44248 4.44247 4.44248 4.44248 2.66288 4.44248 4.44247 0 ]xsh91.0797 462.915 mo(\000\032)sh138.888 472.874 mo(\000\)\000D)[4.87889 0 ]xsh148.207 472.874 mo(\000[)sh154.473 472.874 mo(\000\013\000\025\000\023\000\030\000\014\000\003\000\034\000\025\000\027\000\020\000\027\000\024\000\027)[2.66045 4.44005 4.44003 4.44005 2.66045 2.2216 4.44005 4.44005 4.44003 2.66046 4.44003 4.44005 0 ]xsh204.637 472.874 mo(\000\034)sh294.657 473.297 mo(\000$)shLTQVUW+Arial-BoldMT [9.96 0 0 -9.96 0 0 ]msf48 473.374 mo(\000&\000\(\0001\0007\0005\000\(\000\261\000&\000K\000H\000U\000R\000N\000H\000H\000\003\000&)[7.19614 6.64841 7.19613 6.0905 7.19614 6.64841 5.54278 7.19614 6.0905 5.54277 3.87953 6.0905 5.54278 5.54277 5.54277 2.75687 0 ]xsh149.899 473.374 mo(\000R)sh158.815 473.374 mo(\000$\000&\000\022\000\025\000\030\000\031\000\003\000>\000\024)[7.19614 7.19614 2.7739 5.54277 5.54277 5.54279 2.75687 3.32162 0 ]xsh204.23 473.374 mo(\000\027\000@\000\003)[5.54277 3.32162 0 ]xshLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf215.994 473.374 mo(\000\026\000\030\000\034\000\031)[4.44005 4.44003 4.44005 0 ]xsh233.754 473.374 mo(\000\023)sh57.0005 483.317 mo(\0003\000R\000S\000X\000O\000D\000W\000L\000R\000Q\000\003\000\026\000\017\000\025\000\024)[5.32114 4.4353 4.4353 4.4353 1.76998 4.43529 2.21686 1.76998 4.4353 4.4353 2.21685 4.4353 2.21686 4.43529 0 ]xsh112.43 483.317 mo(\000\031)sh47.999 493.34 mo[5.32589 4.44004 2.66045 2.66045 3.99316 2.22161 4.87413 4.44005 4.44004 4.44004 2.66045 4.44005 1.77473 2.22161 5.76472 4.44004 6.65044 4.44005 2.2216 2.2216 4.44005 3.99316 2.2216 2.2216 4.44005 4.44003 4.44006 4.44003 2.2216 5.32588 2.22162 5.32587 3.99318 4.44005 4.44003 3.99316 3.98843 2.22159 2.216 2.22162 2.21686 2.22159 2.21686 2.22162 2.22159 2.22162 2.21686 2.22159 2.21686 2.22162 2.216 2.22159 2.21686 2.22162 2.22159 2.22162 2.21686 2.22159 2.216 2.22162 2.21686 2.22159 2.21686 2.22162 2.21686 2.22159 2.22162 2.22162 2.216 2.22159 2.21686 2.22162 2.21686 2.22159 2.21686 2.22162 4.44003 4.44003 4.44006 2.66043 4.44006 4.44003 0 ]xsh306.782 493.34 mo(\000\025)sh140.455 502.82 mo(\000\)\000D\000[\000\003\000\013\000\025\000\030\000\031\000\014\000\003\000\034\000\025\000\032\000\020\000\026\000\025\000\026)[4.87889 4.44003 3.99318 2.2216 2.66045 4.44003 4.44005 4.44005 2.66045 2.2216 4.44003 4.44005 4.44005 2.66045 4.44005 4.44003 0 ]xsh206.153 502.82 mo(\000\025)shLTQVUW+Arial-BoldMT [9.96 0 0 -9.96 0 0 ]msf48 513.754 mo(\000&\000\(\0001\0007\0005\000\(\0009\000,\000/\000/\000\(\000\261\000%\000L\000E)[7.1852 6.63747 7.1852 6.07955 7.1852 6.63747 6.63747 2.76295 6.07955 6.07956 6.63747 5.53183 7.18519 2.76295 0 ]xsh138.666 513.754 mo(\000E)sh147.56 513.754 mo(\000&)sh154.745 513.754 mo(\000R)sh163.636 513.754 mo(\000$\000&\000\022\000\025\000\023)[7.1852 7.1852 2.76295 5.53183 0 ]xsh191.832 513.754 mo(\000\030)sh200.169 513.754 mo(\000>)sh203.48 513.754 mo(\000\025\000\026)[5.53183 0 ]xsh214.543 513.754 mo(\000@)shLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf220.73 513.754 mo(\000\026\000\030\000\023\000\027)[4.44966 4.44966 4.44966 0 ]xsh238.529 513.754 mo(\000\025)sh280.476 513.674 mo(\000$\000\003\000\(\000\003)[5.33551 2.21844 5.33548 0 ]xsh295.582 513.674 mo(\000*)sh56.9964 523.633 mo(\0003\000R\000S\000X\000O\000D\000W\000L\000R\000Q\000\003\000\025\000\017\000\027\000\031)[5.32114 4.4353 4.4353 4.4353 1.76998 4.43529 2.21686 1.76998 4.4353 4.4353 2.21685 4.4353 2.21686 4.43529 0 ]xsh112.425 523.633 mo(\000\031)sh47.9949 533.656 mo(\0005\000R\000F\000N\000F\000R\000\012\000V\000\003\000\)\000X\000Q\000H\000U\000D\000O\000\003\000+\000R\000P\000H\000\003\000,\000Q\000F\000\017\000\003\000\033\000\023\000\030\000\003\000%\000L\000U\000P\000L\000Q\000J\000K\000D\000P\000\003\0005\000G\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003)[5.76558 4.4409 3.99402 3.99402 3.99402 4.4409 1.52815 3.99402 2.22246 4.87974 4.4409 4.44089 4.4409 2.6613 4.44089 1.77558 2.22246 5.76558 4.4409 6.65129 4.44092 2.22244 2.22246 4.4409 3.99402 2.22244 2.22247 4.44089 4.4409 4.4409 2.22244 5.32675 1.77557 2.66129 6.65131 1.77557 4.44092 4.44089 4.44089 4.44089 6.65131 2.22247 5.76556 4.44089 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 0 ]xsh263.099 533.656 mo(\000\021\000\003\000\021\000\003\000\021\000\003\000\034\000\025\000\031\000\020\000\027\000\033\000\032)[2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 4.44089 4.44089 4.44092 2.66129 4.44089 4.44092 0 ]xsh305.74 533.656 mo(\000\031)sh109.976 543.136 mo(\000\033\000\023\000\023\000\020\000\027\000\024\000\026\000\020\000\033\000\032\000\031\000\027\000\003\000\)\000D\000[\000\003\000\013\000\025\000\023\000\030\000\014\000\003\000\034\000\025\000\031\000\020\000\027\000\033\000\024)[4.44004 4.44005 4.44004 2.66045 4.44005 4.44005 4.44003 2.66045 4.44005 4.44005 4.44005 4.44003 11.1066 4.87888 4.44006 3.99316 2.22159 2.66046 4.44003 4.44005 4.44005 2.66045 2.2216 4.44003 4.44006 4.44003 2.66045 4.44005 4.44003 0 ]xsh236.501 543.136 mo(\000\030)shLTQVUW+Arial-BoldMT [9.96 0 0 -9.96 0 0 ]msf48 554.074 mo(\000&\000+\000$\0007\0002\0000\000\261\000:\000D\000V\000K\000L\000Q\000J\000W\000R)[7.19902 7.19902 7.19903 6.09338 7.75678 8.30451 5.54565 9.41014 5.54567 5.54565 6.09339 2.77678 6.09339 6.09338 3.32451 0 ]xsh148.275 554.074 mo(\000Q)sh157.112 554.074 mo(\000&)sh164.311 554.074 mo(\000R)sh173.197 554.074 mo(\000$\000&\000\022\000\025\000\030\000\024\000\003\000>\000\032\000\017\000\025)[7.19902 7.19902 2.77679 5.54565 5.54565 5.54567 2.75793 3.32451 5.54565 2.77679 0 ]xsh226.96 554.074 mo(\000\023\000@\000\003)[5.54565 3.32451 0 ]xshLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf238.696 554.074 mo(\000\026\000\031\000\030\000\024)[4.44406 4.44406 4.44406 0 ]xsh256.472 554.074 mo(\000\033)sh288.435 553.994 mo(\000'\000\003)[5.76874 0 ]xsh296.43 553.994 mo(\000\()sh56.9994 564.017 mo(\0003\000R\000S\000X\000O\000D\000W\000L\000R\000Q\000\003\000\024\000\017\000\024\000\034)[5.32114 4.4353 4.4353 4.4353 1.76998 4.43529 2.21686 1.76998 4.4353 4.4353 2.21685 4.4353 2.21686 4.43529 0 ]xsh112.428 564.017 mo(\000\026)sh47.9979 573.976 mo[4.44163 4.44163 2.22319 4.44163 4.44162 4.44163 2.21844 4.88047 4.44163 4.44163 4.44163 2.66203 4.44162 1.77631 2.21929 5.76631 4.44163 6.65202 4.44163 2.22319 2.22319 4.44162 4.00436 2.22321 2.21928 4.44164 4.44162 4.44162 4.44164 4.44162 2.22319 3.99475 4.44162 2.66205 4.44162 4.44162 4.44162 2.21844 5.32748 2.22318 2.2193 2.22318 2.21844 2.22318 2.2193 2.22321 2.21841 2.22321 2.21927 2.22321 2.21844 2.22318 2.2193 2.22318 2.21844 2.22321 2.21927 2.22321 2.21844 2.22318 2.2193 2.22318 2.22321 2.22318 2.21844 2.22318 2.21844 2.22318 2.2193 2.22321 2.21841 2.22321 2.22318 4.44162 4.44165 4.44162 2.66202 4.44162 4.44165 0 ]xsh303.826 573.976 mo(\000\034)shLTQVUW+Arial-BoldMT [9.96 0 0 -9.96 0 0 ]msf48 584.914 mo(\000&\000+\000\(\0005\0002\000.\000\(\000\(\000\261\000&\000R\000O\000E\000H\000U\000W\000\003\000&)[7.20115 7.20115 6.65342 7.20116 7.75891 7.20115 6.65342 6.65343 5.54779 7.20115 6.09552 2.77891 6.09552 5.54779 3.88454 3.32664 2.75687 0 ]xsh154.959 584.914 mo(\000R)sh163.885 584.914 mo(\000$\000&\000\022\000\025\000\030\000\031\000\003\000>\000\024)[7.20116 7.20114 2.77892 5.54779 5.54779 5.54779 2.75687 3.32663 0 ]xsh209.34 584.914 mo(\000\025\000@\000\003)[5.54779 3.32663 0 ]xshLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf221.083 584.914 mo(\000\026\000\030\000\031\000\024)[4.44005 4.44003 4.44005 0 ]xsh238.843 584.914 mo(\000\031)sh295.56 584.834 mo(\000%)sh56.9982 594.793 mo(\0003\000R\000S\000X\000O\000D\000W\000L\000R\000Q\000\003\000\024\000\017\000\025\000\026)[5.32114 4.4353 4.4353 4.4353 1.76998 4.43529 2.21686 1.76998 4.4353 4.4353 2.21685 4.4353 2.21686 4.43529 0 ]xsh112.427 594.793 mo(\000\032)sh47.9968 604.816 mo(\0000\000R\000U\000U\000L\000V\000R\000Q\000\003\000\)\000X\000Q\000H\000U\000D\000O\000\003\000+\000R\000P\000H\000V\000\017\000\003\000\024\000\023\000\033\000\031\000\030\000\003\000+\000Z\000\\\000\003\000\032\000\025\000\003\000:\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003)[6.6513 4.4409 2.6613 2.6613 1.77558 3.99402 4.44089 4.4409 2.22246 4.87973 4.4409 4.4409 4.4409 2.6613 4.4409 1.77558 2.22246 5.76558 4.4409 6.6513 4.44089 3.99402 2.22247 2.22244 4.4409 4.4409 4.44089 4.4409 4.4409 2.22244 5.76559 5.76556 3.99402 2.22247 4.44089 4.44089 2.22247 7.53714 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 0 ]xsh256.701 604.816 mo(\000\021\000\003\000\021\000\003\000\021\000\003\000\026\000\030\000\034\000\020\000\027\000\023\000\026)[2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 4.44089 4.44089 4.44092 2.66129 4.44092 4.44089 0 ]xsh299.342 604.816 mo(\000\026)sh140.453 614.296 mo(\000\)\000D\000[\000\003\000\013\000\025\000\030\000\031\000\014\000\003\000\026\000\030\000\034\000\020\000\027\000\026\000\027)[4.87889 4.44003 3.99318 2.2216 2.66045 4.44003 4.44005 4.44005 2.66045 2.2216 4.44003 4.44005 4.44005 2.66045 4.44005 4.44003 0 ]xsh206.151 614.296 mo(\000\034)shLTQVUW+Arial-BoldMT [9.96 0 0 -9.96 0 0 ]msf48 625.234 mo(\000&\000+\000,\000/\000'\000\(\0005\0006\000%\0008\0005\000*\000\261)[7.1931 7.1931 2.77086 6.08746 7.1931 6.64537 7.1931 6.64537 7.19309 7.1931 7.19309 7.75085 0 ]xsh133.792 625.234 mo(\0007)sh139.166 625.234 mo(\000D\000O\000O\000D\000G\000H\000J)[5.53973 2.77086 2.77084 5.53973 6.08746 5.53973 0 ]xsh173.502 625.234 mo(\000D)sh181.852 625.234 mo(\000&)sh189.046 625.234 mo(\000R)sh197.938 625.234 mo(\000$)sh205.131 625.234 mo(\000&\000\022\000\025\000\030\000\031\000\003\000>\000\025\000\024)[7.1931 2.77084 5.53973 5.53973 5.53973 2.75688 3.31857 5.53973 0 ]xsh248.869 625.234 mo(\000@)shLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf255.071 625.234 mo(\000\026\000\030\000\023\000\027)[4.44408 4.44406 4.44406 0 ]xsh272.847 625.234 mo(\000\027)sh288.435 625.154 mo(\000$\000\003)[5.3299 0 ]xsh295.991 625.154 mo(\000\()sh56.9994 634.571 mo(\0003\000R\000S\000X\000O\000D\000W\000L\000R\000Q\000\003\000\027\000\017\000\034\000\025)[5.32114 4.4353 4.4353 4.4353 1.76998 4.43529 2.21686 1.76998 4.4353 4.4353 2.21685 4.4353 2.21686 4.43529 0 ]xsh112.429 634.571 mo(\000\032)sh47.998 643.931 mo(\000&\000X\000U\000W\000L\000V\000\003\000\011\000\003\0006\000R\000Q\000\003)[5.76716 4.44248 2.66288 2.22404 1.77716 3.99561 2.22404 5.32272 2.22404 5.32187 4.44247 4.44247 0 ]xsh95.0689 643.931 mo(\000\))sh102.166 643.931 mo(\000+\000P\000\003\000,\000Q\000F\000\013\000&\000K\000L\000O\000G\000H\000U\000V\000E\000X\000U)[5.76717 6.65288 2.22404 2.21601 4.44247 3.99561 2.66287 5.76717 4.44249 1.77716 1.77716 4.44247 4.44247 2.66289 4.01155 4.44247 4.44247 0 ]xsh170.998 643.931 mo(\000J\000\003\000&\000K\000S\000O\000\014\000\017\000\003\000\024\000\023\000\034\000\034\000\003\000\024\000V\000W\000\003\0006\000W\000\003\0001\000:\000\021\000\003\000\021\000\003\000\021\000\003)[4.44005 2.2216 5.76472 4.44005 4.44003 1.77473 2.66045 2.2216 2.2216 4.44005 4.44005 4.44003 4.44005 2.2216 4.44005 3.99316 2.2216 2.2216 5.32588 2.22162 2.22159 5.76474 9.4021 2.22159 2.22162 2.216 2.22159 2.21686 0 ]xsh272.297 643.931 mo(\000\021)sh276.665 643.931 mo(\000\025\000\027\000\030\000\020\000\027\000\026\000\031)[4.44003 4.44006 4.44003 2.66046 4.44003 4.44003 0 ]xsh305.966 643.931 mo(\000\024)sh140.462 653.355 mo(\000\)\000D\000[\000\003\000\013\000\025\000\030\000\031\000\014\000\003\000\025\000\027\000\030\000\020\000\032\000\023\000\031)[4.87889 4.44003 3.99316 2.22162 2.66045 4.44003 4.44005 4.44005 2.66045 2.2216 4.44005 4.44003 4.44005 2.66045 4.44005 4.44005 0 ]xsh206.16 653.355 mo(\000\025)sh48.006 662.772 mo(\0006\000X\000Q\000V)[5.32589 4.44004 4.44004 0 ]xsh66.2052 662.772 mo(\000H\000W\000\003)[4.44004 2.22161 0 ]xsh75.1459 662.772 mo(\0000\000H\000P\000R\000U\000L\000D\000O\000\003\000&\000K\000D\000S\000H\000O\000\003\000,\000Q\000F\000\017\000\003\000\026\000\026\000\030\000\030)[6.65044 4.44005 6.65044 4.44005 2.66045 1.77472 4.44005 1.77473 2.2216 5.76473 4.44004 4.44004 4.44005 4.44005 1.77472 2.2216 2.216 4.44005 3.99316 2.2216 2.22162 4.44003 4.44003 4.44006 0 ]xsh170.573 662.772 mo(\000\033)sh177.282 662.772 mo(\0008\0006\000\003\000+\000L\000J\000K\000Z\000D\000\\\000\003\000\025\000\033)[5.76558 5.32674 2.22246 5.76558 1.77557 4.4409 4.4409 5.76556 4.4409 3.99402 2.22246 4.4409 0 ]xsh232.324 662.772 mo(\000\023)sh239.103 662.772 mo(\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003)[2.22246 2.22246 2.22246 2.22246 2.22246 2.22246 2.22246 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 0 ]xsh270.217 662.772 mo(\000\021)sh274.55 662.772 mo(\000\026\000\032\000\033\000\020\000\032\000\024\000\034)[4.44089 4.44092 4.44089 2.66129 4.44092 4.44089 0 ]xsh303.857 662.772 mo(\000\034)sh140.47 672.132 mo(\000\)\000D\000[\000\003\000\013\000\025\000\030\000\031\000\014\000\003\000\026\000\032\000\033\000\020\000\032\000\024\000\034)[4.87889 4.44003 3.99318 2.2216 2.66045 4.44003 4.44005 4.44005 2.66045 2.2216 4.44003 4.44005 4.44005 2.66045 4.44005 4.44003 0 ]xsh206.168 672.132 mo(\000\026)shLTQVUW+Arial-BoldMT [9.96 0 0 -9.96 0 0 ]msf48 682.954 mo(\000&\000,\0007\0005\0002\0001\000\(\000/\000/\000\(\000\261\0000\000R\000E\000L\000O)[7.18808 2.76584 6.08244 7.18809 7.74584 7.18808 6.64035 6.08244 6.08244 6.64037 5.53471 8.29356 6.08244 6.08244 2.76584 0 ]xsh143.13 682.954 mo(\000H)sh151.484 682.954 mo(\000&)sh158.673 682.954 mo(\000R)sh167.51 682.954 mo(\000$)sh174.698 682.954 mo(\000&\000\022\000\025\000\030)[7.18808 2.76584 5.53471 0 ]xsh195.722 682.954 mo(\000\024)sh204.053 682.954 mo(\000>\000\032)[3.31357 0 ]xsh212.902 682.954 mo(\000@\000\003)[3.31357 0 ]xshLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf219.076 682.954 mo(\000\026\000\031\000\030\000\025)[4.44005 4.44003 4.44005 0 ]xsh236.836 682.954 mo(\000\025)sh294.663 682.874 mo(\000')sh57.0022 692.291 mo(\0003\000R\000S\000X\000O\000D\000W\000L\000R\000Q\000\003\000\026\000\017\000\031\000\030)[5.32114 4.4353 4.4353 4.4353 1.76998 4.43529 2.21686 1.76998 4.4353 4.4353 2.21685 4.4353 2.21686 4.43529 0 ]xsh112.431 692.291 mo(\000\034)sh48.0008 701.707 mo(\000\)\000U\000H\000H\000P\000D\000Q\000\003\000\)\000X\000Q\000H\000U\000D\000O\000\003\000+\000R\000P\000H\000\017\000\003\000\024\000\034\000\024\000\033\000\023\000\003\0001\000\003\000&\000H\000Q\000W\000H\000U\000\003\0006\000W)[4.88047 2.66203 4.44162 4.44163 6.65203 4.44163 4.44163 2.21928 4.88048 4.44162 4.44164 4.44162 2.66203 4.44162 1.77631 2.21844 5.76631 4.44163 6.65203 4.44162 2.22321 2.21927 4.44164 4.44164 4.44162 4.44162 4.44164 2.21843 5.76633 2.21928 5.76631 4.44162 4.44162 2.22321 4.44162 2.66202 2.21844 5.32748 0 ]xsh203.388 701.707 mo(\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003)[2.2216 2.2216 2.21686 2.2216 2.21686 2.2216 2.21686 2.2216 2.2216 0 ]xsh225.59 701.707 mo(\000\021)sh230.104 701.707 mo(\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003)[2.2216 2.2216 2.21686 2.2216 2.216 2.2216 2.2216 2.2216 2.21686 2.22162 2.21684 2.2216 2.21686 2.22162 2.216 2.22159 2.22162 0 ]xsh270.063 701.707 mo(\000\021)sh274.417 701.707 mo(\000\033\000\031\000\031\000\020\000\032\000\027\000\033)[4.44003 4.44006 4.44003 2.66046 4.44003 4.44003 0 ]xsh303.718 701.707 mo(\000\032)sh140.457 711.068 mo(\000\)\000D\000[\000\003\000\013\000\025\000\030\000\024\000\014\000\003\000\033\000\031\000\031\000\020\000\030\000\026\000\031)[4.87889 4.44003 3.99318 2.2216 2.66045 4.44003 4.44005 4.44005 2.66045 2.2216 4.44003 4.44005 4.44005 2.66045 4.44005 4.44003 0 ]xsh206.155 711.068 mo(\000\032)shLTQVUW+Arial-BoldMT [9.96 0 0 -9.96 0 0 ]msf48 721.894 mo(\000&\000/\000$\0001\0007\0002\0001\000\261\000&\000K\000L\000O\000W\000R\000Q\000\003\000&\000R\000\003\000$\000&\000\022\000\025\000\023\000\030\000\003\000>\000\024\000\032\000@\000\003)[7.22395 6.11831 7.22395 7.22395 6.11831 7.7817 7.22395 5.57059 7.22395 6.11831 2.80171 2.8017 3.34943 6.11832 6.1183 2.71706 7.22394 6.11832 2.71707 7.22394 7.22394 2.80173 5.57057 5.57059 5.57059 2.71614 3.34943 5.57059 5.57059 3.34943 0 ]xshLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf288.42 721.816 mo(\000$\000\003)[5.34109 0 ]xsh295.977 721.816 mo(\000\()sh57 731.232 mo(\0003\000R\000S\000X\000O\000D\000W\000L\000R\000Q\000\003\000\032\000\017\000\033\000\023)[5.32114 4.4353 4.4353 4.4353 1.76998 4.43529 2.21686 1.76998 4.4353 4.4353 2.21685 4.4353 2.21686 4.43529 0 ]xsh112.429 731.232 mo(\000\023)sh47.9986 740.649 mo(\000$\000J\000H\000H\000\003\000%\000U\000R\000W\000K\000H\000U\000\012\000V\000\003\000\)\000X\000Q\000H\000U\000D\000O\000\003\000+\000R\000P\000H\000\017\000\003\000\034\000\023\000\032\000\003\0006\000D\000P)[5.33076 4.44491 4.44492 4.44491 2.21844 5.33076 2.66531 4.44492 2.22647 4.44492 4.44492 2.66531 1.53217 3.99804 2.21928 4.88376 4.44492 4.44492 4.44492 2.66531 4.44492 1.7796 2.21844 5.76959 4.44492 6.6553 4.44492 2.22649 2.21843 4.44492 4.44492 4.44492 2.2193 5.33075 4.44492 0 ]xsh189.924 740.649 mo(\000D\000U\000L\000D\000\003\0005\000G\000\013\000\026\000\030\000\023\000\027\000\030)[4.44005 2.66045 1.77472 4.44005 2.2216 5.76472 4.44005 2.66045 4.44005 4.44003 4.44005 4.44005 0 ]xsh240.527 740.649 mo(\000\014)sh245.671 740.649 mo(\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003)[2.2216 2.2216 2.21686 2.2216 2.21602 2.22159 2.22162 2.22159 2.21686 2.22162 2.21686 0 ]xsh272.311 740.649 mo(\000\021)sh276.665 740.649 mo(\000\032\000\030\000\030\000\020\000\030\000\023\000\032)[4.44003 4.44006 4.44003 2.66046 4.44003 4.44003 0 ]xsh305.966 740.649 mo(\000\030)sh140.46 750.136 mo(\000\)\000D\000[\000\003\000\013\000\025\000\023\000\030\000\014\000\003\000\032\000\030\000\030\000\020\000\034\000\027\000\025)[4.87889 4.44003 3.99316 2.22162 2.66045 4.44003 4.44005 4.44005 2.66045 2.2216 4.44005 4.44003 4.44005 2.66045 4.44005 4.44005 0 ]xsh206.157 750.136 mo(\000\024)shLTQVUW+Arial-BoldMT [9.96 0 0 -9.96 0 0 ]msf312 67.054 mo(\000&\000/\000$\0001\0007\0002\0001\000\003\000&\0002\0001\0007\000\012\000'\000\003\000$\000&\000\022\000\025\000\023)[7.21011 6.10449 7.21011 7.21011 6.10449 7.76788 7.21011 2.75793 7.21011 7.76788 7.21011 6.10449 2.38953 7.21011 2.75793 7.21011 7.21014 2.78787 5.55673 0 ]xsh432.546 67.054 mo(\000\030)shLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf325.388 77.656 mo(\000\(\000O\000O\000L\000V\000R\000Q\000\003\0000\000H\000P\000R\000U\000L\000D\000O\000\003\000\)\000X\000Q\000H\000U\000D)[5.32431 1.77313 1.77316 1.77313 3.99158 4.43848 4.43845 2.22003 6.64886 4.43845 6.64886 4.43848 2.65884 1.77316 4.43845 1.77316 2.22 4.87732 4.43845 4.43848 4.43845 2.65887 0 ]xsh411.449 77.656 mo(\000O)sh415.522 77.656 mo(\000+\000R\000P)[5.76315 4.43845 0 ]xsh432.373 77.656 mo(\000H)sh439.079 77.656 mo(\000/\000/)[4.44089 0 ]xsh447.961 77.656 mo(\000&)sh453.726 77.656 mo(\000\017)sh458.231 77.656 mo(\000\024\000\032\000\023\000\034\000\003\000/\000D\000\\\000\003\000'\000D)[4.44089 4.44092 4.44089 4.44089 2.22247 4.44089 4.44089 3.99402 2.22247 5.76556 0 ]xsh503.522 77.656 mo(\000P)sh512.455 77.656 mo(\0005\000G\000\013\000\026\000\030\000\023\000\027\000\031\000\014)[5.76556 4.44092 2.66132 4.44086 4.44092 4.44092 4.44086 4.44092 0 ]xsh550.188 77.656 mo(\000\021\000\003)[2.22247 0 ]xsh385.852 86.9527 mo(\000\025\000\033\000\023\000\020\000\027\000\031\000\023\000\023\000\003)[4.44089 4.44092 4.44089 2.66129 4.44092 4.44089 4.44089 4.44092 0 ]xsh421.822 86.9527 mo(\000\)\000D\000[\000\003\000\013\000\025\000\023\000\030\000\014\000\003\000\025\000\033\000\023\000\020\000\027\000\031\000\023)[4.87729 4.43848 3.99158 2.22003 2.65884 4.43848 4.43845 4.43848 2.65887 2.22 4.43848 4.43845 4.43848 2.65884 4.43848 4.43845 0 ]xsh487.493 86.9527 mo(\000\025)sh311.998 96.6165 mo(\000+\000L\000O\000O\000V\000L\000G\000H\000\003\0000\000R\000U\000W\000X\000D\000U)[5.76556 1.7756 1.77557 1.77557 3.99402 1.77557 4.44089 4.44092 2.22244 6.65131 4.44089 2.66132 2.22244 4.44089 4.44092 0 ]xsh367.482 96.6165 mo(\000\\)sh370.749 96.6165 mo(\000\017\000\003\000\034\000\024\000\025\000\025\000Q\000G\000\003\000$\000Y\000H\000\003\0006\000\013\000\026\000\030\000\023\000\027\000\030)[2.22244 2.22247 4.44089 4.44092 6.72629 4.44089 4.44092 4.44089 2.22247 5.32672 3.99402 4.44089 2.22247 5.32672 2.66132 4.44089 4.44089 4.44092 4.44089 0 ]xsh452.524 96.6165 mo(\000\014)sh458.486 96.6165 mo(\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003)[2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 4.44965 2.22247 2.22244 2.22247 2.22247 2.22241 2.22247 2.22247 2.22247 2.22241 0 ]xsh529.609 96.6165 mo(\000\021)sh535.23 96.6165 mo(\000\025\000\033\000\023\000\020\000\025\000\024\000\033)[4.44092 4.44086 4.44092 2.66132 4.44086 4.44092 0 ]xsh564.537 96.6165 mo(\000\026)sh311.998 106.161 mo(\0000\000D\000U\000W\000L\000Q\000\003\000\)\000X\000Q\000H\000U\000D\000O\000\003\000+\000R\000P)[6.64728 4.43689 2.65726 2.21844 1.77158 4.43686 2.2847 4.8757 4.43689 4.43689 4.43686 2.65729 4.43689 1.77155 2.22406 5.76154 4.43689 0 ]xsh382.581 106.161 mo(\000H\000\003\000,\000Q\000F\000\017\000\003\000\024\000\026\000\023\000\023\000\003\000\027\000W\000K\000\003\000$\000Y\000H\000\003\0001\000\013\000\026\000\030\000\023\000\027\000\030)[4.43845 2.22003 2.22003 4.43845 3.99161 2.22 2.22003 4.43845 4.43848 4.43845 4.43848 2.22 4.43848 2.22003 4.43845 2.22003 5.32431 3.99158 4.43845 2.22003 5.76315 2.65884 4.43848 4.43845 4.43848 4.43845 0 ]xsh484.209 106.161 mo(\000\014)sh489.816 106.161 mo(\000\021\000\003\000\021\000\003\000\021\000\003)[2.22003 2.22 2.22003 2.22003 2.22 0 ]xsh503.136 106.161 mo(\000\021)sh507.627 106.161 mo(\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003)[2.22003 2.22003 2.22003 2.21997 2.22003 2.22003 2.22003 2.22003 2.22003 0 ]xsh529.828 106.161 mo(\000\021)sh535.453 106.161 mo(\000\032\000\030\000\030\000\020\000\026\000\030\000\030)[4.43848 4.43842 4.43848 2.65887 4.43848 4.43848 0 ]xsh564.743 106.161 mo(\000\023)sh404.462 115.641 mo(\000\)\000D\000[\000\003\000\013\000\025\000\023\000\030\000\014\000\003\000\032\000\030\000\030\000\020\000\026\000\030\000\030)[4.87729 4.43848 3.99158 2.22003 2.65884 4.43848 4.43845 4.43848 2.65887 2.22 4.43848 4.43845 4.43848 2.65884 4.43848 4.43845 0 ]xsh470.132 115.641 mo(\000\030)shLTQVUW+Arial-BoldMT [9.96 0 0 -9.96 0 0 ]msf312 126.574 mo(\000&\000/)[7.22394 0 ]xsh325.342 126.574 mo(\000$)sh331.728 126.574 mo(\000<\0007\0002\0001\000\261\000%\000D\000U\000E\000R\000X\000U\000\003\000&)[6.67621 6.11832 7.78171 7.22397 5.57056 7.22397 5.57059 3.90735 6.11829 6.11832 6.11832 3.90735 2.75687 0 ]xsh414.044 126.574 mo(\000R)sh422.944 126.574 mo(\000$\000&\000\022\000\026\000\026)[7.22394 7.22397 2.8017 5.57059 0 ]xsh451.335 126.574 mo(\000\027)sh459.677 126.574 mo(\000>\000\024)[3.34943 0 ]xsh468.597 126.574 mo(\000\023\000@\000\003)[5.57059 3.34943 0 ]xshLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf480.283 126.574 mo(\000\026\000\031\000\023\000\024)[4.44003 4.44006 4.44003 0 ]xsh498.043 126.574 mo(\000\031)sh560.043 126.494 mo(\000\()sh321.002 136.453 mo(\0003\000R\000S\000X\000O\000D\000W\000L\000R\000Q\000\003\000\024\000\017\000\027\000\032)[5.32745 4.44165 4.44162 4.44162 1.77631 4.44165 2.22318 1.77631 4.44162 4.44165 2.21927 4.44162 2.22321 4.44162 0 ]xsh376.523 136.453 mo(\000\030)sh312.001 146.476 mo[5.7663 1.77634 4.44162 3.99475 2.22318 4.44162 4.44165 2.22318 6.64728 4.44162 6.65204 4.44162 2.66205 1.77631 4.44162 1.77631 2.22318 4.87329 4.44165 4.44162 4.44162 2.66205 4.44162 1.77631 2.22318 5.76242 4.44162 6.65204 4.44162 2.22318 2.22321 4.43774 4.44159 2.22321 5.32272 2.22318 5.32117 4.44159 4.44165 4.44162 2.22318 5.32117 2.22318 2.22318 2.22321 2.21759 2.22318 2.21686 2.22318 2.216 2.22321 2.216 2.22321 2.21686 2.22314 2.21686 2.22321 2.21686 2.22321 2.216 2.22321 2.2168 2.22321 2.216 2.22321 2.21759 2.22314 2.21606 2.22314 4.43774 4.44165 4.44159 2.66205 4.44165 4.44159 0 ]xsh565.513 146.476 mo(\000\030)sh404.465 155.956 mo(\000\)\000D\000[\000\003\000\013\000\026\000\026\000\027\000\014\000\003\000\032\000\032\000\030\000\020\000\033\000\027\000\030)[4.87729 4.43848 3.99158 2.22003 2.65884 4.43848 4.43845 4.43848 2.65887 2.22 4.43848 4.43845 4.43848 2.65884 4.43848 4.43845 0 ]xsh470.135 155.956 mo(\000\025)sh312.001 165.492 mo(\000*\000O\000R\000Y\000H\000U\000\003\000\)\000X\000Q\000H\000U\000D\000O\000\003\000+\000R\000P\000H\000\017\000\003\000\032\000\025\000\003\0006\000\003\0000\000L\000G\000Z\000D\000\\)[6.21246 1.77557 4.44089 3.99402 4.44092 2.66129 2.22244 4.87976 4.44089 4.44089 4.44092 2.66129 4.44089 1.77557 2.22247 5.76556 4.44092 6.65131 4.44089 2.22244 2.22247 4.44089 4.44089 2.22247 5.32672 2.22247 6.65131 1.77557 4.44089 5.76559 4.44089 0 ]xsh438.515 165.492 mo(\000\003\0006\000W\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\032\000\032\000\030\000\020\000\026\000\027\000\023)[2.22244 5.32675 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22244 2.22247 2.22247 2.22244 2.22244 2.22247 2.22247 2.22247 2.22241 2.22247 2.22247 2.22241 2.22247 2.22247 2.22247 2.22241 2.22247 4.44092 4.44086 4.44092 2.66132 4.44086 4.44092 0 ]xsh564.268 165.492 mo(\000\026)shLTQVUW+Arial-BoldMT [9.96 0 0 -9.96 0 0 ]msf312 176.374 mo(\000&\000/\000\(\0009\000\(\000/\000$\0001\000'\000\261\000%\000O\000R\000X\000Q\000W\000\003\000&)[7.19507 6.08945 6.64734 6.64734 6.64737 6.08942 7.19507 7.19507 7.19507 5.54172 7.19507 2.77286 6.08942 6.08945 6.08945 3.32056 2.75793 0 ]xsh419.953 176.374 mo(\000R)sh428.791 176.374 mo(\000$)sh435.986 176.374 mo(\000&\000\022\000\025\000\023\000\030\000\003\000>\000\030)[7.19507 2.77283 5.54172 5.54172 5.54169 2.7569 3.32056 0 ]xsh474.198 176.374 mo(\000@)shLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf480.366 176.374 mo(\000\026\000\030\000\023\000\027)[4.44003 4.44006 4.44003 0 ]xsh498.126 176.374 mo(\000\034)sh558.658 176.294 mo(\000$)sh320.997 186.317 mo(\0003\000R\000S\000X\000O\000D\000W\000L\000R\000Q\000\003\000\024\000\017\000\025\000\027)[5.32745 4.44165 4.44162 4.44162 1.77631 4.44165 2.22318 1.77631 4.44162 4.44165 2.21927 4.44162 2.22321 4.44162 0 ]xsh376.518 186.317 mo(\000\024)sh311.996 196.34 mo(\000%\000O\000R\000X\000Q\000W\000\003\000&\000R\000X\000Q\000W\000\\\000\022\000&\000O\000H\000Y\000H\000O\000D\000Q\000G\000\003\000\)\000X\000Q\000H\000U\000D)[5.32745 1.77634 4.44162 4.44162 4.44162 2.22321 2.21927 5.76633 4.44162 4.44162 4.44165 2.22318 3.99475 2.22318 5.76633 1.77631 4.44162 3.99475 4.44162 1.77631 4.44165 4.44162 4.44162 2.21844 4.88046 4.44162 4.44165 4.44162 2.66202 0 ]xsh427.45 196.34 mo(\000O\000\003\000+\000R\000P\000H\000\017\000\003\000\024\000\032\000\033\000\033\000\030\000\003\0006\000W\000D\000W\000H\000\003\000+\000Z\000\\\000\003\000\024\000\031\000\023\000\003)[1.78192 2.22 5.77191 4.44724 6.65762 4.44724 2.22879 2.22003 4.44724 4.4472 4.44724 4.44724 4.44724 2.21927 5.33307 2.22879 4.44724 2.22879 4.44724 2.22003 5.77191 5.77191 4.00037 2.21924 4.44727 4.4472 4.4472 0 ]xsh311.996 206.363 mo(\000\031\000\025\000\030\000\020\000\031\000\023\000\023)[4.44724 4.44724 4.4472 2.66763 4.44724 4.44724 0 ]xsh341.347 206.363 mo(\000\030)sh402.928 216.386 mo(\000\)\000D\000[\000\003\000\013\000\025\000\023\000\030\000\014\000\003\000\031\000\025\000\030\000\020\000\031\000\023\000\023\000\032)[4.87729 4.43848 3.99158 2.22003 2.65884 4.43848 4.43845 4.43848 2.65887 2.22 4.43848 4.43845 4.43848 2.65884 4.43848 4.43845 4.43848 0 ]xshLTQVUX+ArialMT [12 0 0 -12 0 0 ]msf319.2 221.86 mo(\000%)shLTQVUX+ArialMT [12 0 0 -12 0 0 ]msf319.2 221.86 mo(\000%) false chp.24 lw
0 lc
0 lj
1 ml
[] 0 dsh
false sadj
@
LTQVUW+Arial-BoldMT [9.6 0 0 -9.6 0 0 ]msf327.204 221.86 mo(\000/\0002\0008\0001)[5.83096 7.43423 6.89661 0 ]xsh354.263 221.86 mo(\0007)shLTQVUX+ArialMT [12 0 0 -12 0 0 ]msf363.25 221.86 mo(\000&)shLTQVUX+ArialMT [12 0 0 -12 0 0 ]msf363.25 221.86 mo(\000&) false chp@
LTQVUW+Arial-BoldMT [9.6 0 0 -9.6 0 0 ]msf371.914 221.86 mo(\0002\0008\0001\0007\000<)[7.46982 6.93222 6.93225 5.86655 0 ]xshLTQVUX+ArialMT [12 0 0 -12 0 0 ]msf405.52 221.86 mo(\000\022)shLTQVUX+ArialMT [12 0 0 -12 0 0 ]msf405.52 221.86 mo(\000\022) false chp@
LTQVUX+ArialMT [12 0 0 -12 0 0 ]msf408.873 221.86 mo(\000&)shLTQVUX+ArialMT [12 0 0 -12 0 0 ]msf408.873 221.86 mo(\000&) false chp@
LTQVUW+Arial-BoldMT [9.6 0 0 -9.6 0 0 ]msf417.556 221.86 mo(\000/\000\(\0009\000\(\000/\000$\0001)[5.87988 6.41763 6.41763 6.4176 5.87988 6.94559 0 ]xsh462.46 221.86 mo(\000')shLTQVUX+ArialMT [12 0 0 -12 0 0 ]msf472.488 221.86 mo(\000\))shLTQVUX+ArialMT [12 0 0 -12 0 0 ]msf472.488 221.86 mo(\000\)) false chp@
LTQVUW+Arial-BoldMT [9.6 0 0 -9.6 0 0 ]msf479.82 221.86 mo(\0008\0001\000\(\0005\000$)[6.94556 6.94556 6.41763 6.94556 0 ]xsh514.02 221.86 mo(\000/)shLTQVUX+ArialMT [12 0 0 -12 0 0 ]msf523.042 221.86 mo(\000+)shLTQVUX+ArialMT [12 0 0 -12 0 0 ]msf523.042 221.86 mo(\000+) false chp@
LTQVUW+Arial-BoldMT [9.6 0 0 -9.6 0 0 ]msf531.706 221.86 mo(\0002\0000)[7.48315 0 ]xsh547.2 221.86 mo(\000\()sh%ADOBeginSubsetFont: FDAAAA+Arial-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/FDAAAA+Arial-ItalicMT 14 GetGlyphDirectory47 <001C60D8A8C9B7EF3224FFDC7345EA810AE146058DC2D849C808A996EE762A48> |50 <001C60D8A8C9B6FF86F5FDA6BFE6D1D12980B1AF5629CE6A78B544255E83C6AE6A6BAB1A2408766934986FF3AD88147E045EB9574375E413C3E26A4EBD22F03C9BFAD98E5A94020B1D9F2D96B6C2EEB6F4CBEFB10164BA65BCA816BEC71CCE3FB649D1B33A4B2AB8A93ACC40B49D2F728035823588E7DD32F9A469F9AF70F69C7D5842846FC876C80AE9DEF81A5436592F131AD9CB6BEE7ABF1CA1CFDCF85A41B4CC391E8CDEE8243DE4F14E3720D6ADB893> |38 <001C60D8A8C9B6079F6D11256B50859E36166339BDD4C84BD7AB5DD2A6825D56BAEC6551031BACFF61631175F86474B90BAD68FAEFDA04BADC8F4BA58DAF1D64DB39D1328F09F3FF8154339F1FB80218F9946C8864759237FBDCE02E2CF320463EF19044B283D063FE731719B26D1737FD311A6C9FA7D29FE9B20CDDF238F0B1D3F86A9668BFA6> |60 <001C60D8A8C9B64EDFFB70687AC8F7D4DCA87058F3096EE320135CC0749323C85D9DA9F32003BAA4903FC2712888AEAF2D4A37E396A3D31F236948FF> |58 <001C60D8A8C9B5D6EF42151D8055B5BDAF2C3AEC12A5F4C21E0A43E58F13BB3026AA1C793E6D14E4D373B64A732E37185D9D532CAE1F573E5AAA67494B5139ED4ABC3821BB401505D126FDA868CD214555AD561F1E98232B151270365CDBEFE14F6E2B78BA30F6CAB4B329D2C2EA66951DA918FACBC271C9F3> |49 <001C60D8A8C9B6079F62B62AB921CF8C3D5A04923B7440D1C2868BDA0E1DB2378D3EF34E63F079F7349E955065AD5A1DFEE3C33B2DE9380A8CEBB18569E3C1A7F4BE6B530E26969F02FA3EF8A02751BE005359> |40 <001C60D8A8C9B64EDFFB999B0812415E22C2845C0FD02D1FDC120500A2BADC0A3408D5EB6DB9890BCDA0D07EBC6B3964AC5494> |9 <001C60D8A8C9B64EDFFBADD48F0419E64089F17AA6062AE85EDC09E2C726D1369CE22643818AA71752430C923A2CA1F236225F49E40BBE1E89D627D5F3B6117EFB8AA8DA5AABDE51FA601895510AD2FEFD31078969A5466506EB88F7586D4E0261C590A20ED275772451EE9A0CD9D214095A26B941A8682610AD0B2D40FDCC1664D21FC10D7640CAA89EA5C705AB4FA9B4D630D5C6A028C9CA7122215B8F25B4DBD46B7957DD3118E9D16F731D57EC27C8F12123F18EB77AFEC38F02782B27016A8A32392CB7E0BDF6D2FD143E030F98E1DFA6377BFCEB1FDD6D2730381C050E6054A0CC52FE40B7D9BB8C5215AF59F15EBAFC3C2879A3CEB9BEFAFF9DF09F651FC86DAE440818D8BE5A4F5EF202> |3 <001C60D8A8C9B854D00D> |48 <001C60D8A8C9B6B41CBB5597CD19517C1FFA5E98C043628FAD877E5CB71ABA6294F5F3CC66BCE545E0A9BE2559EEDCDC4415D5D407394028F5092DBF55F28030CEDF2AE27DC76AC9B85116BB0D15352700AAA37EE8B922FF7E9A3BF44CB7C1A0298B71E4B854> |44 <001C60D8A8C9B854D0F41E346BF2D6FC684A194A484A89E5C740> |51 <001C60D8A8C9B64EDFF4CBB3A6E63BC53B8BFC41541879567BD02C7A2BAE57C3C66510CDB2951F9C56305A9DAB4C5A63FCE59B95FABF6DB88A492F285B446F662E52D5DE7139A4A30CF3F375DD2EBA590A4F7CFB47317F2B8720AC79602FCB4F604A82678180660145ED4DAB80B74DE4785CE0DEB4822C2A9509BFFF411C1067224117577FD5A4F46B3D30> |53 <001C60D8A8C9B6079F6289E4FB616574B85DB34D3661D0AF579BEE163007634803F6CFD5CCB737C43FA305FAB5E9BE5E6B66B0724BCAD78829B28760BDD98EB12B7CC2E75D6337C5ED008EB1E288210A9D4A6FE0D3D9559F0DA87CC9A95D3BBD0EC73E0A9799C9BD7FAC7810AB389833F5838121BAB4EF5F099D0913B853CAB0AD7FDA5654B8D6013426E3B10FDB9866A34D5CB8B8E9D67C40AF5C30B02CB8B8FC1685C83DD274FBFB34> |55 <001C60D8A8C9B7D8BE16FF37E66C2BE561CE3188E0E64CE2BE60A332E139FA3FFE4B6E0B82DC3C> |!endend end
%ADOEndSubsetFont
LTQVUZ+Arial-ItalicMT [7.98 0 0 -7.98 0 0 ]msf413.077 229.33 mo(\000/)shLTQVUZ+Arial-ItalicMT [6.36 0 0 -6.36 0 0 ]msf417.514 229.33 mo(\0002\000&\000$\000/\000/)[4.97098 4.61484 4.26505 3.55908 0 ]xsh438.483 229.33 mo(\000<)shLTQVUZ+Arial-ItalicMT [7.98 0 0 -7.98 0 0 ]msf444.808 229.33 mo(\0002)shLTQVUZ+Arial-ItalicMT [6.36 0 0 -6.36 0 0 ]msf451.002 229.33 mo(\000:\0001\000\()[6.04965 4.63773 0 ]xsh465.977 229.33 mo(\000')shLTQVUZ+Arial-ItalicMT [7.98 0 0 -7.98 0 0 ]msf472.759 229.33 mo(\000\011\000\003\000\))[5.28998 2.26227 0 ]xshLTQVUZ+Arial-ItalicMT [6.36 0 0 -6.36 0 0 ]msf485.153 229.33 mo(\000$\0000\000,\000/)[4.22247 5.27814 1.74838 0 ]xsh499.919 229.33 mo(\000<)shLTQVUZ+Arial-ItalicMT [7.98 0 0 -7.98 0 0 ]msf506.236 229.33 mo(\0002)shLTQVUZ+Arial-ItalicMT [6.36 0 0 -6.36 0 0 ]msf512.429 229.33 mo(\0003\000\(\0005\000$\0007\000\(\000')[4.2771 4.2771 4.62689 4.2771 3.92084 4.2771 0 ]xshLTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf315.891 238.209 mo(\000\025)shLTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf315.891 238.209 mo(\000\025) false chp.259 lw
@
LTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf323.123 238.209 mo(\000\023)shLTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf323.123 238.209 mo(\000\023) false chp@
LTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf330.354 238.209 mo(\000\030)shLTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf330.354 238.209 mo(\000\030) false chp@
LTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf337.586 238.209 mo(\000\020)shLTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf337.586 238.209 mo(\000\020) false chp@
LTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf341.927 238.209 mo(\000\031)shLTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf341.927 238.209 mo(\000\031) false chp@
LTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf349.159 238.209 mo(\000\025)shLTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf349.159 238.209 mo(\000\025) false chp@
LTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf356.391 238.209 mo(\000\030)shLTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf356.391 238.209 mo(\000\030) false chp@
LTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf363.622 238.209 mo(\000\020)shLTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf363.622 238.209 mo(\000\020) false chp@
LTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf367.964 238.209 mo(\000\031)shLTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf367.964 238.209 mo(\000\031) false chp@
LTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf375.196 238.209 mo(\000\023)shLTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf375.196 238.209 mo(\000\023) false chp@
LTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf382.427 238.209 mo(\000\023)shLTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf382.427 238.209 mo(\000\023) false chp@
LTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf389.659 238.209 mo(\000\030)shLTQVUX+ArialMT [12.96 0 0 -12.96 0 0 ]msf389.659 238.209 mo(\000\030) false chp@
%ADOBeginSubsetFont: VCAAAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/VCAAAA+ArialMT 4 GetGlyphDirectory55 <001C60D8A8C9B7D8BE16D2C1CA7ED2E06F707C0E9530AE37D06FF7501A595D3927> |60 <001C60D8A8C9B64EDFFB70684E072B8DF628E28D14904BBCFEE7A51F476B6F96EC861657AB39D7A0FFD2C8F278DA1F84C35526773AA865D18FF930CB> |135 <001C60D8A8C9B80CC2AFFCE3EA26AA1CB6C4ACE6D4F0D4A37DF7C2E3678AF2C2569EFCF2A66CD2E0220517CEF5F9B4DB0B64DE7299555ADDB648AA20CC3CA5297EE6A8584BD110> |57 <001C60D8A8C9B64EDFFB759009DDECF50F0319B844741E3CEB2C0ABDDB89E7563FC0955B866D61D9CC736D3C346A5623E20C1E4D> |!endend end
%ADOEndSubsetFont
LTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf405.231 236.597 mo(\000\024\000\032\000\033\000\033)[4.47522 4.47525 4.47522 0 ]xsh423.132 236.597 mo(\000\030)sh429.809 236.597 mo(\0006)shLTQVUX+ArialMT [6.36 0 0 -6.36 0 0 ]msf435.168 236.597 mo(\0007\000$\0007)[3.90378 4.26001 0 ]xsh447.235 236.597 mo(\000\()shLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf453.736 236.597 mo(\000+)shLTQVUX+ArialMT [6.36 0 0 -6.36 0 0 ]msf459.543 236.597 mo(\000:)sh465.583 236.597 mo(\000<)shLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf472.049 236.597 mo(\000\024\000\031\000\023\000\003)[4.47522 4.47525 4.47522 0 ]xsh489.948 236.597 mo(\000\207)sh497.17 236.597 mo(\000&)shLTQVUX+ArialMT [6.36 0 0 -6.36 0 0 ]msf502.965 236.597 mo(\000/\000\(\0009\000\(\000/\000$\0001\000')[3.54636 4.25235 4.25238 4.25232 3.54639 4.25232 4.60211 0 ]xshLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf536.269 236.597 mo(\000\017\000\003\000$\000/\000\003)[2.25275 2.20251 5.35706 4.47119 0 ]xsh466.716 243.891 mo(\000\026\000\030\000\023\000\027\000\034\000\003)[4.47122 4.47122 4.47119 4.47122 4.47122 0 ]xsh397.72 251.184 mo(\000Z\000Z\000Z\000\021\000E\000O\000R\000X\000Q\000W\000F\000R\000X\000Q\000W\000\\\000F\000O\000H\000Y\000H\000O\000D\000Q\000G\000I\000X\000Q\000H\000U\000D\000O\000K\000R\000P\000H\000\021\000F\000R\000P)[5.7663 5.76633 5.7663 2.22321 4.44162 1.77631 4.44162 4.44162 4.44165 2.22318 3.99475 4.44162 4.44165 4.44162 2.22318 3.99475 3.99475 1.77631 4.44165 3.99475 4.44159 1.77634 4.44162 4.44162 4.44162 2.22321 4.44162 4.44162 4.44165 2.66199 4.44165 1.77631 4.44165 4.44159 6.65204 4.44165 2.22321 3.99475 4.44159 0 ]xsh%ADOBeginSubsetFont: QCAAAA+Arial-BoldMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/QCAAAA+Arial-BoldMT 3 GetGlyphDirectory90 <001C60D8A8C9B6FF86F52F235E29DFABF84E30A9E11A138D00DABF3BDDD9B3E7FC257212EAD90E7CB4DBFFD0700E703890A66311DAD24CF380C3C480> |11 <001C60D8A8C9B81F2C3A38FE2380A125A3D62A2B0F4BC8C0A2696756F8DA43B0889958C87C94E22D1A3213B46963E9329DE74757B6B3A525736D1B5EF52A1F5DA4AB3530EF8C585FE2B823D2C3202FD1D141> |12 <001C60D8A8C9B81F2C3AAF50C85EC663E0CCB811D457CFC013664AB412D10018FBA420C16D8F84D8F6E7BA7121948DF6CD1C73671ADC1920E6D6FF996F7B703AB39EFF7B605E03487B46179AEA4BBEE9CF34960D70C11D2E> |!endend end
%ADOEndSubsetFont
LTQVUW+Arial-BoldMT [9.96 0 0 -9.96 0 0 ]msf312 258.694 mo(\000&\000/\000,\0002\000\261\000%\000D\000U\000E\000R\000X\000U\000\003\000&)[7.19812 6.09247 2.77588 7.75586 5.54474 7.19812 5.54474 3.88153 6.09247 6.09247 6.09247 3.88153 2.75793 0 ]xsh390.106 258.694 mo(\000R)sh398.941 258.694 mo(\000$)sh406.139 258.694 mo(\000&\000\022\000\026\000\026\000\027\000\003\000>\000\024\000\023)[7.19812 2.77585 5.54477 5.54474 5.54474 2.7569 3.32358 5.54474 0 ]xsh449.917 258.694 mo(\000@)shLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf456.084 258.694 mo(\000\026\000\031\000\023\000\024)[4.44003 4.44006 4.44003 0 ]xsh473.844 258.694 mo(\000\032)sh560.039 258.614 mo(\000\()sh320.999 268.637 mo(\0003\000R\000S\000X\000O\000D\000W\000L\000R\000Q\000\003\000\025\000\017\000\025\000\023)[5.32745 4.44165 4.44162 4.44162 1.77631 4.44165 2.22318 1.77631 4.44162 4.44165 2.21927 4.44162 2.22321 4.44162 0 ]xsh376.519 268.637 mo(\000\031)sh311.997 278.66 mo(\000.\000H\000D\000K\000H)[5.32431 4.43845 4.43848 4.43845 0 ]xsh335.075 278.66 mo(\000\\)sh341.348 278.66 mo(\000\)\000X\000Q\000H\000U\000D\000O\000\003\000+\000R\000P\000H\000\017\000\003\000\024\000\027\000\024\000\024\000\003\000%\000O)[4.87729 4.43848 4.43845 4.43848 2.65887 4.43845 1.77313 2.22003 5.76315 4.43845 6.64886 4.43848 2.22 2.22003 4.43848 4.43845 4.43845 4.43848 2.22003 5.32428 0 ]xsh423.431 278.66 mo(\000X\000H\000\003\0006\000S\000U\000L\000Q\000J\000\003\0006\000W\000\003)[4.43774 4.43771 2.2193 5.32358 4.43771 2.65814 1.7724 4.43774 4.43771 2.2193 5.32358 2.2193 0 ]xsh471.126 278.66 mo(\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\026\000\034\000\032\000\020\000\027\000\025\000\027)[2.2193 2.21927 2.2193 2.2193 2.2193 2.21927 2.2193 2.2193 2.2193 2.21927 2.2193 2.2193 2.2193 2.21927 2.2193 2.2193 2.2193 2.27832 2.2193 2.2193 2.2193 2.2193 2.2193 2.21924 2.2193 2.2193 2.2193 2.2193 2.2193 3.41779 4.43774 4.43774 4.43774 2.65814 4.43768 4.43774 0 ]xsh568.245 278.66 mo(\000\025)sh404.461 288.14 mo(\000\)\000D\000[\000\003\000\013\000\026\000\026\000\027\000\014\000\003\000\025\000\025\000\025\000\020\000\033\000\027\000\027)[4.87729 4.43848 3.99158 2.22003 2.65884 4.43848 4.43845 4.43848 2.65887 2.22 4.43848 4.43845 4.43848 2.65884 4.43848 4.43845 0 ]xsh470.132 288.14 mo(\000\034)shLTQVUW+Arial-BoldMT [9.96 0 0 -9.96 0 0 ]msf312 299.074 mo(\000&\0002\000/\000/\000,\0001\0006\0009\000,\000/\000/\000\(\000\261\000')[7.20007 7.75787 6.09445 6.09445 2.77783 7.20007 6.65237 6.65237 2.77783 6.09445 6.09445 6.65234 5.54675 0 ]xsh396.795 299.074 mo(\000H)sh405.146 299.074 mo(\000.\000D\000O)[7.20007 5.54675 0 ]xsh420.671 299.074 mo(\000E)sh429.558 299.074 mo(\000&\000R\000\003\000$\000&\000\022\000\025\000\030\000\031\000\003\000>\000\024\000\026\000\017\000\024\000\027)[7.20007 6.09445 2.7569 7.20007 7.2001 2.77783 5.54672 5.54672 5.54672 2.75793 3.32559 5.54672 5.54672 2.77783 5.54672 0 ]xsh510.476 299.074 mo(\000@)shLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf516.727 299.074 mo(\000\026\000\030\000\034\000\031)[4.44409 4.44403 4.44409 0 ]xsh534.503 299.074 mo(\000\024)sh552.015 298.994 mo(\000$\000\003)[5.3299 0 ]xsh559.57 298.994 mo(\000%)sh321.002 308.953 mo(\0003\000R\000S\000X\000O\000D\000W\000L\000R\000Q\000\003\000\024\000\017\000\031\000\027)[5.32745 4.44165 4.44162 4.44162 1.77631 4.44165 2.22318 1.77631 4.44162 4.44165 2.21927 4.44162 2.22321 4.44162 0 ]xsh376.522 308.953 mo(\000\027)sh312 318.976 mo(\000&\000R\000O\000O\000L\000Q\000V\000Y\000L\000O\000O\000H\000\003\000\)\000X)[5.76474 4.44003 1.77472 1.77472 1.77475 4.44003 3.99316 3.99316 1.77472 1.77475 1.77472 4.44003 2.22162 4.87888 0 ]xsh361.261 318.976 mo(\000Q\000H\000U\000D\000O\000\003\000+\000R\000P\000H\000\017\000\003\000\024\000\023\000\034\000\003\0006\000\003\0009\000D\000O\000O\000H\000\\\000\003\000$\000Y)[4.44247 4.44247 2.6629 4.44247 1.77716 2.2193 5.76715 4.44247 6.65289 4.44247 2.22403 2.21844 4.44247 4.44247 4.4425 2.21841 5.32834 2.2193 5.32831 4.44247 1.77716 1.77716 4.44247 3.99561 2.21844 5.32831 0 ]xsh463.393 318.976 mo(\000H)sh472.215 318.976 mo(\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003)[2.22403 2.21844 2.22406 2.21841 2.22406 2.21927 2.22406 2.21844 2.22403 2.21844 2.22403 2.2193 2.22403 2.21844 2.22403 0 ]xsh507.761 318.976 mo(\000\021)sh512.25 318.976 mo(\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003)[2.22406 2.21844 2.224 2.2193 2.22406 2.21844 2.224 2.21844 2.22406 0 ]xsh534.469 318.976 mo(\000\021)sh540.1 318.976 mo(\000\030\000\025\000\027\000\020\000\025\000\024\000\026)[4.4425 4.44244 4.4425 2.66284 4.4425 4.4425 0 ]xsh569.418 318.976 mo(\000\024)sh404.456 328.456 mo(\000\)\000D\000[\000\003\000\013\000\025\000\030\000\031\000\014\000\003\000\030\000\025\000\027\000\020\000\027\000\023\000\024)[4.87729 4.43848 3.99158 2.22003 2.65884 4.43848 4.43845 4.43848 2.65887 2.22 4.43848 4.43845 4.43848 2.65884 4.43848 4.43845 0 ]xsh470.127 328.456 mo(\000\027)shLTQVUW+Arial-BoldMT [9.96 0 0 -9.96 0 0 ]msf312 339.394 mo(\000&\0002\000/\0008\0000\000%\000,\000$\0001\000$\000\261\0006\000K\000H\000O\000E\000\\\000\003\000&)[7.215 7.77274 6.10934 7.21497 8.32047 7.215 2.79272 7.215 7.21497 7.215 5.56161 6.66724 6.10938 5.56158 2.79276 6.10934 5.56161 2.75687 0 ]xsh428.621 339.394 mo(\000R)sh437.456 339.394 mo(\000$)sh444.671 339.394 mo(\000&\000\022\000\025\000\023)[7.215 2.79272 5.56161 0 ]xsh465.802 339.394 mo(\000\030)sh474.149 339.394 mo(\000>\000\030\000@\000\003)[3.34045 5.56161 3.34048 0 ]xshLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf489.246 339.394 mo(\000\026\000\030\000\023\000\030)[4.44003 4.44006 4.44003 0 ]xsh507.006 339.394 mo(\000\024)sh558.664 339.314 mo(\000$)sh321.004 349.337 mo(\0003\000R\000S\000X\000O\000D\000W\000L\000R\000Q\000\003\000\026\000\017\000\026\000\024)[5.32745 4.44165 4.44162 4.44162 1.77631 4.44165 2.22318 1.77631 4.44162 4.44165 2.21927 4.44162 2.22321 4.44162 0 ]xsh376.525 349.337 mo(\000\031)sh312.002 359.296 mo[5.32675 4.44089 1.77557 2.22244 4.44092 4.44089 2.22247 4.87326 4.44092 4.44089 4.44089 2.66132 4.44089 1.77557 2.21759 5.76559 4.44089 6.65128 4.44092 2.22244 2.22247 4.44089 4.44092 4.44089 2.22244 5.76559 5.76556 3.99402 2.22244 4.44092 4.44089 2.22247 5.32272 2.22244 2.216 2.22244 2.21759 2.22247 2.21686 2.22247 2.216 2.22244 2.21683 2.22247 2.21686 2.22247 2.216 2.22244 2.21759 2.22244 2.21686 2.22247 2.216 2.22247 2.21686 2.22244 2.216 2.22244 2.21759 2.22247 2.21686 2.22244 2.216 2.22244 2.21686 2.22247 2.216 2.22247 2.21759 2.22247 2.2168 2.22247 2.21686 2.22247 4.44086 4.44092 4.44092 2.66125 4.44092 4.44092 0 ]xsh561.938 359.296 mo(\000\034)sh404.466 368.832 mo(\000\)\000D\000[\000\003\000\013\000\025\000\023\000\030\000\014\000\003\000\031\000\031\000\034\000\020\000\025\000\023\000\024)[4.87729 4.43848 3.99158 2.22003 2.65884 4.43848 4.43845 4.43848 2.65887 2.22 4.43848 4.43845 4.43848 2.65884 4.43848 4.43845 0 ]xsh470.137 368.832 mo(\000\023)shLTQVUW+Arial-BoldMT [9.96 0 0 -9.96 0 0 ]msf312 379.714 mo(\000&\0005\0002\0006\0006\0009\000,\000/\000/\000\(\000\261\000'\000H\000\003\000.\000D\000O\000E\000\003\000&)[7.1922 7.19217 7.74994 6.64447 6.64444 6.64447 2.76996 6.08655 6.08655 6.64444 5.53882 7.1922 5.53882 2.81369 7.1922 5.53882 2.76996 6.08655 2.81873 0 ]xsh428.337 379.714 mo(\000R)sh437.231 379.714 mo(\000$\000&\000\022\000\025\000\030\000\031\000\003\000>\000\024\000\026)[7.1922 7.19217 2.76993 5.53885 5.53882 5.53882 2.81873 3.31766 5.53882 0 ]xsh488.215 379.714 mo(\000@)shLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf494.426 379.714 mo(\000\026\000\030\000\034\000\031)[4.44003 4.44006 4.44003 0 ]xsh512.186 379.714 mo(\000\025)sh558.657 379.634 mo(\000$)sh320.997 389.657 mo(\0003\000R\000S\000X\000O\000D\000W\000L\000R\000Q\000\003\000\024\000\017\000\027\000\026)[5.32745 4.44165 4.44162 4.44162 1.77631 4.44165 2.22318 1.77631 4.44162 4.44165 2.21927 4.44162 2.22321 4.44162 0 ]xsh376.518 389.657 mo(\000\024)sh311.995 399.68 mo(\000&\000U\000R\000V\000V\000Y\000L\000O\000O\000H\000\003\0000\000H\000P\000R\000U\000L\000D\000O\000\003\000&\000K\000D\000S\000H\000O\000\017\000\003\000\024\000\026\000\033\000\024\000\025\000\003\000$\000/\000\003\000+\000L\000J\000K\000Z\000D\000\\\000\003\000\031\000\033\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\030\000\025\000\033\000\020\000\025\000\030\000\023)[5.7663 2.66205 4.44162 3.99475 3.99475 3.99475 1.77631 1.77631 1.77631 4.44162 2.22321 6.64728 4.44162 6.65204 4.44162 2.66202 1.77634 4.44162 1.77631 2.22321 5.76239 4.44162 4.44162 4.44165 4.44162 1.77631 2.22318 2.22321 4.43774 4.44162 4.44162 4.44162 4.44162 2.22321 5.32187 4.44162 2.22321 5.76239 1.77631 4.44165 4.44162 5.76633 4.44159 3.99475 2.22321 4.44162 4.44162 2.22321 2.216 2.22318 2.21686 2.22318 2.216 2.22321 2.216 2.22321 2.21759 2.22314 2.21686 2.22321 2.216 2.22321 2.216 2.22314 2.21765 2.22314 4.43774 4.44165 4.44159 2.66205 4.44165 4.44159 0 ]xsh563.293 399.68 mo(\000\023)sh404.459 409.16 mo(\000\)\000D\000[\000\003\000\013\000\025\000\030\000\031\000\014\000\003\000\030\000\025\000\033\000\020\000\025\000\030\000\023)[4.87729 4.43848 3.99158 2.22003 2.65884 4.43848 4.43845 4.43848 2.65887 2.22 4.43848 4.43845 4.43848 2.65884 4.43848 4.43845 0 ]xsh470.13 409.16 mo(\000\025)shLTQVUW+Arial-BoldMT [9.96 0 0 -9.96 0 0 ]msf312 420.034 mo(\000&\0008\000/\000/\0000\000$\0001\000\261\000&\000X\000O\000O\000P\000D\000Q\000\003\000&\000R\000\003\000$\000&\000\022\000\025\000\030\000\031\000\003\000>\000\033\000@\000\003)[7.22791 7.22791 6.12225 6.12225 8.3334 7.22787 7.22791 5.57455 7.22787 6.12228 2.80563 2.80566 8.8913 5.57455 6.12225 2.75793 7.22791 6.12225 2.75687 7.22791 7.22791 2.80566 5.57452 5.57452 5.57455 2.75885 3.35336 5.57455 3.35339 0 ]xshLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf552 419.956 mo(\000$\000\003)[5.34113 0 ]xsh559.557 419.956 mo(\000%)sh320.995 429.979 mo(\0003\000R\000S\000X\000O\000D\000W\000L\000R\000Q\000\003\000\024\000\026\000\017\000\034\000\034)[5.32745 4.44165 4.44162 4.44162 1.77631 4.44162 2.22321 1.77631 4.44162 4.44162 2.2193 4.44165 4.44162 2.22318 4.44162 0 ]xsh380.958 429.979 mo(\000\030)sh311.994 440.002 mo(\000&\000X\000O\000O\000P\000D\000Q\000\003\000\)\000X\000Q\000H\000U\000D)[5.76474 4.44003 1.77472 1.77472 6.65045 4.44006 4.44003 2.22162 4.87411 4.44006 4.44003 4.44003 2.66046 0 ]xsh368.795 440.002 mo(\000O)sh372.857 440.002 mo(\000+\000R\000P\000H\000\017\000\003\000\027\000\031)[5.76474 4.44003 6.65045 4.44003 2.22162 2.22159 4.44006 0 ]xsh407.476 440.002 mo(\000\024)sh414.193 440.002 mo(\0008)sh419.958 440.002 mo(\0006)sh427.528 440.002 mo(\000+\000L\000J\000K\000Z)[5.76474 1.77472 4.44003 4.44006 0 ]xsh449.712 440.002 mo(\000D\000\\\000\003\000\025\000\032\000\033\000\003\000\(\000\013\000\026\000\030\000\023\000\030\000\030)[4.43845 3.99161 2.22 4.43848 4.43845 4.43848 2.22 5.32431 2.65887 4.43845 4.43848 4.43845 4.43848 0 ]xsh506.073 440.002 mo(\000\014)sh511.158 440.002 mo(\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003)[2.22003 2.22003 2.22003 2.21997 2.22003 2.22003 2.22003 2.22003 2.22003 0 ]xsh533.359 440.002 mo(\000\021)sh538.985 440.002 mo(\000\032\000\026\000\027\000\020\000\026\000\024\000\027)[4.43848 4.43842 4.43848 2.65887 4.43848 4.43848 0 ]xsh568.274 440.002 mo(\000\027)sh403.819 449.482 mo(\000\)\000D\000[\000\003\000\013\000\025\000\030\000\031\000\014\000\003\000\032\000\026\000\027\000\020\000\032\000\033\000\025)[4.87729 4.43848 3.99158 2.22003 2.65884 4.43848 4.43845 4.43848 2.65887 2.22 4.43848 4.43845 4.43848 2.65884 4.43848 4.43845 0 ]xsh469.49 449.482 mo(\000\027)sh327.77 458.994 mo(\000&\000X\000O\000O\000P\000D\000Q\000\003\000+\000H\000U\000L\000W\000D\000J\000H\000\003)[5.76715 4.4425 1.77716 1.77716 6.65286 4.44247 4.4425 2.22 5.76718 4.44247 2.66287 1.77716 2.22403 4.4425 4.44247 4.44247 0 ]xsh391.722 458.994 mo(\000\))sh398.848 458.994 mo(\000+\000P\000\003\000\011\000\003\000&\000U\000P\000\017\000\003\000\025\000\030\000\030\000\003\000&\000R\000X\000Q\000W\000\\\000\003\0005\000G\000\003\000\024\000\027\000\026\000\030\000\013\000\026)[5.76874 6.65448 2.22562 5.32272 2.22562 5.76242 2.66446 6.65445 2.22565 2.21759 4.44406 4.44406 4.44406 2.22562 5.76242 4.44406 4.44406 4.44406 2.22562 3.99719 2.22562 5.76242 4.44406 2.22562 4.43771 4.44409 4.44403 4.44409 2.66443 0 ]xsh520.981 458.994 mo(\000\030\000\023\000\030\000\033\000\014\000\003)[4.44409 4.44403 4.44409 4.44403 2.66449 0 ]xsh543.342 458.994 mo(\000\021\000\003\000\021\000\003)[2.22565 2.22559 2.22565 0 ]xsh385.824 468.506 mo(\000\032\000\026\000\027\000\020\000\023\000\025\000\023\000\033\000\003\000\))[4.44406 4.44406 4.44406 2.66446 4.44406 4.44406 4.44406 4.44406 2.22565 0 ]xsh426.698 468.506 mo(\000D\000[\000\003\000\013\000\025\000\030\000\031\000\014\000\003\000\032\000\026\000\027\000\020\000\023\000\024\000\024)[4.43845 3.99161 2.22 2.65887 4.43848 4.43845 4.43845 2.65887 2.22003 4.43845 4.43848 4.43845 2.65887 4.43845 4.43848 0 ]xsh487.491 468.506 mo(\000\034)sh311.994 477.987 mo(\0000\000R\000V)[6.64886 4.43845 0 ]xsh327.072 477.987 mo(\000V)sh333.3 477.987 mo(\0006\000H\000U\000Y\000L\000F\000H\000\003)[5.32431 4.43845 2.65887 3.99158 1.77313 3.99161 4.43845 0 ]xsh362.204 477.987 mo(\000\)\000X\000Q\000H\000U\000D\000O\000\003\000+\000R\000P\000H\000\017\000\003\000\024\000\034\000\023\000\024\000\003\000\025\000Q)[4.87729 4.43848 4.43845 4.43848 2.65887 4.43845 1.77313 2.22003 5.76315 4.43845 6.64886 4.43848 2.22 2.22003 4.43848 4.43845 4.43848 4.43845 2.22003 4.43845 0 ]xsh446.067 477.987 mo(\000G)sh452.849 477.987 mo(\000$)sh458.177 477.987 mo(\000Y\000H\000\003\0001\000:\000\013\000\026\000\030\000\023\000\030\000\030)[4.00436 4.44247 2.22406 5.76239 7.53873 2.6629 4.44247 4.44247 4.44247 4.44247 0 ]xsh507.024 477.987 mo(\000\014)sh512.276 477.987 mo(\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003)[2.22406 2.224 2.216 2.22406 2.216 2.22406 2.21686 2.224 2.216 0 ]xsh534.485 477.987 mo(\000\021)sh540.126 477.987 mo(\000\032\000\026\000\027\000\020\000\024\000\033\000\025)[4.4425 4.44244 4.4425 2.66284 4.4425 4.4425 0 ]xsh569.443 477.987 mo(\000\024)sh404.466 487.467 mo(\000\)\000D\000[\000\003\000\013\000\025\000\030\000\031\000\014\000\003\000\032\000\026\000\034\000\020\000\030\000\033\000\026)[4.87729 4.43848 3.99158 2.22003 2.65884 4.43848 4.43845 4.43848 2.65887 2.22 4.43848 4.43845 4.43848 2.65884 4.43848 4.43845 0 ]xsh470.136 487.467 mo(\000\025)shLTQVUW+Arial-BoldMT [9.96 0 0 -9.96 0 0 ]msf312 498.394 mo(\000'\000$\000/\000\(\0009\000,\000/\000/\000\(\000\261\000'\000D\000O\000H\000\003\000&)[7.21603 7.21606 6.11041 6.6683 6.66833 2.79379 6.11041 6.11041 6.6683 5.56268 7.21606 5.56268 2.79379 5.56268 2.75793 0 ]xsh404.234 498.394 mo(\000R)sh413.164 498.394 mo(\000$\000&\000\022\000\026\000\026)[7.21603 7.21606 2.79379 5.56268 0 ]xsh441.515 498.394 mo(\000\027)sh449.787 498.394 mo(\000>\000\024)[3.34152 0 ]xsh458.691 498.394 mo(\000\023\000\017)[5.56268 0 ]xsh467.047 498.394 mo(\000\024\000\032\000@\000\003)[5.56268 5.56268 3.34152 0 ]xshLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf484.223 498.394 mo(\000\026\000\031\000\026\000\025)[4.44003 4.44006 4.44003 0 ]xsh501.983 498.394 mo(\000\025)sh560.041 498.314 mo(\000\()sh321 508.337 mo(\0003\000R\000S\000X\000O\000D\000W\000L\000R\000Q\000\003\000\027\000\017\000\031\000\030)[5.32745 4.44165 4.44162 4.44162 1.77631 4.44165 2.22318 1.77631 4.44162 4.44165 2.21927 4.44162 2.22321 4.44162 0 ]xsh376.521 508.337 mo(\000\026)sh311.999 518.296 mo(\0006\000H\000D\000U\000F\000\\\000\003\000\)\000X\000Q\000H\000U\000D\000O\000\003\000+\000R\000P\000H\000\017\000\032\000\025\000\030\000\003\0006\000\003\000'\000D)[5.33148 4.44565 4.44565 2.66605 3.99878 3.99875 2.21844 4.88449 4.44565 4.44565 4.44565 2.66605 4.44562 1.78033 2.22003 5.77032 4.44565 6.65604 4.44565 4.50714 4.44565 4.44565 4.44565 2.21844 5.33148 2.2193 5.77032 0 ]xsh427.584 518.296 mo(\000O\000H\000Y\000L\000O\000O\000H\000\003\000$\000Y\000H\000\003)[1.77557 4.44089 3.99402 1.7756 1.77557 1.77557 4.44089 2.22247 5.32672 4.00595 4.44092 0 ]xsh464.903 518.296 mo(\000\021)sh469.34 518.296 mo(\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003)[2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 2.22244 2.22247 4.45438 2.22247 2.22247 2.22247 2.22241 2.22247 2.22247 2.22247 2.22241 2.22247 0 ]xsh536.023 518.296 mo(\000\021)sh541.639 518.296 mo(\000\030\000\034\000\033\000\020\000\024\000\025\000\026)[4.44092 4.44086 4.44092 2.66132 4.44086 4.44092 0 ]xsh570.946 518.296 mo(\000\027)sh404.463 527.84 mo(\000\)\000D\000[\000\003\000\013\000\026\000\026\000\027\000\014\000\003\000\030\000\034\000\033\000\020\000\024\000\025\000\026)[4.87729 4.43848 3.99158 2.22003 2.65884 4.43848 4.43845 4.43848 2.65887 2.22 4.43848 4.43845 4.43848 2.65884 4.43848 4.43845 0 ]xsh470.133 527.84 mo(\000\030)shLTQVUW+Arial-BoldMT [9.96 0 0 -9.96 0 0 ]msf312 538.714 mo(\000'\000$\0003\000+\0001\000\(\000\261\000%\000D\000O\000G\000Z\000L)[7.20114 7.20117 6.65341 7.20114 7.20117 6.65341 5.54779 7.20117 5.54776 2.77893 6.09549 7.75891 0 ]xsh391.82 538.714 mo(\000Q)sh400.654 538.714 mo(\000&)sh407.855 538.714 mo(\000R)sh416.749 538.714 mo(\000$)sh423.95 538.714 mo(\000&)sh431.151 538.714 mo(\000\022\000\025\000\030\000\024\000\003)[2.7789 5.54779 5.54779 5.54779 0 ]xsh453.402 538.714 mo(\000>\000\032\000@\000\003)[3.32663 5.54779 3.32663 0 ]xshLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf468.395 538.714 mo(\000\026\000\031\000\030\000\025)[4.44003 4.44006 4.44003 0 ]xsh486.155 538.714 mo(\000\031)sh558.657 538.634 mo(\000')sh320.996 548.657 mo(\0003\000R\000S\000X\000O\000D\000W\000L\000R\000Q\000\003\000\024\000\031\000\017\000\030\000\033)[5.32745 4.44165 4.44162 4.44162 1.77631 4.44165 2.22318 1.77631 4.44162 4.44165 2.21927 4.44162 4.44165 2.22318 4.44162 0 ]xsh380.959 548.657 mo(\000\024)sh311.995 558.68 mo(\000+\000X\000J\000K\000H\000V\000\003\000\)\000X\000Q\000H\000U\000D\000O\000\003\000+\000R\000P\000H\000\003\000\011\000\003\000&\000U\000H\000P\000D\000W\000R\000U)[5.76715 4.4425 4.44247 4.44247 4.44247 3.99561 2.22403 4.87415 4.44247 4.44247 4.44247 2.6629 4.44247 1.77716 2.22403 5.76242 4.44247 6.65289 4.44247 2.22403 5.32272 2.22403 5.7616 2.66287 4.44247 6.65289 4.44247 2.22403 4.44247 0 ]xsh435.422 558.68 mo(\000\\)sh438.689 558.68 mo(\000\017)sh443.154 558.68 mo(\000\025\000\031\000\025\000\023\000\034\000\003\0003\000R\000O\000O\000D\000U\000G\000\003\0005)[4.44247 4.44247 4.44247 4.4425 4.44247 2.22403 5.32272 4.44247 1.77716 1.77716 4.44247 2.6629 4.44247 2.22403 0 ]xsh500.449 558.68 mo(\000G)sh507.409 558.68 mo(\000\021)sh511.918 558.68 mo(\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003)[2.22403 2.22406 2.216 2.22406 2.216 2.224 2.21686 2.22406 2.21686 0 ]xsh534.128 558.68 mo(\000\021)sh539.768 558.68 mo(\000\031\000\025\000\024\000\020\000\030\000\033\000\034)[4.4425 4.44244 4.4425 2.66284 4.4425 4.4425 0 ]xsh569.086 558.68 mo(\000\023)sh404.459 568.16 mo(\000\)\000D\000[\000\003\000\013\000\025\000\030\000\024\000\014\000\003\000\031\000\025\000\024\000\020\000\030\000\033\000\034)[4.87729 4.43848 3.99158 2.22003 2.65884 4.43848 4.43845 4.43848 2.65887 2.22 4.43848 4.43845 4.43848 2.65884 4.43848 4.43845 0 ]xsh470.13 568.16 mo(\000\025)sh312.003 577.64 mo[5.32745 6.65204 4.44162 1.77634 1.77631 1.52887 3.99475 2.22318 6.65204 4.44162 2.66205 2.22318 4.44162 4.44165 2.66202 3.99475 2.21844 2.22318 4.44165 3.99472 2.22321 5.32745 2.2193 5.76633 2.66202 4.44162 6.65204 4.44162 2.22318 1.77631 4.44165 4.44162 2.21844 5.32745 4.44162 2.66205 3.99475 1.77631 3.99475 4.44162 3.99475 2.22318 2.2193 2.22321 2.2193 2.22314 2.21844 2.22321 2.2193 2.22318 2.21844 2.22318 2.2193 2.22321 2.21844 2.22318 2.21841 2.22321 2.2193 2.22318 2.22318 2.22321 2.21844 2.22321 2.21924 2.22321 2.21844 2.22321 2.2193 2.22314 2.22321 2.22321 2.21844 4.44159 4.44165 4.44165 2.66199 4.44165 4.44165 0 ]xsh563.984 577.64 mo(\000\034)sh399.998 587.177 mo(\000\033\000\033\000\025\000\025\000\003\000&\000R\000X\000Q\000W\000\\\000\003\0005\000R\000D\000G\000\003\000\031)[4.43774 4.43771 4.43774 4.43771 2.2193 5.76242 4.43771 4.43774 4.43771 2.2193 3.99084 2.27994 5.76242 4.43771 4.43774 4.43771 2.28311 0 ]xsh473.33 587.177 mo(\000\027)sh403.829 596.673 mo(\000\)\000D\000[\000\003\000\013\000\025\000\030\000\024\000\014\000\003\000\034\000\034\000\023\000\020\000\026\000\032\000\025)[4.87729 4.43848 3.99158 2.22003 2.65884 4.43848 4.43845 4.43848 2.65887 2.22 4.43848 4.43845 4.43848 2.65884 4.43848 4.43845 0 ]xsh469.499 596.673 mo(\000\034)sh326.766 606.169 mo(\000:\000R\000O\000I\000H\000\020\000%\000D\000\\\000Y\000L\000H\000Z\000\003\000\)\000X\000Q\000O\000\003\000+\000P\000V\000\003\000\011\000\003\000&\000U\000H\000P\000D\000W\000R\000U\000\\\000\003\000,\000Q\000F\000\017\000\003\000\025\000\032\000\027\000\023\000\034\000\003\0008\0006\000\003\000+\000Z\000\\\000\003\000\034)[7.53714 4.44089 1.77557 2.22247 4.44089 2.66132 5.32672 4.44089 3.99402 3.99402 1.7756 4.44089 5.76556 2.22247 4.87973 4.44089 4.44092 1.77557 2.22247 5.76556 6.65131 3.99402 2.22244 5.32675 2.22244 5.76559 2.66129 4.44089 6.65131 4.44092 2.22244 4.44089 2.66132 3.99402 2.22244 2.22244 4.44092 3.99402 2.22247 2.22244 4.44089 4.44092 4.44089 4.44089 4.44092 2.22244 5.76559 5.32672 2.22247 5.76556 5.76556 3.99402 2.22247 0 ]xsh540.279 606.169 mo(\000\033)sh548.793 606.169 mo(\000\021\000\003)[2.22247 0 ]xsh385.842 615.665 mo(\000\031\000\025\000\030\000\020\000\025\000\034\000\023\000\023\000\003)[4.44089 4.44092 4.44089 2.66129 4.44092 4.44089 4.44089 4.44089 0 ]xsh421.812 615.665 mo(\000\)\000D\000[\000\003\000\013\000\025\000\030\000\024\000\014\000\003\000\031\000\025\000\030\000\020\000\025\000\033\000\033)[4.87729 4.43848 3.99158 2.22003 2.65884 4.43848 4.43845 4.43848 2.65887 2.22 4.43848 4.43845 4.43848 2.65884 4.43848 4.43845 0 ]xsh487.482 615.665 mo(\000\033)shLTQVUW+Arial-BoldMT [7.98 0 0 -7.98 0 0 ]msf318.012 625.145 mo(\000\013\0006\000H\000H\000\003\000$\000G\000\003\000\)\000D\000L\000U\000K\000R\000S\000H)[2.6557 5.32114 4.4353 4.43527 2.21686 5.75998 4.87415 2.21686 4.87415 4.43527 2.21686 3.10272 4.87411 4.87415 4.87415 0 ]xsh383.614 625.145 mo(\000\014)shLTQVUW+Arial-BoldMT [9.96 0 0 -9.96 0 0 ]msf312 636.574 mo(\000'\000\(\000&\000$\0007\0008\0005\000\261\0000\000R\000U\000J\000D\000Q\000\003\000&)[7.22 6.67227 7.22 7.22 6.11435 7.22 7.22 5.56662 8.32547 6.11438 3.90338 6.11435 5.56665 6.11435 2.75793 0 ]xsh412.57 636.574 mo(\000R)sh421.411 636.574 mo(\000$)sh428.631 636.574 mo(\000&\000\022\000\025\000\030)[7.22 2.79776 5.56662 0 ]xsh449.782 636.574 mo(\000\031)sh458.133 636.574 mo(\000>\000\034\000@\000\003)[3.34549 5.56662 3.34549 0 ]xshLTQVUX+ArialMT [7.98 0 0 -7.98 0 0 ]msf473.168 636.574 mo(\000\026\000\030\000\031\000\023)[4.44003 4.44006 4.44003 0 ]xsh490.928 636.574 mo(\000\024)sh559.559 636.494 mo(\000%)sh320.997 646.517 mo(\0003\000R\000S\000X\000O\000D\000W\000L\000R\000Q\000\003\000\030\000\026\000\017\000\034\000\025)[5.32745 4.44165 4.44162 4.44162 1.77631 4.44162 2.22321 1.77631 4.44162 4.44162 2.2193 4.44165 4.44162 2.22318 4.44162 0 ]xsh380.96 646.517 mo(\000\034)sh311.996 656.476 mo[5.76474 4.44003 3.99316 4.44003 4.44006 1.77472 4.44003 3.99316 2.22162 4.87888 4.44006 4.44003 4.44003 2.66046 4.44003 1.77472 2.22162 5.76471 4.44006 6.65045 4.44003 2.22162 2.22159 4.44006 4.44003 4.44003 2.22162 4.44003 4.44003 2.22162 4.44006 2.22159 5.3259 3.99316 4.44003 2.22159 5.76474 7.53629 2.22162 2.21527 2.22162 2.21686 2.22159 2.21686 2.22159 2.216 2.22162 2.22162 2.22159 2.21686 2.22159 2.21686 2.22162 2.216 2.22162 2.21686 2.22159 2.22159 2.22162 2.21686 2.22162 2.21686 2.22156 2.21606 2.22156 2.21686 2.22162 2.21686 2.22162 4.44006 4.44 4.44006 2.66046 4.44 4.44006 0 ]xsh563.231 656.476 mo(\000\025)sh404.452 666.02 mo(\000\)\000D\000[\000\003\000\013\000\025\000\030\000\031\000\014\000\003\000\026\000\030\000\026\000\020\000\031\000\033\000\031)[4.87888 4.44006 3.99316 2.22159 2.66046 4.44003 4.44003 4.44006 2.66043 2.22162 4.44003 4.44006 4.44003 2.66043 4.44006 4.44003 0 ]xsh470.15 666.02 mo(\000\025)sh311.988 675.5 mo(\0005\000L\000G\000R\000X\000W\000\012\000V\000\003\000%\000U\000R\000Z\000Q\000\020\0006\000H\000U\000Y\000L\000F\000H\000\003\000\)\000X\000Q\000H\000U\000D)[5.76715 1.77716 4.4425 4.44247 4.44247 2.22403 1.52975 3.99557 2.22406 5.32187 2.66287 4.44247 5.76718 4.44247 2.66287 5.32831 4.4425 2.66287 3.99561 1.77716 3.99561 4.44247 2.22403 4.87415 4.44247 4.44247 4.44247 2.6629 0 ]xsh422.308 675.5 mo(\000O\000\003\000+\000R\000P\000H\000\003\000\021\000\003\000\021\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\026\000\030\000\026\000\020\000\024\000\030\000\024)[1.77313 2.22003 5.76315 4.43845 6.64886 6.9769 2.22003 2.22003 2.22 4.49118 2.22003 2.22003 2.22003 2.22 2.22003 2.22 2.22003 2.22003 2.22003 2.22 2.22003 2.22 2.22003 2.22003 2.22003 2.22 2.22003 2.22003 2.22 2.22003 4.46002 2.22003 2.22003 2.21997 2.22003 2.22003 2.22003 2.22003 2.22003 2.22003 2.21997 5.61877 4.43842 4.43848 4.43848 2.65887 4.43842 4.43848 0 ]xsh567.249 675.5 mo(\000\024)sh409.328 684.981 mo(\000\032\000\024)[4.44247 0 ]xsh418.213 684.981 mo(\000\024)sh424.937 684.981 mo(\0000\000H\000P\000R\000U\000L\000D\000O\000\003\000'\000U\000\003)[6.65289 4.44247 6.65286 4.4425 2.66287 1.77716 4.44247 1.77716 2.22406 5.76239 2.6629 0 ]xsh414.26 694.333 mo(\0006\000:\000\003\000\))[5.32831 7.53873 2.22406 0 ]xsh434.218 694.333 mo(\000D\000[\000\003\000\013\000\025\000\030\000\031\000\014\000\003)[4.43845 3.99161 2.22 2.65887 4.43848 4.43845 4.43845 2.65887 0 ]xsh422.008 703.686 mo(\000\026\000\030\000\026\000\020\000\024\000\030\000\030\000\026)[4.43845 4.43848 4.43845 2.65887 4.43848 4.43845 4.43848 0 ]xsh311.98 703.997 mo(\0005\000R\000V\000H\000O\000D\000Z\000Q\000\003\000\)\000X\000Q\000H\000U\000D\000O\000\003\000+\000R\000P\000H\000\017\000\003\000\032\000\027\000\024\000\003\000'\000D\000Q\000Y\000L\000O\000O\000H\000\003\0005\000G)[5.76874 4.44406 3.99719 4.44406 1.77875 4.44406 5.76874 4.44406 2.22565 4.87411 4.44406 4.44406 4.44406 2.66449 4.44403 1.77875 2.22565 5.76239 4.44409 6.65445 4.44406 2.22562 2.22562 4.43774 4.44406 4.44406 2.22562 5.76242 4.44406 4.44406 3.99719 1.77875 1.77875 1.77875 4.44403 2.22565 5.76239 0 ]xsh462.323 703.997 mo(\0006\000:\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003)[5.32431 7.5347 1.51147 2.22003 2.22 2.22003 2.22003 2.22 2.22003 2.22003 2.22 2.22003 2.22003 2.22 2.22003 2.22003 0 ]xsh507.774 703.997 mo(\000\021)sh512.262 703.997 mo(\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003)[2.22003 2.22003 2.22003 2.21997 2.22003 2.22003 2.22003 2.22003 2.22003 0 ]xsh534.462 703.997 mo(\000\021)sh540.088 703.997 mo(\000\026\000\030\000\026\000\020\000\025\000\034\000\034)[4.43848 4.43842 4.43848 2.65887 4.43848 4.43848 0 ]xsh569.378 703.997 mo(\000\031)sh404.436 713.477 mo(\000\)\000D\000[\000\003\000\013\000\025\000\030\000\031\000\014\000\003\000\026\000\030\000\030\000\020\000\027\000\026\000\034)[4.87729 4.43848 3.99158 2.22003 2.65884 4.43848 4.43845 4.43848 2.65887 2.22 4.43848 4.43845 4.43848 2.65884 4.43848 4.43845 0 ]xsh470.107 713.477 mo(\000\034)sh311.972 723.013 mo(\0006\000K\000D\000U\000S\000O\000H\000\\\000\003\000\)\000X\000Q\000H\000U\000D\000O\000\003\000+\000R\000P\000H\000\017\000\003\000\027\000\024\000\023\000\003\0005\000D\000L\000O\000U\000R\000D\000G\000\003\0006\000W\000\003\0001\000:\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003)[5.32675 4.44089 4.44089 2.66132 4.44089 1.77557 4.44089 3.99402 2.22247 4.87973 4.44089 4.44092 4.44089 2.66129 4.44092 1.77557 2.22244 5.76559 4.44089 6.65131 4.44089 2.22247 2.22244 4.44089 4.44092 4.44089 2.22244 5.76559 4.44089 1.77557 1.77557 2.66132 4.44089 4.44089 4.44092 2.22247 5.32672 2.22247 2.22244 5.76559 7.53711 2.22247 2.22247 2.22244 2.22244 2.22247 2.22247 2.22244 2.22244 2.22247 2.22244 2.22244 2.22247 2.22247 2.22244 2.22244 2.22247 2.22247 2.22244 2.22244 2.22247 2.22247 0 ]xsh520.238 723.013 mo(\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\026\000\030\000\026\000\020\000\031\000\027\000\024)[2.22247 2.22241 2.22247 2.22247 2.22247 2.22241 2.22247 2.22247 4.44092 4.44086 4.44092 2.66132 4.44086 4.44092 0 ]xsh567.324 723.013 mo(\000\026)sh404.436 732.494 mo(\000\)\000D\000[\000\003\000\013\000\025\000\030\000\031\000\014\000\003\000\026\000\030\000\026\000\020\000\031\000\027\000\032)[4.87729 4.43848 3.99158 2.22003 2.65884 4.43848 4.43845 4.43848 2.65887 2.22 4.43848 4.43845 4.43848 2.65884 4.43848 4.43845 0 ]xsh470.107 732.494 mo(\000\025)sh311.972 741.974 mo(\0006\000K\000H\000O\000W\000R\000Q\000\003\000\)\000X\000Q\000H\000U\000D\000O\000\003\000+\000R\000P\000H\000\003\000,\000Q\000F\000\017\000\003\000\025\000\024\000\023\000\030\000\003\000%\000H\000O\000W\000O\000L\000Q)[5.32272 4.43689 4.43686 1.77158 2.21841 4.43689 4.43689 2.28308 4.87573 4.43686 4.43689 4.43689 2.65726 4.43689 1.77158 2.22318 5.76157 4.43689 6.64728 4.43686 2.22403 2.21844 4.43689 3.98999 2.21844 2.21844 4.43689 4.43686 4.43689 4.43686 2.22406 5.32269 4.43689 1.77155 2.21844 1.77158 1.77158 0 ]xsh450.888 741.974 mo(\000H\000\003\0005\000G\000\003\0006)[4.44247 2.21844 5.76715 4.44247 2.21844 0 ]xsh475.305 741.974 mo(\000:)sh485.202 741.974 mo(\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003)[2.22403 2.2193 2.22403 2.2193 2.22406 2.21841 2.22406 2.21844 2.22403 0 ]xsh507.421 741.974 mo(\000\021)sh511.911 741.974 mo(\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003\000\021\000\003)[2.22403 2.21844 2.22406 2.21844 2.224 2.2193 2.22406 2.21844 2.224 0 ]xsh534.13 741.974 mo(\000\021)sh539.761 741.974 mo(\000\026\000\030\000\026\000\020\000\024\000\031\000\025)[4.4425 4.44244 4.4425 2.66284 4.4425 4.4425 0 ]xsh569.079 741.974 mo(\000\023)sh404.428 751.51 mo(\000\)\000D\000[\000\003\000\013\000\025\000\030\000\031\000\014\000\003\000\026\000\030\000\026\000\020\000\024\000\031\000\025)[4.87729 4.43848 3.99158 2.22003 2.65884 4.43848 4.43845 4.43848 2.65887 2.22 4.43848 4.43845 4.43848 2.65884 4.43848 4.43845 0 ]xsh470.136 751.517 mo(\000\024)shgrestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
/LTQVUZ+Arial-ItalicMT-Identity-H uf/LTQVUZ+Arial-ItalicMT /CIDFont ur/LTQVUX+ArialMT-Identity-H uf/LTQVUX+ArialMT /CIDFont ur/LTQVUY+Arial-BoldItalicMT-Identity-H uf/LTQVUY+Arial-BoldItalicMT /CIDFont ur/LTQVUW+Arial-BoldMT-Identity-H uf/LTQVUW+Arial-BoldMT /CIDFont urAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
